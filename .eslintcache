[{"D:\\xampp\\htdocs\\seat-plan\\src\\components\\ViewSeatPlan.js":"1","D:\\xampp\\htdocs\\seat-plan\\src\\index.js":"2","D:\\xampp\\htdocs\\seat-plan\\src\\Login.js":"3","D:\\xampp\\htdocs\\seat-plan\\src\\Dashboard.js":"4","D:\\xampp\\htdocs\\seat-plan\\src\\components\\CreateSeatPlan.js":"5","D:\\xampp\\htdocs\\seat-plan\\src\\components\\CreateSeatPlanNew.js":"6","D:\\xampp\\htdocs\\seat-plan\\src\\components\\CreateFloor.js":"7","D:\\xampp\\htdocs\\seat-plan\\src\\components\\SeatPlanTableRow.js":"8","D:\\xampp\\htdocs\\seat-plan\\src\\Footer.js":"9","D:\\xampp\\htdocs\\seat-plan\\src\\components\\SelectBuilding.js":"10","D:\\xampp\\htdocs\\seat-plan\\src\\components\\CreateBuilding.js":"11","D:\\xampp\\htdocs\\seat-plan\\src\\components\\SelectFloor.js":"12","D:\\xampp\\htdocs\\seat-plan\\src\\components\\CreateRoom.js":"13","D:\\xampp\\htdocs\\seat-plan\\src\\components\\TopNav.js":"14"},{"size":8788,"mtime":1614237277731,"results":"15","hashOfConfig":"16"},{"size":616,"mtime":1614237030022,"results":"17","hashOfConfig":"16"},{"size":2750,"mtime":1614105080808,"results":"18","hashOfConfig":"16"},{"size":13876,"mtime":1614232695064,"results":"19","hashOfConfig":"16"},{"size":2406,"mtime":1614105080811,"results":"20","hashOfConfig":"16"},{"size":16955,"mtime":1614105080811,"results":"21","hashOfConfig":"16"},{"size":4260,"mtime":1614105080809,"results":"22","hashOfConfig":"16"},{"size":1863,"mtime":1614105080812,"results":"23","hashOfConfig":"16"},{"size":566,"mtime":1614237677778,"results":"24","hashOfConfig":"16"},{"size":3876,"mtime":1614105080812,"results":"25","hashOfConfig":"16"},{"size":3466,"mtime":1614105080809,"results":"26","hashOfConfig":"16"},{"size":4814,"mtime":1614105080812,"results":"27","hashOfConfig":"16"},{"size":10356,"mtime":1614105080810,"results":"28","hashOfConfig":"16"},{"size":586,"mtime":1614105080813,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},"1lepqo6",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"33"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"33"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"33"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"33"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\xampp\\htdocs\\seat-plan\\src\\components\\ViewSeatPlan.js",["64","65","66","67","68","69","70","71","72"],"import React, { useState, useEffect } from \"react\";\r\nimport Axios from 'axios';\r\nimport \"./ViewSeatPlan.css\";\r\nimport TopNav from \"./TopNav\";\r\nimport SeatPlanTableRow from \"./SeatPlanTableRow\";\r\nimport Footer from \"./../Footer\";\r\n\r\nexport default function ViewSeatPlan(props) {\r\n    const [eiinNo, setEIIN] = useState(localStorage.getItem('eiin'));\r\n    const [examId, setExamId] = useState(\"\");\r\n    const [options, setOption] = useState([]);\r\n    const [rows, setRow] = useState([]); //for table tr\r\n    const [isDownloadVisible, setDownloadVisible] = useState(false);\r\n\r\n\r\n    //Get data on component load event\r\n    useEffect(() => {\r\n        let postData = new FormData();\r\n        // postData.append(\"eiin\", eiinNo);\r\n        postData.append(\"examId\", examId);\r\n        Axios.post(`${window.$baseUrl}/seat-plan/api/exam.php?action=list`, postData).then(response => {\r\n            const items = response.data;\r\n            let local_count = 0;\r\n            items.map((item) => {\r\n                local_count += 1;\r\n                setOption(options => [...options, <SelectOption key={local_count} id={item.id} name={item.name} />]);\r\n            })\r\n\r\n        }).catch(error => {\r\n            console.log(error);\r\n            alert(\"Something goes wrong. Please try again\");\r\n        }); //end of axios.\r\n    }, []); //end of useEffect\r\n\r\n    const selectOptions = options.map(item => (\r\n        item\r\n    ))\r\n\r\n    const tableRows = rows.map(item => (\r\n        item\r\n    ))\r\n\r\n\r\n    const [totalCapacity, setTotalCapacity] = useState(0);\r\n\r\n    //This function is passed to Building and called from there.\r\n    const roomDeleted = (value) => {\r\n        setRow([]);\r\n        setTotalCapacity(0);\r\n        let selectedExamId = document.getElementById(\"examIdCombo\").value;\r\n        let postData = new FormData();\r\n        postData.append(\"eiin\", eiinNo);\r\n        postData.append(\"examId\", selectedExamId);\r\n\r\n        Axios.post(`${window.$baseUrl}/seat-plan/api/view-seat-plan.php?action=list`, postData).then(response => {\r\n            const items = response.data;\r\n            let local_count = 0;\r\n            items.map((item) => {\r\n                local_count += 1;\r\n                setTotalCapacity(prevTotal => prevTotal + parseInt(item.capacity));\r\n                setRow(rows => [...rows, <SeatPlanTableRow roomDeleted={roomDeleted} key={item.id} id={item.id} b={item.building} f={item.floor} r={item.roomNo} startRoll={item.startRoll} endRoll={item.endRoll} total={item.capacity} />]);\r\n            })\r\n            // setCount(count => count + local_count);\r\n            //setCount(local_count);\r\n        }).catch(error => {\r\n            console.log(error);\r\n            alert(\"Something goes wrong. Please try again\");\r\n        }); //end of axios.\r\n\r\n    };\r\n\r\n    const examChanged = (e) => {\r\n        let examId = e.target.value;\r\n        if (examId == \"\") {\r\n            setRow([]);\r\n            setTotalCapacity(0);\r\n            setDownloadVisible(false);\r\n            return;\r\n        }\r\n        \r\n        let postData = new FormData();\r\n        postData.append(\"eiin\", eiinNo);\r\n        postData.append(\"examId\", examId);\r\n        Axios.post(`${window.$baseUrl}/seat-plan/api/view-seat-plan.php?action=list`, postData).then(response => {\r\n            const items = response.data;\r\n            let local_count = 0;\r\n            items.map((item) => {\r\n                local_count += 1;\r\n                setTotalCapacity(prevTotal => prevTotal + parseInt(item.capacity));\r\n                //setRow(rows => [...rows, <TableRow key={local_count} b={item.building} f={item.floor} r={item.roomNo} startRoll={item.startRoll} endRoll={item.endRoll} total={item.capacity} />]);\r\n\r\n                setRow(rows => [...rows, <SeatPlanTableRow roomDeleted={roomDeleted} key={item.id} id={item.id} b={item.building} f={item.floor} r={item.roomNo} startRoll={item.startRoll} endRoll={item.endRoll} total={item.capacity} />]);\r\n            })\r\n            // setCount(count => count + local_count);\r\n            //setCount(local_count);\r\n        }).catch(error => {\r\n            console.log(error);\r\n            alert(\"Something goes wrong. Please try again\");\r\n        }); //end of axios.\r\n\r\n        //make download button visible\r\n        setDownloadVisible(true);\r\n    }\r\n\r\n    const downloadClicked = (e)=>{\r\n        let selectedExamId = document.getElementById(\"examIdCombo\").value;\r\n        let postData = new FormData();\r\n        postData.append(\"eiin\", eiinNo);\r\n        postData.append(\"examId\", selectedExamId);\r\n\r\n        // axios({\r\n        //     method: 'post',\r\n        //     url: '/user/12345',\r\n        //     data: {\r\n        //       firstName: 'Fred',\r\n        //       lastName: 'Flintstone'\r\n        //     }\r\n        //   });\r\n\r\n        Axios({\r\n            url: `${window.$baseUrl}/seat-plan/api/csv.php`,\r\n            method: 'post',\r\n            // responseType: 'blob', // important\r\n            data : postData\r\n          }).then((response) => {\r\n            \r\n             const url = `${window.$baseUrl}/seat-plan/api/csv-files/${eiinNo}.csv`;\r\n             const link = document.createElement('a');\r\n             link.href = url;\r\n            link.target = \"_blank\";\r\n            link.setAttribute(\r\n                'download',\r\n                `Data.csv`,\r\n                );\r\n             document.body.appendChild(link);\r\n             link.click();\r\n            //  document.body.removeChild(link);\r\n            // Clean up and remove the link\r\n            link.parentNode.removeChild(link);\r\n\r\n\r\n          });\r\n\r\n        // Axios.post(`${window.$baseUrl}/seat-plan/api/csv.php`, postData).then(response => {\r\n        //     const items = response.data;\r\n        //     let local_count = 0;\r\n              \r\n            \r\n        // }).catch(error => {\r\n        //     console.log(error);\r\n        //     alert(\"Something goes wrong. Please try again\");\r\n        // }); //end of axios.\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"master-wrapper\">\r\n                <header style={{ marginBottom: \"0\", paddingTop: \"0\", boxShadow: \"none\" }}>\r\n                    <TopNav />\r\n                </header>\r\n                <main>\r\n                    {/* A good combobox here - https://react-select.com/home */}\r\n                    <h1>Seat Plan Details</h1>\r\n                    <div className=\"seatPlanCont box-shadow\">\r\n                        <select id=\"examIdCombo\" onChange={examChanged}>\r\n                            <option value=\"\">select an exam</option>\r\n                            {selectOptions}\r\n                        </select>\r\n                        <table>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Building</th>\r\n                                    <th>Floor</th>\r\n                                    <th>Room No.</th>\r\n                                    <th>Start Roll</th>\r\n                                    <th>End Roll</th>\r\n                                    <th>Total</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {tableRows}\r\n                            </tbody>\r\n                            <tfoot>\r\n                                <tr>\r\n                                    <td colSpan=\"5\">Grand Total = </td>\r\n                                    <td>{totalCapacity}</td>\r\n                                </tr>\r\n                            </tfoot>\r\n                        </table>\r\n                        {\r\n                            isDownloadVisible && (\r\n                                <div className=\"downloadButton\" onClick={downloadClicked}>Download CSV</div>\r\n                            )\r\n                        }\r\n                        \r\n                    </div>\r\n                    \r\n                </main>\r\n                <footer>\r\n                    <Footer />\r\n                </footer>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction SelectOption(props) {\r\n    return (\r\n        <option value={props.id}>{props.name}</option>\r\n    );\r\n}\r\n\r\n// function TableRow(props){\r\n//     return(\r\n//         <tr>\r\n//             <td>\r\n//                 {props.b}\r\n//             </td>\r\n//             <td>\r\n//                 {props.f}\r\n//             </td>\r\n//             <td>\r\n//                 {props.r}\r\n//             </td>\r\n//             <td>\r\n//                 {props.startRoll==0?props.startRoll:\"-\"}\r\n//             </td>\r\n//             <td>\r\n//                 {props.endRoll==0?props.endRoll:\"-\"}\r\n//             </td>\r\n//             <td>\r\n//                 {props.total}\r\n//             </td>\r\n//         </tr>\r\n//     );\r\n// }",["73","74"],"D:\\xampp\\htdocs\\seat-plan\\src\\index.js",[],"D:\\xampp\\htdocs\\seat-plan\\src\\Login.js",[],"D:\\xampp\\htdocs\\seat-plan\\src\\Dashboard.js",["75","76","77","78","79"],"import React, { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nimport './bootstrap-grid.css';\r\nimport './teletalk.css';\r\nimport TopNav from \"./components/TopNav\";\r\nimport Footer from \"./Footer\";\r\n\r\nexport default function Dashboard(props) {\r\n    const [eiinNo, setEIIN] = useState(localStorage.getItem('eiin'));\r\n\r\n    if (eiinNo == null || eiinNo === \"\") {\r\n        props.history.push('/');\r\n    }\r\n\r\n    const [district, setDistrict] = useState(\"\");\r\n    const [thana, setThana] = useState(\"\");\r\n    const [type, setType] = useState(\"\");\r\n    // const [level, setLevel] = useState(\"\");\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [address, setAddress] = useState(\"\");\r\n    const [post, setPost] = useState(\"\");\r\n    const [headMobile, setHeadMobile] = useState(\"\");\r\n    const [asstHeadMobile, setAsstHeadMobile] = useState(\"\");\r\n    const [clerkMobile, setClerkMobile] = useState(\"\");\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const[saveResult, setSaveResult] = useState(\"\");\r\n    const[buttonText, setButtonText]=useState(\"Save Profile\");\r\n    const[isDisbale, setDisable]=useState(\"\");\r\n\r\n    //Get data on component load event\r\n    useEffect(() => {\r\n        let postData = new FormData();\r\n        postData.append(\"eiin\", eiinNo);\r\n        //Get institute profile details -->\r\n        Axios.post(`${window.$baseUrl}/seat-plan/api/institute-details.php?action=get`, postData).then(response => {\r\n            if (response.data) {\r\n                let data = response.data;\r\n                setDistrict(data.district);\r\n                setThanaList(thanaList => [...thanaList, <SelectOption key={1} id={data.thana} name={data.thana} />]);\r\n                setThana(data.thana);\r\n                setType(data.type);\r\n                // setLevel(data.level);\r\n                setName(data.name);\r\n                setAddress(data.address);\r\n                setPost(data.post);\r\n                setHeadMobile(data.headMobile);\r\n                setAsstHeadMobile(data.asstHeadMobile);\r\n                setClerkMobile(data.clerkMobile);\r\n                setEmail(data.email);\r\n                setPassword(data.password);\r\n            }\r\n        }).catch(error => {\r\n            console.log(error);\r\n            alert(\"Something goes wrong. Please try again\");\r\n        }); //<--Get institute profile details\r\n\r\n\r\n        Axios.post(`${window.$baseUrl}/seat-plan/api/div-dist-thana.php?action=districtList`).then(response => {\r\n            const items = response.data.districts;\r\n            let local_count = 0;\r\n            items.map((item) => {\r\n                local_count += 1;\r\n                setDistrictList(districtList => [...districtList, <SelectOption key={local_count} id={item.district} name={item.district} />]);\r\n            })\r\n           \r\n            }).catch(error => {\r\n                console.log(error);\r\n                alert(\"Something goes wrong. Please try again\");\r\n            }); //end of axios.\r\n\r\n    }, []);\r\n\r\n    const[districtList, setDistrictList]=useState([]);\r\n    const districtOptions = districtList.map(item => (\r\n        item\r\n    ))\r\n\r\n    const[thanaList, setThanaList]=useState([]);\r\n    const thanaOptions = thanaList.map(item => (\r\n        item\r\n    ))\r\n\r\n    const districtChanged = event => {\r\n        setDistrict(event.target.value);\r\n        setThanaList([]);\r\n        let formData = new FormData();\r\n        formData.append(\"district\", event.target.value);\r\n        Axios.post(`${window.$baseUrl}/seat-plan/api/div-dist-thana.php?action=thanaList`, formData).then(response => {\r\n            const items = response.data.thanas;\r\n            let local_count = 0;\r\n            items.map((item) => {\r\n                local_count += 1;\r\n                setThanaList(thanaList => [...thanaList, <SelectOption key={local_count} id={item.thana} name={item.thana} />]);\r\n            })\r\n        }).catch(error => {\r\n            console.log(error);\r\n            alert(\"Something goes wrong. Please try again\");\r\n        }); //end of axios.\r\n    }\r\n\r\n    const thanaChanged = event => {\r\n        setThana(event.target.value);\r\n    }\r\n\r\n    const typeChanged = event => {\r\n        setType(event.target.value);\r\n    }\r\n\r\n    // const levelChanged = event => {\r\n    //     setLevel(event.target.value);\r\n    // }\r\n\r\n    const nameChanged = event => {\r\n        setName(event.target.value);\r\n    }\r\n\r\n    const addressChanged = event => {\r\n        setAddress(event.target.value);\r\n    }\r\n\r\n    const postChanged = event => {\r\n        setPost(event.target.value);\r\n    }\r\n\r\n    const headMobileChanged = e => {\r\n        e.preventDefault();\r\n        const re = /^[0-9\\b]+$/;\r\n        if (e.target.value === '' || re.test(e.target.value)) {\r\n            setHeadMobile(e.target.value);\r\n        }\r\n    }\r\n\r\n    const asstHeadMobileChanged = e => {\r\n        e.preventDefault();\r\n        const re = /^[0-9\\b]+$/;\r\n        if (e.target.value === '' || re.test(e.target.value)) {\r\n            setAsstHeadMobile(e.target.value);\r\n        }\r\n    }\r\n\r\n    const clerkMobileChanged = e => {\r\n        e.preventDefault();\r\n        const re = /^[0-9\\b]+$/;\r\n        if (e.target.value === '' || re.test(e.target.value)) {\r\n            setClerkMobile(e.target.value);\r\n        }\r\n    }\r\n\r\n    const emailChanged = event => {\r\n        setEmail(event.target.value);\r\n    }\r\n\r\n    const passwordChanged = event => {\r\n        setPassword(event.target.value);\r\n    }\r\n\r\n\r\n    const saveProfile = (e) => {\r\n        e.preventDefault();\r\n        let updatedData = new FormData();\r\n        updatedData.append(\"eiin\", eiinNo);\r\n        updatedData.append(\"district\", district);\r\n        updatedData.append(\"thana\", thana);\r\n        updatedData.append(\"type\", type);\r\n        // updatedData.append(\"level\", level);\r\n        updatedData.append(\"name\", name);\r\n        updatedData.append(\"address\", address);\r\n        updatedData.append(\"post\", post);\r\n        updatedData.append(\"headMobile\", headMobile);\r\n        updatedData.append(\"asstHeadMobile\", asstHeadMobile);\r\n        updatedData.append(\"clerkMobile\", clerkMobile);\r\n        updatedData.append(\"email\", email);\r\n        updatedData.append(\"password\", password);\r\n\r\n        setDisable(\"disabled\");\r\n         setButtonText(\"saving ...\");\r\n\r\n        Axios.post(`${window.$baseUrl}/seat-plan/api/institute-details.php?action=save`, updatedData).then(response => {\r\n            if (response.data.issuccess) {\r\n                setSaveResult(\"Saved successfully.\");\r\n                    setDisable(\"\");\r\n                    setButtonText(\"Save Profile\");\r\n                    setTimeout(() => {\r\n                        setSaveResult(\" \");\r\n                    }, 4000);\r\n            }\r\n            else {\r\n                alert(response.data.message);\r\n                setDisable(\"\");\r\n                    setButtonText(\"Try again\");\r\n            }\r\n        }).catch(error => {\r\n            console.log(error);\r\n            setDisable(\"\");\r\n            setButtonText(\"Try again\");\r\n        });//end of axios\r\n        \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"master-wrapper\">\r\n                <header style={{marginBottom:\"0\", paddingTop:\"0\", boxShadow:\"none\"}}>\r\n                    <TopNav />\r\n                </header>\r\n                <main>\r\n\r\n              \r\n            \r\n            <h1 style={{ marginBottom: \"30px\" }}>\r\n                Institute Profile\r\n                </h1>\r\n            <div className=\"container box-shadow\" style={{ marginBottom: '50px', padding: \"20px\" }}>\r\n\r\n                <form className=\"classic\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                            <div key=\"nameDiv\" className=\"field\">\r\n                                <label>Institute Name</label>\r\n                                <input onChange={nameChanged} id=\"name\" name=\"name\" value={name} type=\"text\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                       \r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-4\">\r\n                            <div key=\"eiinDiv\" className=\"field\">\r\n                                <label>EIIN</label>\r\n                                <input id=\"eiinNo\" name=\"eiinNo\" value={eiinNo} type=\"text\" readOnly />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-8\">\r\n                            <div className=\"field\">\r\n                                <label>Institute Type</label>\r\n                                <select onChange={typeChanged} id=\"type\" name=\"type\" value={type} >\r\n                                    <option value=\"\">select ...</option>\r\n                                    <option value=\"School\">School</option>\r\n                                    <option value=\"College\">Collecge</option>\r\n                                    <option value=\"Madrasah\">Madrasah</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                       \r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                            <div className=\"field\">\r\n                                <label>Address</label>\r\n                                <input onChange={addressChanged} id=\"address\" address=\"address\" value={address} type=\"text\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-4\">\r\n                            <div className=\"field\">\r\n                                <label>District</label>\r\n                                {/* <input onChange={districtChanged} id=\"district\" name=\"district\" value={district} type=\"text\" /> */}\r\n                                <select onChange={districtChanged} id=\"district\" name=\"district\" value={district}>\r\n                                    <option value=\"\">select ...</option>\r\n                                    {districtOptions}\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-4\">\r\n                            <div className=\"field\">\r\n                                <label>Thana</label>\r\n                                <select onChange={thanaChanged} id=\"thana\" name=\"thana\" type=\"text\" value={thana} type=\"text\">\r\n                                    <option value=\"\">select ...</option>\r\n                                    {thanaOptions}\r\n                                </select>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-4\">\r\n                            <div className=\"field\">\r\n                                <label>Post Office</label>\r\n                                <input onChange={postChanged} id=\"post\" post=\"post\" value={post} type=\"text\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-6\">\r\n                            <div className=\"field\">\r\n                                <label>Mobile No. of the Head of the Institute</label>\r\n                                <input onChange={headMobileChanged} id=\"HeadMobile\" value={headMobile} type=\"text\" maxLength=\"13\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-6\">\r\n                            <div className=\"field\">\r\n                                <label>Mobile No. of the Asst. Head/Vice Principal/Equivalent Others</label>\r\n                                <input onChange={asstHeadMobileChanged} id=\"asstHeadMobile\" value={asstHeadMobile} type=\"text\" maxLength=\"13\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-6\">\r\n                            <div className=\"field\">\r\n                                <label>Mobile No. of the Head Assistant (Clerk)</label>\r\n                                <input onChange={clerkMobileChanged} id=\"clerkMobile\" value={clerkMobile} type=\"text\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-6\">\r\n                            <div className=\"field\">\r\n                                <label>Email</label>\r\n                                <input onChange={emailChanged} id=\"email\" email=\"email\" value={email} type=\"text\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                            <div className=\"field\">\r\n                                <label>Password</label>\r\n                                <input onChange={passwordChanged} id=\"password\" password=\"password\" value={password} type=\"password\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <br />\r\n                    <button disabled={isDisbale} className=\"btn btn-large btn-dark\" id=\"saveButton\" onClick={saveProfile} type=\"button\">{buttonText}</button>\r\n                    <div className=\"saveResult\">{saveResult}</div>\r\n                </form>\r\n            </div>\r\n\r\n            </main>\r\n\r\n            <footer>\r\n               <Footer/>\r\n           \r\n            </footer>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nfunction SelectOption(props){\r\n    return(\r\n    <option value={props.id}>{props.name}</option>\r\n    );\r\n}","D:\\xampp\\htdocs\\seat-plan\\src\\components\\CreateSeatPlan.js",["80","81","82","83"],"import React, { useState, useEffect } from \"react\";\r\nimport Axios from 'axios';\r\nimport TopNav from \"./TopNav\";\r\nimport { Redirect, withRouter,useHistory } from 'react-router-dom';\r\nimport \"./CreateSeatPlan.css\";\r\n\r\nfunction CreateSeatPlan(){\r\n\r\n    const [eiinNo, setEIIN] = useState(localStorage.getItem('eiin'));\r\n    const[examId, setExamId] = useState(\"\");\r\n\r\n    const[options, setOption]=useState([]);\r\n    const selectOptions = options.map(item => (\r\n        item\r\n    ))\r\n\r\n\r\n    //Get data on component load event\r\n    useEffect(()=>{\r\n        let postData = new FormData();\r\n        // postData.append(\"eiin\", eiinNo);\r\n         postData.append(\"examId\", examId);\r\n        Axios.post(`${window.$baseUrl}/seat-plan/api/exam.php?action=list`, postData).then(response => {\r\n            const items = response.data;\r\n            let local_count = 0;\r\n            items.map((item) => {\r\n                local_count += 1;\r\n                setOption(options => [...options, <SelectOption key={local_count} id={item.id} name={item.name} />]);\r\n            })\r\n           \r\n            }).catch(error => {\r\n                console.log(error);\r\n                alert(\"Something goes wrong. Please try again\");\r\n            }); //end of axios.\r\n    }, []); //end of useEffect\r\n\r\n    const examChanged=(e)=>{\r\n       setExamId(e.target.value);\r\n    }\r\n\r\n    let history = useHistory();\r\n\r\n    const goToBuildingSelection=(e)=>{\r\n        e.preventDefault();\r\n        if(examId===\"\"){\r\n            alert(\"Select Exam\");\r\n            return;\r\n        }\r\n\r\n        history.push({\r\n            pathname: '/seat-plan/new/select-building',\r\n            search: '?query=abc',\r\n            state: { id: examId, eiin:eiinNo }\r\n        });\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <TopNav/>\r\n            {/* A good combobox here - https://react-select.com/home */}\r\n            <h1>Select Examination</h1>\r\n\r\n            <div className=\"cont box-shadow\">\r\n                <select onChange={examChanged}>\r\n                    <option value=\"\">select an exam</option>\r\n                    {selectOptions}\r\n                </select>\r\n\r\n                <button onClick={goToBuildingSelection}>Next</button>\r\n            </div>\r\n           \r\n        </>\r\n    );\r\n}\r\nexport default withRouter(CreateSeatPlan);\r\n\r\nfunction SelectOption(props){\r\n    return(\r\n    <option value={props.id}>{props.name}</option>\r\n    );\r\n}","D:\\xampp\\htdocs\\seat-plan\\src\\components\\CreateSeatPlanNew.js",["84","85","86","87","88","89","90","91","92"],"import React, { useState, useEffect } from \"react\";\r\nimport Axios from 'axios';\r\nimport TopNav from \"./TopNav\";\r\nimport { Redirect, withRouter, useHistory } from 'react-router-dom';\r\nimport \"./CreateSeatPlan.css\";\r\nimport Modal from 'react-modal';\r\nimport Footer from \"./../Footer\";\r\n\r\nfunction CreateSeatPlanNew() {\r\n    Modal.setAppElement('#root')\r\n    const customStyles = {\r\n        content: {\r\n            top: '50%',\r\n            left: '50%',\r\n            right: 'auto',\r\n            bottom: 'auto',\r\n            marginRight: '-50%',\r\n            transform: 'translate(-50%, -50%)'\r\n        }\r\n    };\r\n\r\n    var subtitle;\r\n    const [isBuildingModalOpen, setBuildingModalOpen] = useState(false);\r\n    const [isFloorModalOpen, setFloorModalOpen] = useState(false);\r\n\r\n    function openBuildingModal() {\r\n        setBuildingModalOpen(true);\r\n    }\r\n\r\n    function openFloorModal() {\r\n        setFloorModalOpen(true);\r\n    }\r\n\r\n    function afterOpenModal() {\r\n        // references are now sync'd and can be accessed.\r\n        subtitle.style.color = '#f00';\r\n    }\r\n\r\n    function closeBuildingModal() {\r\n        setBuildingModalOpen(false);\r\n        let newBuildingName = document.getElementById(\"newBuildingName\").value;\r\n\r\n        if (newBuildingName.trim() === \"\") {\r\n            return;\r\n        }\r\n\r\n        let postData = new FormData();\r\n        postData.append(\"name\", newBuildingName);\r\n        postData.append(\"eiin\", eiinNo);\r\n\r\n\r\n\r\n        Axios.post(`${window.$baseUrl}/seat-plan/api/building.php?action=create`, postData).then(response => {\r\n            if (response.data.issuccess) {\r\n                //response.data.buildingId\r\n                setBuildingOptions(buildingOptions => [...buildingOptions, <SelectOption key={response.data.buildingId} id={response.data.buildingId} name={newBuildingName} />]);\r\n                setBuildingId(response.data.buildingId);\r\n                setFloorOptions([]);\r\n            }\r\n            else {\r\n                alert(response.message);\r\n\r\n            }\r\n        }).catch(error => {\r\n            console.log(error);\r\n            alert(\"Something goes wrong. Please try again.\");\r\n\r\n        }); //end of axios.\r\n    }\r\n\r\n    function closeFloorModal() {\r\n\r\n        setFloorModalOpen(false);\r\n\r\n        if (buildingId === \"\") {\r\n            alert(\"Select a building\");\r\n            return;\r\n        }\r\n        let newFloorName = document.getElementById(\"newFloorName\").value;\r\n        if (newFloorName.trim() === \"\") {\r\n            return;\r\n        }\r\n\r\n        let postData = new FormData();\r\n        postData.append(\"eiin\", eiinNo);\r\n        postData.append(\"buildingId\", buildingId);\r\n        postData.append(\"name\", newFloorName);\r\n\r\n\r\n\r\n        Axios.post(`${window.$baseUrl}/seat-plan/api/floor.php?action=create`, postData).then(response => {\r\n            if (response.data.issuccess) {\r\n                // response.data.floorId\r\n                setFloorOptions(floorOptions => [...floorOptions, <SelectOption key={response.data.floorId} id={response.data.floorId} name={newFloorName} />]);\r\n                setFloorId(response.data.floorId);\r\n            }\r\n            else {\r\n                alert(response.data.message);\r\n            }\r\n\r\n        }).catch(error => {\r\n            console.log(error);\r\n            alert(\"Something goes wrong. Please try again.\");\r\n        }); //end of axios.\r\n    }\r\n\r\n    const [eiinNo, setEIIN] = useState(localStorage.getItem('eiin'));\r\n    const [examId, setExamId] = useState(\"\");\r\n    const [examOptions, setExamOptions] = useState([]);\r\n    const examList = examOptions.map(item => (\r\n        item\r\n    ))\r\n\r\n    const [buildingId, setBuildingId] = useState(\"\");\r\n    const [buildingOptions, setBuildingOptions] = useState([]);\r\n    const buildingList = buildingOptions.map(item => (\r\n        item\r\n    ))\r\n\r\n    const [floorId, setFloorId] = useState(\"\");\r\n    const [floorOptions, setFloorOptions] = useState([]);\r\n    const floorList = floorOptions.map(item => (\r\n        item\r\n    ))\r\n\r\n    const [saveResult, setSaveResult] = useState(\"\");\r\n    const [buttonText, setButtonText] = useState(\"Save & add another\");\r\n    const [isDisbale, setDisable] = useState(\"\");\r\n\r\n    const [rooms, setRooms] = useState([]);\r\n\r\n    const tableRows = rooms.map(item => (\r\n        item\r\n    ))\r\n\r\n\r\n    //Get data on component load event\r\n    useEffect(() => {\r\n        Axios.post(`${window.$baseUrl}/seat-plan/api/exam.php?action=list`).then(response => {\r\n            const items = response.data;\r\n            let local_count = 0;\r\n            items.map((item) => {\r\n                local_count += 1;\r\n                setExamOptions(examOptions => [...examOptions, <SelectOption key={local_count} id={item.id} name={item.name} />]);\r\n            })\r\n\r\n        }).catch(error => {\r\n            console.log(error);\r\n            alert(\"Something goes wrong. Please try again\");\r\n        }); //end of axios.\r\n\r\n\r\n        let buildingListParameters = new FormData();\r\n        buildingListParameters.append(\"eiin\", eiinNo);\r\n        Axios.post(`${window.$baseUrl}/seat-plan/api/building.php?action=list`, buildingListParameters).then(response => {\r\n            const items = response.data;\r\n            let local_count = 0;\r\n            items.map((item) => {\r\n                local_count += 1;\r\n                setBuildingOptions(buildingOptions => [...buildingOptions, <SelectOption key={local_count} id={item.id} name={item.name} />]);\r\n            })\r\n\r\n        }).catch(error => {\r\n            console.log(error);\r\n            alert(\"Something goes wrong. Please try again\");\r\n        }); //end of axios.\r\n\r\n    }, []); //end of useEffect\r\n\r\n    const examChanged = (e) => {\r\n        setExamId(e.target.value);\r\n    }\r\n\r\n    const buildingChanged = (e) => {\r\n        let buildingIdNo = e.target.value;\r\n        setFloorOptions([]);\r\n        let floorListParameters = new FormData();\r\n        floorListParameters.append(\"buildingId\", buildingIdNo);\r\n\r\n        Axios.post(`${window.$baseUrl}/seat-plan/api/floor.php?action=list`, floorListParameters).then(response => {\r\n            const items = response.data;\r\n            let local_count = 0;\r\n            items.map((item) => {\r\n                local_count += 1;\r\n                setFloorOptions(floorOptions => [...floorOptions, <SelectOption key={local_count} id={item.id} name={item.name} />]);\r\n            })\r\n\r\n        }).catch(error => {\r\n            console.log(error);\r\n            alert(\"Something goes wrong. Please try again\");\r\n        }); //end of axios.\r\n\r\n\r\n        setBuildingId(e.target.value);\r\n    }\r\n\r\n    const floorChanged = (e) => {\r\n        setFloorId(e.target.value);\r\n    }\r\n\r\n\r\n    const createRoom = (e) => {\r\n        e.preventDefault();\r\n        if (String(examId).trim() === \"\") {\r\n            alert(\"Select exam.\");\r\n            return;\r\n        }\r\n        if (buildingId.toString().trim() === \"\") {\r\n            alert(\"Select building.\");\r\n            return;\r\n        }\r\n\r\n        if (floorId.toString().trim() === \"\") {\r\n            alert(\"Select floor.\");\r\n            return;\r\n        }\r\n\r\n        if (roomNo.toString().trim() === \"\") {\r\n            alert(\"Enter room number.\");\r\n            return;\r\n        }\r\n\r\n        if (capacity.toString() === \"\") {\r\n            alert(\"Enter total capacity.\");\r\n            return;\r\n        }\r\n\r\n        let postData = new FormData();\r\n        postData.append(\"eiin\", eiinNo);\r\n        postData.append(\"buildingId\", buildingId);\r\n        postData.append(\"floorId\", floorId);\r\n        postData.append(\"examId\", examId);\r\n        postData.append(\"roomNo\", roomNo);\r\n        postData.append(\"startRoll\", startRoll);\r\n        postData.append(\"endRoll\", endRoll);\r\n        postData.append(\"capacity\", capacity);\r\n\r\n        setDisable(\"disabled\");\r\n        setButtonText(\"saving ...\");\r\n        Axios.post(`${window.$baseUrl}/seat-plan/api/room.php?action=create`, postData).then(response => {\r\n            if (response.data.issuccess) {\r\n                setRoomNo(\"\");\r\n                setStartRoll(\"\");\r\n                setEndRoll(\"\");\r\n                setCapacity(\"\");\r\n                setSaveResult(\"Saved successfully.\");\r\n                setDisable(\"\");\r\n                setButtonText(\"Save & add another\");\r\n                document.getElementById(\"roomNo\").focus();\r\n                setTimeout(() => {\r\n                    setSaveResult(\" \");\r\n                }, 3000);\r\n\r\n                setRooms(rooms => [<TableRow key={response.data.roomId} id={response.data.roomId} r={roomNo} startRoll={startRoll} endRoll={endRoll} total={capacity} />, ...rooms]);\r\n\r\n            }\r\n            else {\r\n                alert(response.data.message);\r\n                setDisable(\"\");\r\n                setButtonText(\"Try again\");\r\n            }\r\n\r\n        }).catch(error => {\r\n            console.log(error);\r\n            alert(\"Failed to save\");\r\n            setDisable(\"\");\r\n            setButtonText(\"Try again\");\r\n        }); //end of axios.\r\n\r\n    }\r\n\r\n    // const[floorName, setFloorName] = useState(\"\");\r\n    // const floorNameChanged=(e)=>{\r\n    //     e.preventDefault();\r\n    //     setFloorName(e.target.value);\r\n    // }\r\n\r\n    const [roomNo, setRoomNo] = useState(\"\");\r\n    const [startRoll, setStartRoll] = useState(\"\");\r\n    const [endRoll, setEndRoll] = useState(\"\");\r\n    const [capacity, setCapacity] = useState(\"\");\r\n\r\n    const roomNoChanged = (e) => {\r\n        e.preventDefault();\r\n        setRoomNo(e.target.value);\r\n    }\r\n\r\n    const startRollChanged = (e) => {\r\n        // e.preventDefault();\r\n        let startRoll = e.target.value;\r\n        const re = /^[0-9\\b]+$/;\r\n        if (e.target.value === '' || re.test(e.target.value)) {\r\n            let startingRoll = e.target.value;\r\n\r\n            if (startingRoll !== \"\" && endRoll !== \"\") {\r\n                let intStartRoll = parseInt(startingRoll);\r\n                let intEndRoll = parseInt(endRoll);\r\n                let diff = (intEndRoll - intStartRoll) + 1;\r\n                setCapacity(diff);\r\n            }\r\n\r\n            setStartRoll(e.target.value);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const endRollChanged = (e) => {\r\n        e.preventDefault();\r\n        const re = /^[0-9\\b]+$/;\r\n        if (e.target.value === '' || re.test(e.target.value)) {\r\n            let endingRoll = e.target.value;\r\n\r\n            if (startRoll !== \"\" && endingRoll !== \"\") {\r\n                let intStartRoll = parseInt(startRoll);\r\n                let intEndRoll = parseInt(endingRoll);\r\n                let diff = (intEndRoll - intStartRoll) + 1;\r\n                setCapacity(diff);\r\n            }\r\n\r\n            setEndRoll(e.target.value);\r\n        }\r\n    }\r\n\r\n    const capacityChanged = (e) => {\r\n        e.preventDefault();\r\n        const re = /^[0-9\\b]+$/;\r\n        if (e.target.value === '' || re.test(e.target.value)) {\r\n            setCapacity(e.target.value);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"master-wrapper\">\r\n                <header style={{ marginBottom: \"0\", paddingTop: \"0\", boxShadow: \"none\" }}>\r\n                    <TopNav />\r\n                </header>\r\n                <main>\r\n                    {/* A good combobox here - https://react-select.com/home */}\r\n                    <h1>Create New Seat Plan</h1>\r\n\r\n                    <div className=\"cont box-shadow\">\r\n                        <select onChange={examChanged}>\r\n                            <option value=\"\">select an exam</option>\r\n                            {examList}\r\n                        </select>\r\n\r\n                        <div className=\"buildingBlock\">\r\n                            <select onChange={buildingChanged} value={buildingId}>\r\n                                <option value=\"\">select building</option>\r\n                                {buildingList}\r\n                            </select>\r\n                            <button id=\"addNewBuildingModalButton\" onClick={openBuildingModal}>Add</button>\r\n                        </div>\r\n\r\n                        <div className=\"floorBlock\">\r\n                            <select onChange={floorChanged} value={floorId}>\r\n                                <option value=\"\">select a floor</option>\r\n                                {floorList}\r\n                            </select>\r\n                            <button id=\"addNewFloorModalButton\" onClick={openFloorModal}>Add</button>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"saveResult\" style={{ height: \"20px\" }}>{saveResult}</div>\r\n                        <div className=\"input-row\">\r\n                            <div className=\"inputBox\">\r\n                                <label>Room No.</label>\r\n                                <input id=\"roomNo\" name=\"roomNo\" onChange={roomNoChanged} value={roomNo} type=\"text\" placeholder=\"\" autoFocus />\r\n                            </div>\r\n\r\n                            <div className=\"inputBox\">\r\n                                <label>Start Roll</label>\r\n                                <input name=\"startRoll\" onChange={startRollChanged} value={startRoll} type=\"text\" placeholder=\"(optional)\" />\r\n                            </div>\r\n                            <div className=\"inputBox\">\r\n                                <label>End Roll</label>\r\n                                <input name=\"endRoll\" onChange={endRollChanged} value={endRoll} type=\"text\" placeholder=\"(optional)\" />\r\n                            </div>\r\n\r\n                            <div className=\"inputBox\">\r\n                                <label>Total</label>\r\n                                <input name=\"roomCapacity\" onChange={capacityChanged} value={capacity} type=\"text\" maxLength=\"4\" placeholder=\"\" />\r\n                            </div>\r\n\r\n                            <div className=\"buttonCont\">\r\n                                <button className=\"saveButton\" disabled={isDisbale} onClick={createRoom} name=\"createRoom\">{buttonText}</button>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div style={{ display: \"block\" }}>\r\n                            {tableRows}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Modal\r\n                        isOpen={isBuildingModalOpen}\r\n                        onAfterOpen={afterOpenModal}\r\n                        onRequestClose={closeBuildingModal}\r\n                        style={customStyles}\r\n\r\n                        contentLabel=\"Example Modal\"\r\n                    >\r\n\r\n                        <h2 ref={_subtitle => (subtitle = _subtitle)}>Add New Building Name</h2>\r\n\r\n                        <input id=\"newBuildingName\" />\r\n\r\n                        <button onClick={closeBuildingModal}>Save</button>\r\n                    </Modal>\r\n\r\n                    <Modal\r\n                        isOpen={isFloorModalOpen}\r\n                        onAfterOpen={afterOpenModal}\r\n                        onRequestClose={closeFloorModal}\r\n                        style={customStyles}\r\n\r\n                        contentLabel=\"Example Modal New\"\r\n                    >\r\n\r\n                        <h2 ref={_subtitle => (subtitle = _subtitle)}>Add New Floor Name</h2>\r\n                        <input id=\"newFloorName\" />\r\n                        <button onClick={closeFloorModal}>Save</button>\r\n                    </Modal>\r\n                </main>\r\n                <footer>\r\n                    <Footer />\r\n                </footer>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default CreateSeatPlanNew;\r\n\r\nfunction SelectOption(props) {\r\n    return (\r\n        <option value={props.id}>{props.name}</option>\r\n    );\r\n}\r\n\r\n\r\nfunction TableRow(props) {\r\n\r\n    const [display, setDisplay] = useState(\"flex\");\r\n    const onClick = () => {\r\n\r\n        var r = window.confirm(\"Are you sure to delete this room -\" + props.r + \" ?\\nYou can add it again later.\");\r\n        if (r === true) {\r\n            let postData = new FormData();\r\n            postData.append(\"id\", props.id);\r\n            Axios.post(`${window.$baseUrl}/seat-plan/api/room.php?action=delete`, postData).then(response => {\r\n                if (response.data.issuccess) {\r\n                    setDisplay(\"none\");\r\n                    alert(\"Deleted successfully.\");\r\n                }\r\n                else {\r\n                    alert(response.data.message);\r\n                }\r\n\r\n            }).catch(error => {\r\n                console.log(error);\r\n                alert(\"Something goes wrong. Please try again\");\r\n            }); //end of axios.\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"addedRoom\" style={{ display: `${display}` }}>\r\n            <div>{props.r}</div>\r\n            <div>{props.startRoll === \"0\" ? \"-\" : props.startRoll}</div>\r\n            <div>{props.endRoll === \"0\" ? \"-\" : props.endRoll}</div>\r\n            <div>{props.total}</div>\r\n            <div><button className=\"deleteRoom\" onClick={onClick}>Delete</button></div>\r\n        </div>\r\n\r\n    );\r\n}\r\n","D:\\xampp\\htdocs\\seat-plan\\src\\components\\CreateFloor.js",["93"],"import React, {useEffect, useState} from 'react';\r\n// import { useLocation } from \"react-router-dom\";\r\nimport Axios from 'axios';\r\nimport TopNav from \"./TopNav\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\n\r\nexport default function CreateFloor(props){\r\n\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n    const[examId, setExamId]=useState(\"\");\r\n    const[eiinNo, setEiin]=useState(\"\");\r\n    const[buildingId, setBuildingId] = useState(\"\");\r\n\r\n    const[examName, setExamName]=useState(\"\");\r\n    const[reference, setReference]=useState(\"\");\r\n    // const[saveResult, setSaveResult] = useState(\"\");\r\n    const[buttonText, setButtonText]=useState(\"Next\");\r\n    const[isDisbale, setDisable]=useState(\"\");\r\n    const[buildingName, setBuildingName] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        // console.log(location.pathname); // result: '/secondpage'\r\n        // console.log(location.search); // result: '?query=abc'\r\n        setEiin(location.state.eiin)\r\n        setExamId(location.state.examId);\r\n        setBuildingId(location.state.buildingId);\r\n\r\n        let examIdData = new FormData();\r\n        examIdData.append(\"examId\", location.state.examId);\r\n        Axios.post(`${window.$baseUrl}/seat-plan/api/exam.php?action=details`, examIdData).then(response => {\r\n            const item = response.data;\r\n            setExamName(item.name);\r\n            setReference(item.reference);\r\n            }).catch(error => {\r\n                console.log(error);\r\n                alert(\"Something goes wrong. Please try again\");\r\n            }); //end of exam axios.\r\n\r\n        let buildingData = new FormData();\r\n        buildingData.append(\"id\", location.state.buildingId);\r\n        Axios.post(`${window.$baseUrl}/seat-plan/api/building.php?action=details`, buildingData).then(response => {\r\n            const item = response.data;\r\n            setBuildingName(item.name);\r\n            \r\n            }).catch(error => {\r\n                console.log(error);\r\n                alert(\"Something goes wrong. Please try again\");\r\n            }); //end of building axios.\r\n\r\n     }, []); //end of useEffect()\r\n\r\n    \r\n    \r\n     const createFloor=(e)=>{\r\n         e.preventDefault();\r\n         if(floorName.trim() ===\"\"){\r\n             alert(\"Enter floor name.\");\r\n             return;\r\n         }\r\n         let postData = new FormData();\r\n         postData.append(\"eiin\", eiinNo);\r\n         postData.append(\"buildingId\", buildingId);\r\n         postData.append(\"name\", floorName);\r\n        \r\n         setDisable(\"disabled\");\r\n         setButtonText(\"saving ...\");\r\n\r\n        Axios.post(`${window.$baseUrl}/seat-plan/api/floor.php?action=create`, postData).then(response => {\r\n            if(response.data.issuccess){\r\n                history.push({\r\n                    pathname: '/seat-plan/new/create-room',\r\n                    search: '?query=abc',\r\n                    state: { examId: examId, eiin:eiinNo, buildingId:buildingId, floorId:response.data.floorId }\r\n                });\r\n            }\r\n           else{\r\n               alert(response.data.message);\r\n                setDisable(\"\");\r\n                setButtonText(\"Try again\");\r\n           }\r\n\r\n            }).catch(error => {\r\n                console.log(error);\r\n                alert(\"Something goes wrong. Please try again.\");\r\n                setDisable(\"\");\r\n                setButtonText(\"Try again\");\r\n            }); //end of axios.\r\n    }\r\n\r\n    const[floorName, setFloorName] = useState(\"\");\r\n    const floorNameChanged=(e)=>{\r\n        e.preventDefault();\r\n        setFloorName(e.target.value);\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <TopNav/>\r\n            <div className=\"examName\">{examName}</div>\r\n            <div className=\"reference\">({reference})</div>\r\n            <h1>Create Floor</h1>\r\n            <div className=\"buildingAndFloor\">\r\n                <div className=\"buildingName\">Building: {buildingName}</div>\r\n            </div>\r\n\r\n            <div className=\"cont box-shadow\">\r\n                <input onChange={floorNameChanged} value={floorName} type=\"text\" placeholder=\"type floor name\" />\r\n                <button onClick={createFloor} disabled={isDisbale}>{buttonText}</button>\r\n            </div>\r\n\r\n    </>\r\n    );\r\n}\r\n","D:\\xampp\\htdocs\\seat-plan\\src\\components\\SeatPlanTableRow.js",["94"],"D:\\xampp\\htdocs\\seat-plan\\src\\Footer.js",["95"],"D:\\xampp\\htdocs\\seat-plan\\src\\components\\SelectBuilding.js",["96","97"],"D:\\xampp\\htdocs\\seat-plan\\src\\components\\CreateBuilding.js",["98"],"D:\\xampp\\htdocs\\seat-plan\\src\\components\\SelectFloor.js",["99","100","101","102","103","104","105","106"],"D:\\xampp\\htdocs\\seat-plan\\src\\components\\CreateRoom.js",["107","108","109","110"],"D:\\xampp\\htdocs\\seat-plan\\src\\components\\TopNav.js",[],{"ruleId":"111","severity":1,"message":"112","line":9,"column":20,"nodeType":"113","messageId":"114","endLine":9,"endColumn":27},{"ruleId":"111","severity":1,"message":"115","line":10,"column":20,"nodeType":"113","messageId":"114","endLine":10,"endColumn":29},{"ruleId":"116","severity":1,"message":"117","line":24,"column":30,"nodeType":"118","messageId":"119","endLine":24,"endColumn":32},{"ruleId":"120","severity":1,"message":"121","line":33,"column":8,"nodeType":"122","endLine":33,"endColumn":10,"suggestions":"123"},{"ruleId":"116","severity":1,"message":"117","line":58,"column":30,"nodeType":"118","messageId":"119","endLine":58,"endColumn":32},{"ruleId":"111","severity":1,"message":"124","line":59,"column":17,"nodeType":"113","messageId":"114","endLine":59,"endColumn":28},{"ruleId":"125","severity":1,"message":"126","line":74,"column":20,"nodeType":"127","messageId":"128","endLine":74,"endColumn":22},{"ruleId":"116","severity":1,"message":"117","line":87,"column":30,"nodeType":"118","messageId":"119","endLine":87,"endColumn":32},{"ruleId":"111","severity":1,"message":"124","line":88,"column":17,"nodeType":"113","messageId":"114","endLine":88,"endColumn":28},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"111","severity":1,"message":"112","line":10,"column":20,"nodeType":"113","messageId":"114","endLine":10,"endColumn":27},{"ruleId":"116","severity":1,"message":"117","line":66,"column":30,"nodeType":"118","messageId":"119","endLine":66,"endColumn":32},{"ruleId":"120","severity":1,"message":"133","line":76,"column":8,"nodeType":"122","endLine":76,"endColumn":10,"suggestions":"134"},{"ruleId":"116","severity":1,"message":"117","line":96,"column":30,"nodeType":"118","messageId":"119","endLine":96,"endColumn":32},{"ruleId":"135","severity":1,"message":"136","line":275,"column":115,"nodeType":"137","endLine":275,"endColumn":126},{"ruleId":"111","severity":1,"message":"138","line":4,"column":10,"nodeType":"113","messageId":"114","endLine":4,"endColumn":18},{"ruleId":"111","severity":1,"message":"112","line":9,"column":20,"nodeType":"113","messageId":"114","endLine":9,"endColumn":27},{"ruleId":"116","severity":1,"message":"117","line":26,"column":30,"nodeType":"118","messageId":"119","endLine":26,"endColumn":32},{"ruleId":"120","severity":1,"message":"121","line":35,"column":8,"nodeType":"122","endLine":35,"endColumn":10,"suggestions":"139"},{"ruleId":"111","severity":1,"message":"138","line":4,"column":10,"nodeType":"113","messageId":"114","endLine":4,"endColumn":18},{"ruleId":"111","severity":1,"message":"140","line":4,"column":20,"nodeType":"113","messageId":"114","endLine":4,"endColumn":30},{"ruleId":"111","severity":1,"message":"141","line":4,"column":32,"nodeType":"113","messageId":"114","endLine":4,"endColumn":42},{"ruleId":"111","severity":1,"message":"112","line":107,"column":20,"nodeType":"113","messageId":"114","endLine":107,"endColumn":27},{"ruleId":"116","severity":1,"message":"117","line":142,"column":30,"nodeType":"118","messageId":"119","endLine":142,"endColumn":32},{"ruleId":"116","severity":1,"message":"117","line":158,"column":30,"nodeType":"118","messageId":"119","endLine":158,"endColumn":32},{"ruleId":"120","severity":1,"message":"133","line":168,"column":8,"nodeType":"122","endLine":168,"endColumn":10,"suggestions":"142"},{"ruleId":"116","severity":1,"message":"117","line":183,"column":30,"nodeType":"118","messageId":"119","endLine":183,"endColumn":32},{"ruleId":"111","severity":1,"message":"143","line":290,"column":13,"nodeType":"113","messageId":"114","endLine":290,"endColumn":22},{"ruleId":"120","severity":1,"message":"144","line":52,"column":9,"nodeType":"122","endLine":52,"endColumn":11,"suggestions":"145"},{"ruleId":"111","severity":1,"message":"146","line":7,"column":20,"nodeType":"113","messageId":"114","endLine":7,"endColumn":30},{"ruleId":"147","severity":1,"message":"148","line":12,"column":58,"nodeType":"137","endLine":12,"endColumn":73},{"ruleId":"116","severity":1,"message":"117","line":36,"column":30,"nodeType":"118","messageId":"119","endLine":36,"endColumn":32},{"ruleId":"120","severity":1,"message":"149","line":57,"column":9,"nodeType":"122","endLine":57,"endColumn":11,"suggestions":"150"},{"ruleId":"120","severity":1,"message":"149","line":40,"column":8,"nodeType":"122","endLine":40,"endColumn":10,"suggestions":"151"},{"ruleId":"111","severity":1,"message":"152","line":24,"column":11,"nodeType":"113","messageId":"114","endLine":24,"endColumn":21},{"ruleId":"111","severity":1,"message":"153","line":24,"column":23,"nodeType":"113","messageId":"114","endLine":24,"endColumn":36},{"ruleId":"111","severity":1,"message":"154","line":25,"column":11,"nodeType":"113","messageId":"114","endLine":25,"endColumn":21},{"ruleId":"111","severity":1,"message":"155","line":25,"column":23,"nodeType":"113","messageId":"114","endLine":25,"endColumn":36},{"ruleId":"111","severity":1,"message":"156","line":26,"column":11,"nodeType":"113","messageId":"114","endLine":26,"endColumn":20},{"ruleId":"111","severity":1,"message":"157","line":26,"column":22,"nodeType":"113","messageId":"114","endLine":26,"endColumn":32},{"ruleId":"116","severity":1,"message":"117","line":43,"column":30,"nodeType":"118","messageId":"119","endLine":43,"endColumn":32},{"ruleId":"120","severity":1,"message":"144","line":75,"column":9,"nodeType":"122","endLine":75,"endColumn":11,"suggestions":"158"},{"ruleId":"111","severity":1,"message":"159","line":1,"column":37,"nodeType":"113","messageId":"114","endLine":1,"endColumn":45},{"ruleId":"111","severity":1,"message":"160","line":12,"column":11,"nodeType":"113","messageId":"114","endLine":12,"endColumn":18},{"ruleId":"120","severity":1,"message":"161","line":73,"column":9,"nodeType":"122","endLine":73,"endColumn":11,"suggestions":"162"},{"ruleId":"111","severity":1,"message":"143","line":151,"column":13,"nodeType":"113","messageId":"114","endLine":151,"endColumn":22},"no-unused-vars","'setEIIN' is assigned a value but never used.","Identifier","unusedVar","'setExamId' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'examId'. Either include it or remove the dependency array.","ArrayExpression",["163"],"'local_count' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["164"],"no-negated-in-lhs",["165"],"React Hook useEffect has a missing dependency: 'eiinNo'. Either include it or remove the dependency array.",["166"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Redirect' is defined but never used.",["167"],"'withRouter' is defined but never used.","'useHistory' is defined but never used.",["168"],"'startRoll' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'location.state.buildingId', 'location.state.eiin', and 'location.state.examId'. Either include them or remove the dependency array.",["169"],"'setDisplay' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","React Hook useEffect has missing dependencies: 'location.state.eiin' and 'location.state.id'. Either include them or remove the dependency array.",["170"],["171"],"'saveResult' is assigned a value but never used.","'setSaveResult' is assigned a value but never used.","'buttonText' is assigned a value but never used.","'setButtonText' is assigned a value but never used.","'isDisbale' is assigned a value but never used.","'setDisable' is assigned a value but never used.",["172"],"'useFocus' is defined but never used.","'history' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'location.state.buildingId', 'location.state.eiin', 'location.state.examId', and 'location.state.floorId'. Either include them or remove the dependency array.",["173"],{"desc":"174","fix":"175"},"no-global-assign","no-unsafe-negation",{"desc":"176","fix":"177"},{"desc":"174","fix":"178"},{"desc":"176","fix":"179"},{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},{"desc":"182","fix":"184"},{"desc":"180","fix":"185"},{"desc":"186","fix":"187"},"Update the dependencies array to be: [examId]",{"range":"188","text":"189"},"Update the dependencies array to be: [eiinNo]",{"range":"190","text":"191"},{"range":"192","text":"189"},{"range":"193","text":"191"},"Update the dependencies array to be: [location.state.buildingId, location.state.eiin, location.state.examId]",{"range":"194","text":"195"},"Update the dependencies array to be: [location.state.eiin, location.state.id]",{"range":"196","text":"197"},{"range":"198","text":"197"},{"range":"199","text":"195"},"Update the dependencies array to be: [location.state.buildingId, location.state.eiin, location.state.examId, location.state.floorId]",{"range":"200","text":"201"},[1317,1319],"[examId]",[3028,3030],"[eiinNo]",[1252,1254],[5618,5620],[2119,2121],"[location.state.buildingId, location.state.eiin, location.state.examId]",[2185,2187],"[location.state.eiin, location.state.id]",[1505,1507],[3083,3085],[2901,2903],"[location.state.buildingId, location.state.eiin, location.state.examId, location.state.floorId]"]