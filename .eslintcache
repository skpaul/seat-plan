[{"D:\\xampp\\htdocs\\seat-plan\\src\\components\\ViewSeatPlan.js":"1","D:\\xampp\\htdocs\\seat-plan\\src\\index.js":"2","D:\\xampp\\htdocs\\seat-plan\\src\\Login.js":"3","D:\\xampp\\htdocs\\seat-plan\\src\\Dashboard.js":"4","D:\\xampp\\htdocs\\seat-plan\\src\\components\\CreateSeatPlan.js":"5","D:\\xampp\\htdocs\\seat-plan\\src\\components\\CreateSeatPlanNew.js":"6","D:\\xampp\\htdocs\\seat-plan\\src\\components\\CreateFloor.js":"7","D:\\xampp\\htdocs\\seat-plan\\src\\components\\SeatPlanTableRow.js":"8","D:\\xampp\\htdocs\\seat-plan\\src\\Footer.js":"9","D:\\xampp\\htdocs\\seat-plan\\src\\components\\SelectBuilding.js":"10","D:\\xampp\\htdocs\\seat-plan\\src\\components\\CreateBuilding.js":"11","D:\\xampp\\htdocs\\seat-plan\\src\\components\\SelectFloor.js":"12","D:\\xampp\\htdocs\\seat-plan\\src\\components\\CreateRoom.js":"13","D:\\xampp\\htdocs\\seat-plan\\src\\components\\TopNav.js":"14","D:\\xampp\\htdocs\\seat-plan\\src\\App.js":"15","D:\\xampp\\htdocs\\seat-plan\\src\\reportWebVitals.js":"16","D:\\xampp\\htdocs\\seat-plan\\src\\components\\home\\Home.js":"17"},{"size":8788,"mtime":1614237277731,"results":"18","hashOfConfig":"19"},{"size":616,"mtime":1614677255451,"results":"20","hashOfConfig":"19"},{"size":4258,"mtime":1614681915737,"results":"21","hashOfConfig":"19"},{"size":13876,"mtime":1614232695064,"results":"22","hashOfConfig":"19"},{"size":2406,"mtime":1614105080811,"results":"23","hashOfConfig":"19"},{"size":16955,"mtime":1614105080811,"results":"24","hashOfConfig":"19"},{"size":4260,"mtime":1614105080809,"results":"25","hashOfConfig":"19"},{"size":1863,"mtime":1614105080812,"results":"26","hashOfConfig":"19"},{"size":566,"mtime":1614237677778,"results":"27","hashOfConfig":"19"},{"size":3876,"mtime":1614105080812,"results":"28","hashOfConfig":"19"},{"size":3466,"mtime":1614105080809,"results":"29","hashOfConfig":"19"},{"size":4814,"mtime":1614105080812,"results":"30","hashOfConfig":"19"},{"size":10356,"mtime":1614105080810,"results":"31","hashOfConfig":"19"},{"size":586,"mtime":1614105080813,"results":"32","hashOfConfig":"19"},{"size":1888,"mtime":1614668383784,"results":"33","hashOfConfig":"19"},{"size":375,"mtime":1614105080814,"results":"34","hashOfConfig":"19"},{"size":1336,"mtime":1614682530284,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"1lepqo6",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"39"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"39"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"57"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"57"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\xampp\\htdocs\\seat-plan\\src\\components\\ViewSeatPlan.js",["85","86","87","88","89","90","91","92","93"],"import React, { useState, useEffect } from \"react\";\r\nimport Axios from 'axios';\r\nimport \"./ViewSeatPlan.css\";\r\nimport TopNav from \"./TopNav\";\r\nimport SeatPlanTableRow from \"./SeatPlanTableRow\";\r\nimport Footer from \"./../Footer\";\r\n\r\nexport default function ViewSeatPlan(props) {\r\n    const [eiinNo, setEIIN] = useState(localStorage.getItem('eiin'));\r\n    const [examId, setExamId] = useState(\"\");\r\n    const [options, setOption] = useState([]);\r\n    const [rows, setRow] = useState([]); //for table tr\r\n    const [isDownloadVisible, setDownloadVisible] = useState(false);\r\n\r\n\r\n    //Get data on component load event\r\n    useEffect(() => {\r\n        let postData = new FormData();\r\n        // postData.append(\"eiin\", eiinNo);\r\n        postData.append(\"examId\", examId);\r\n        Axios.post(`${window.$baseUrl}/seat-plan/api/exam.php?action=list`, postData).then(response => {\r\n            const items = response.data;\r\n            let local_count = 0;\r\n            items.map((item) => {\r\n                local_count += 1;\r\n                setOption(options => [...options, <SelectOption key={local_count} id={item.id} name={item.name} />]);\r\n            })\r\n\r\n        }).catch(error => {\r\n            console.log(error);\r\n            alert(\"Something goes wrong. Please try again\");\r\n        }); //end of axios.\r\n    }, []); //end of useEffect\r\n\r\n    const selectOptions = options.map(item => (\r\n        item\r\n    ))\r\n\r\n    const tableRows = rows.map(item => (\r\n        item\r\n    ))\r\n\r\n\r\n    const [totalCapacity, setTotalCapacity] = useState(0);\r\n\r\n    //This function is passed to Building and called from there.\r\n    const roomDeleted = (value) => {\r\n        setRow([]);\r\n        setTotalCapacity(0);\r\n        let selectedExamId = document.getElementById(\"examIdCombo\").value;\r\n        let postData = new FormData();\r\n        postData.append(\"eiin\", eiinNo);\r\n        postData.append(\"examId\", selectedExamId);\r\n\r\n        Axios.post(`${window.$baseUrl}/seat-plan/api/view-seat-plan.php?action=list`, postData).then(response => {\r\n            const items = response.data;\r\n            let local_count = 0;\r\n            items.map((item) => {\r\n                local_count += 1;\r\n                setTotalCapacity(prevTotal => prevTotal + parseInt(item.capacity));\r\n                setRow(rows => [...rows, <SeatPlanTableRow roomDeleted={roomDeleted} key={item.id} id={item.id} b={item.building} f={item.floor} r={item.roomNo} startRoll={item.startRoll} endRoll={item.endRoll} total={item.capacity} />]);\r\n            })\r\n            // setCount(count => count + local_count);\r\n            //setCount(local_count);\r\n        }).catch(error => {\r\n            console.log(error);\r\n            alert(\"Something goes wrong. Please try again\");\r\n        }); //end of axios.\r\n\r\n    };\r\n\r\n    const examChanged = (e) => {\r\n        let examId = e.target.value;\r\n        if (examId == \"\") {\r\n            setRow([]);\r\n            setTotalCapacity(0);\r\n            setDownloadVisible(false);\r\n            return;\r\n        }\r\n        \r\n        let postData = new FormData();\r\n        postData.append(\"eiin\", eiinNo);\r\n        postData.append(\"examId\", examId);\r\n        Axios.post(`${window.$baseUrl}/seat-plan/api/view-seat-plan.php?action=list`, postData).then(response => {\r\n            const items = response.data;\r\n            let local_count = 0;\r\n            items.map((item) => {\r\n                local_count += 1;\r\n                setTotalCapacity(prevTotal => prevTotal + parseInt(item.capacity));\r\n                //setRow(rows => [...rows, <TableRow key={local_count} b={item.building} f={item.floor} r={item.roomNo} startRoll={item.startRoll} endRoll={item.endRoll} total={item.capacity} />]);\r\n\r\n                setRow(rows => [...rows, <SeatPlanTableRow roomDeleted={roomDeleted} key={item.id} id={item.id} b={item.building} f={item.floor} r={item.roomNo} startRoll={item.startRoll} endRoll={item.endRoll} total={item.capacity} />]);\r\n            })\r\n            // setCount(count => count + local_count);\r\n            //setCount(local_count);\r\n        }).catch(error => {\r\n            console.log(error);\r\n            alert(\"Something goes wrong. Please try again\");\r\n        }); //end of axios.\r\n\r\n        //make download button visible\r\n        setDownloadVisible(true);\r\n    }\r\n\r\n    const downloadClicked = (e)=>{\r\n        let selectedExamId = document.getElementById(\"examIdCombo\").value;\r\n        let postData = new FormData();\r\n        postData.append(\"eiin\", eiinNo);\r\n        postData.append(\"examId\", selectedExamId);\r\n\r\n        // axios({\r\n        //     method: 'post',\r\n        //     url: '/user/12345',\r\n        //     data: {\r\n        //       firstName: 'Fred',\r\n        //       lastName: 'Flintstone'\r\n        //     }\r\n        //   });\r\n\r\n        Axios({\r\n            url: `${window.$baseUrl}/seat-plan/api/csv.php`,\r\n            method: 'post',\r\n            // responseType: 'blob', // important\r\n            data : postData\r\n          }).then((response) => {\r\n            \r\n             const url = `${window.$baseUrl}/seat-plan/api/csv-files/${eiinNo}.csv`;\r\n             const link = document.createElement('a');\r\n             link.href = url;\r\n            link.target = \"_blank\";\r\n            link.setAttribute(\r\n                'download',\r\n                `Data.csv`,\r\n                );\r\n             document.body.appendChild(link);\r\n             link.click();\r\n            //  document.body.removeChild(link);\r\n            // Clean up and remove the link\r\n            link.parentNode.removeChild(link);\r\n\r\n\r\n          });\r\n\r\n        // Axios.post(`${window.$baseUrl}/seat-plan/api/csv.php`, postData).then(response => {\r\n        //     const items = response.data;\r\n        //     let local_count = 0;\r\n              \r\n            \r\n        // }).catch(error => {\r\n        //     console.log(error);\r\n        //     alert(\"Something goes wrong. Please try again\");\r\n        // }); //end of axios.\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"master-wrapper\">\r\n                <header style={{ marginBottom: \"0\", paddingTop: \"0\", boxShadow: \"none\" }}>\r\n                    <TopNav />\r\n                </header>\r\n                <main>\r\n                    {/* A good combobox here - https://react-select.com/home */}\r\n                    <h1>Seat Plan Details</h1>\r\n                    <div className=\"seatPlanCont box-shadow\">\r\n                        <select id=\"examIdCombo\" onChange={examChanged}>\r\n                            <option value=\"\">select an exam</option>\r\n                            {selectOptions}\r\n                        </select>\r\n                        <table>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Building</th>\r\n                                    <th>Floor</th>\r\n                                    <th>Room No.</th>\r\n                                    <th>Start Roll</th>\r\n                                    <th>End Roll</th>\r\n                                    <th>Total</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {tableRows}\r\n                            </tbody>\r\n                            <tfoot>\r\n                                <tr>\r\n                                    <td colSpan=\"5\">Grand Total = </td>\r\n                                    <td>{totalCapacity}</td>\r\n                                </tr>\r\n                            </tfoot>\r\n                        </table>\r\n                        {\r\n                            isDownloadVisible && (\r\n                                <div className=\"downloadButton\" onClick={downloadClicked}>Download CSV</div>\r\n                            )\r\n                        }\r\n                        \r\n                    </div>\r\n                    \r\n                </main>\r\n                <footer>\r\n                    <Footer />\r\n                </footer>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction SelectOption(props) {\r\n    return (\r\n        <option value={props.id}>{props.name}</option>\r\n    );\r\n}\r\n\r\n// function TableRow(props){\r\n//     return(\r\n//         <tr>\r\n//             <td>\r\n//                 {props.b}\r\n//             </td>\r\n//             <td>\r\n//                 {props.f}\r\n//             </td>\r\n//             <td>\r\n//                 {props.r}\r\n//             </td>\r\n//             <td>\r\n//                 {props.startRoll==0?props.startRoll:\"-\"}\r\n//             </td>\r\n//             <td>\r\n//                 {props.endRoll==0?props.endRoll:\"-\"}\r\n//             </td>\r\n//             <td>\r\n//                 {props.total}\r\n//             </td>\r\n//         </tr>\r\n//     );\r\n// }",["94","95"],"D:\\xampp\\htdocs\\seat-plan\\src\\index.js",[],"D:\\xampp\\htdocs\\seat-plan\\src\\Login.js",["96","97"],"import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport \"./Login.css\";\r\n\r\nfunction Login(props) {\r\n    localStorage.clear();\r\n\r\n    const location = useLocation();\r\n    const[eiin, setEiin] = useState(\"\");\r\n    const[password, setPassword] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        // console.log(location.pathname); // result: '/secondpage'\r\n        // console.log(location.search); // result: '?query=abc'\r\n        console.log(location.state.departmentId); // result: 'some_value'\r\n     }, [location]);\r\n\r\n    const eiinChanged = event=>{\r\n        event.preventDefault();\r\n        let value = event.target.value;\r\n        setEiin(value);\r\n    }\r\n\r\n    const passChanged=event=>{\r\n        event.preventDefault();\r\n        setPassword(event.target.value.trim());\r\n    }\r\n\r\n    const onSubmit=(event)=>{\r\n        event.preventDefault();\r\n        setButtonText(\"wait..\");\r\n        let data = new FormData();\r\n        data.append(\"eiin\",eiin);\r\n        data.append(\"password\", password);\r\n\r\n        Axios.post(`${window.$baseUrl}/seat-plan/api/validate-login.php`,data).then(response=>{\r\n            \r\n            if(!response.data.issuccess){\r\n                alert(response.data.message);\r\n                setButtonText(\"Try again\");\r\n                return;\r\n            }\r\n\r\n            setButtonText(\"Redirecting...\");\r\n\r\n            localStorage.setItem('eiin', eiin);\r\n            props.history.push('/dashboard'); // Redirect to dashboard\r\n        }).catch(error=>{\r\n            alert(\"Something goes wrong. Could not login.\");\r\n            console.log(error);\r\n            setButtonText(\"Try again\");\r\n        });\r\n       \r\n    }\r\n\r\n    const[butonText, setButtonText]= useState(\"Login\");\r\n    return (\r\n            <div className=\"login-master-wrapper\">\r\n                <main id=\"login-main\">\r\n                    <div className=\"loginTitle\" style={{marginBottom:\"20px\"}}>Seat Plan Management</div>\r\n                    <div style={{display:\"flex\"}}>\r\n                        <div className=\"departmentLogo\" style={{marginRight:\"10px\"}}>\r\n                            {/* <img src=\"logos/govt-logo.png\"></img> */}\r\n                            <img style={{height:\"40px\"}} src={process.env.PUBLIC_URL + '/govt-logo.png'} /> \r\n                        </div>\r\n                        <div>\r\n                            <div className=\"loginSubTitle\">Directorate Of Secondary & Higher Education</div>\r\n                            <div style={{textAlign:\"left\"}} className=\"loginMinistryName\">Ministry of Education</div>\r\n                        </div>\r\n                    </div>\r\n                   \r\n                    <div style={{display:\"flex\"}}>\r\n                    <iframe width=\"420\" height=\"315\"\r\n                     allowFullScreen=\"allowfullscreen\"\r\n                        src=\"https://www.youtube.com/embed/v8B23p2snIo?autoplay=1\">\r\n                    </iframe>\r\n                  \r\n                   \r\n\r\n                    <div id=\"login-form-container\" style={{width:\"442px\", height:\"314px\", marginLeft:\"20px\"}}>\r\n                        <h2 className=\"login-h2\">Institute Login</h2>\r\n                        <form>\r\n                        <article className=\"login-article\">\r\n                            <input className=\"login-name-textbox\" name=\"eiin\" onChange={eiinChanged} value={eiin} type=\"text\" placeholder=\"EIIN\" />\r\n                        </article>\r\n                        <article  className=\"login-article\">\r\n                            <input className=\"login-password-textbox\" name=\"password\" onChange={passChanged} value={password} type=\"password\" placeholder=\"password\" />\r\n                        </article>\r\n                        <article  className=\"login-article\">\r\n                            {/* <button className=\"submit\" type=\"submit\" onClick={onSubmit}>Submit</button> */}\r\n                            <input className=\"login-button\" onClick={onSubmit} type=\"submit\"  value={butonText}/>\r\n                        </article>\r\n                        </form>\r\n                    </div>\r\n                    </div>\r\n                   \r\n                </main>\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default Login;","D:\\xampp\\htdocs\\seat-plan\\src\\Dashboard.js",["98","99","100","101","102"],"import React, { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nimport './bootstrap-grid.css';\r\nimport './teletalk.css';\r\nimport TopNav from \"./components/TopNav\";\r\nimport Footer from \"./Footer\";\r\n\r\nexport default function Dashboard(props) {\r\n    const [eiinNo, setEIIN] = useState(localStorage.getItem('eiin'));\r\n\r\n    if (eiinNo == null || eiinNo === \"\") {\r\n        props.history.push('/');\r\n    }\r\n\r\n    const [district, setDistrict] = useState(\"\");\r\n    const [thana, setThana] = useState(\"\");\r\n    const [type, setType] = useState(\"\");\r\n    // const [level, setLevel] = useState(\"\");\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [address, setAddress] = useState(\"\");\r\n    const [post, setPost] = useState(\"\");\r\n    const [headMobile, setHeadMobile] = useState(\"\");\r\n    const [asstHeadMobile, setAsstHeadMobile] = useState(\"\");\r\n    const [clerkMobile, setClerkMobile] = useState(\"\");\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const[saveResult, setSaveResult] = useState(\"\");\r\n    const[buttonText, setButtonText]=useState(\"Save Profile\");\r\n    const[isDisbale, setDisable]=useState(\"\");\r\n\r\n    //Get data on component load event\r\n    useEffect(() => {\r\n        let postData = new FormData();\r\n        postData.append(\"eiin\", eiinNo);\r\n        //Get institute profile details -->\r\n        Axios.post(`${window.$baseUrl}/seat-plan/api/institute-details.php?action=get`, postData).then(response => {\r\n            if (response.data) {\r\n                let data = response.data;\r\n                setDistrict(data.district);\r\n                setThanaList(thanaList => [...thanaList, <SelectOption key={1} id={data.thana} name={data.thana} />]);\r\n                setThana(data.thana);\r\n                setType(data.type);\r\n                // setLevel(data.level);\r\n                setName(data.name);\r\n                setAddress(data.address);\r\n                setPost(data.post);\r\n                setHeadMobile(data.headMobile);\r\n                setAsstHeadMobile(data.asstHeadMobile);\r\n                setClerkMobile(data.clerkMobile);\r\n                setEmail(data.email);\r\n                setPassword(data.password);\r\n            }\r\n        }).catch(error => {\r\n            console.log(error);\r\n            alert(\"Something goes wrong. Please try again\");\r\n        }); //<--Get institute profile details\r\n\r\n\r\n        Axios.post(`${window.$baseUrl}/seat-plan/api/div-dist-thana.php?action=districtList`).then(response => {\r\n            const items = response.data.districts;\r\n            let local_count = 0;\r\n            items.map((item) => {\r\n                local_count += 1;\r\n                setDistrictList(districtList => [...districtList, <SelectOption key={local_count} id={item.district} name={item.district} />]);\r\n            })\r\n           \r\n            }).catch(error => {\r\n                console.log(error);\r\n                alert(\"Something goes wrong. Please try again\");\r\n            }); //end of axios.\r\n\r\n    }, []);\r\n\r\n    const[districtList, setDistrictList]=useState([]);\r\n    const districtOptions = districtList.map(item => (\r\n        item\r\n    ))\r\n\r\n    const[thanaList, setThanaList]=useState([]);\r\n    const thanaOptions = thanaList.map(item => (\r\n        item\r\n    ))\r\n\r\n    const districtChanged = event => {\r\n        setDistrict(event.target.value);\r\n        setThanaList([]);\r\n        let formData = new FormData();\r\n        formData.append(\"district\", event.target.value);\r\n        Axios.post(`${window.$baseUrl}/seat-plan/api/div-dist-thana.php?action=thanaList`, formData).then(response => {\r\n            const items = response.data.thanas;\r\n            let local_count = 0;\r\n            items.map((item) => {\r\n                local_count += 1;\r\n                setThanaList(thanaList => [...thanaList, <SelectOption key={local_count} id={item.thana} name={item.thana} />]);\r\n            })\r\n        }).catch(error => {\r\n            console.log(error);\r\n            alert(\"Something goes wrong. Please try again\");\r\n        }); //end of axios.\r\n    }\r\n\r\n    const thanaChanged = event => {\r\n        setThana(event.target.value);\r\n    }\r\n\r\n    const typeChanged = event => {\r\n        setType(event.target.value);\r\n    }\r\n\r\n    // const levelChanged = event => {\r\n    //     setLevel(event.target.value);\r\n    // }\r\n\r\n    const nameChanged = event => {\r\n        setName(event.target.value);\r\n    }\r\n\r\n    const addressChanged = event => {\r\n        setAddress(event.target.value);\r\n    }\r\n\r\n    const postChanged = event => {\r\n        setPost(event.target.value);\r\n    }\r\n\r\n    const headMobileChanged = e => {\r\n        e.preventDefault();\r\n        const re = /^[0-9\\b]+$/;\r\n        if (e.target.value === '' || re.test(e.target.value)) {\r\n            setHeadMobile(e.target.value);\r\n        }\r\n    }\r\n\r\n    const asstHeadMobileChanged = e => {\r\n        e.preventDefault();\r\n        const re = /^[0-9\\b]+$/;\r\n        if (e.target.value === '' || re.test(e.target.value)) {\r\n            setAsstHeadMobile(e.target.value);\r\n        }\r\n    }\r\n\r\n    const clerkMobileChanged = e => {\r\n        e.preventDefault();\r\n        const re = /^[0-9\\b]+$/;\r\n        if (e.target.value === '' || re.test(e.target.value)) {\r\n            setClerkMobile(e.target.value);\r\n        }\r\n    }\r\n\r\n    const emailChanged = event => {\r\n        setEmail(event.target.value);\r\n    }\r\n\r\n    const passwordChanged = event => {\r\n        setPassword(event.target.value);\r\n    }\r\n\r\n\r\n    const saveProfile = (e) => {\r\n        e.preventDefault();\r\n        let updatedData = new FormData();\r\n        updatedData.append(\"eiin\", eiinNo);\r\n        updatedData.append(\"district\", district);\r\n        updatedData.append(\"thana\", thana);\r\n        updatedData.append(\"type\", type);\r\n        // updatedData.append(\"level\", level);\r\n        updatedData.append(\"name\", name);\r\n        updatedData.append(\"address\", address);\r\n        updatedData.append(\"post\", post);\r\n        updatedData.append(\"headMobile\", headMobile);\r\n        updatedData.append(\"asstHeadMobile\", asstHeadMobile);\r\n        updatedData.append(\"clerkMobile\", clerkMobile);\r\n        updatedData.append(\"email\", email);\r\n        updatedData.append(\"password\", password);\r\n\r\n        setDisable(\"disabled\");\r\n         setButtonText(\"saving ...\");\r\n\r\n        Axios.post(`${window.$baseUrl}/seat-plan/api/institute-details.php?action=save`, updatedData).then(response => {\r\n            if (response.data.issuccess) {\r\n                setSaveResult(\"Saved successfully.\");\r\n                    setDisable(\"\");\r\n                    setButtonText(\"Save Profile\");\r\n                    setTimeout(() => {\r\n                        setSaveResult(\" \");\r\n                    }, 4000);\r\n            }\r\n            else {\r\n                alert(response.data.message);\r\n                setDisable(\"\");\r\n                    setButtonText(\"Try again\");\r\n            }\r\n        }).catch(error => {\r\n            console.log(error);\r\n            setDisable(\"\");\r\n            setButtonText(\"Try again\");\r\n        });//end of axios\r\n        \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"master-wrapper\">\r\n                <header style={{marginBottom:\"0\", paddingTop:\"0\", boxShadow:\"none\"}}>\r\n                    <TopNav />\r\n                </header>\r\n                <main>\r\n\r\n              \r\n            \r\n            <h1 style={{ marginBottom: \"30px\" }}>\r\n                Institute Profile\r\n                </h1>\r\n            <div className=\"container box-shadow\" style={{ marginBottom: '50px', padding: \"20px\" }}>\r\n\r\n                <form className=\"classic\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                            <div key=\"nameDiv\" className=\"field\">\r\n                                <label>Institute Name</label>\r\n                                <input onChange={nameChanged} id=\"name\" name=\"name\" value={name} type=\"text\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                       \r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-4\">\r\n                            <div key=\"eiinDiv\" className=\"field\">\r\n                                <label>EIIN</label>\r\n                                <input id=\"eiinNo\" name=\"eiinNo\" value={eiinNo} type=\"text\" readOnly />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-8\">\r\n                            <div className=\"field\">\r\n                                <label>Institute Type</label>\r\n                                <select onChange={typeChanged} id=\"type\" name=\"type\" value={type} >\r\n                                    <option value=\"\">select ...</option>\r\n                                    <option value=\"School\">School</option>\r\n                                    <option value=\"College\">Collecge</option>\r\n                                    <option value=\"Madrasah\">Madrasah</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                       \r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                            <div className=\"field\">\r\n                                <label>Address</label>\r\n                                <input onChange={addressChanged} id=\"address\" address=\"address\" value={address} type=\"text\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-4\">\r\n                            <div className=\"field\">\r\n                                <label>District</label>\r\n                                {/* <input onChange={districtChanged} id=\"district\" name=\"district\" value={district} type=\"text\" /> */}\r\n                                <select onChange={districtChanged} id=\"district\" name=\"district\" value={district}>\r\n                                    <option value=\"\">select ...</option>\r\n                                    {districtOptions}\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-4\">\r\n                            <div className=\"field\">\r\n                                <label>Thana</label>\r\n                                <select onChange={thanaChanged} id=\"thana\" name=\"thana\" type=\"text\" value={thana} type=\"text\">\r\n                                    <option value=\"\">select ...</option>\r\n                                    {thanaOptions}\r\n                                </select>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-4\">\r\n                            <div className=\"field\">\r\n                                <label>Post Office</label>\r\n                                <input onChange={postChanged} id=\"post\" post=\"post\" value={post} type=\"text\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-6\">\r\n                            <div className=\"field\">\r\n                                <label>Mobile No. of the Head of the Institute</label>\r\n                                <input onChange={headMobileChanged} id=\"HeadMobile\" value={headMobile} type=\"text\" maxLength=\"13\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-6\">\r\n                            <div className=\"field\">\r\n                                <label>Mobile No. of the Asst. Head/Vice Principal/Equivalent Others</label>\r\n                                <input onChange={asstHeadMobileChanged} id=\"asstHeadMobile\" value={asstHeadMobile} type=\"text\" maxLength=\"13\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-6\">\r\n                            <div className=\"field\">\r\n                                <label>Mobile No. of the Head Assistant (Clerk)</label>\r\n                                <input onChange={clerkMobileChanged} id=\"clerkMobile\" value={clerkMobile} type=\"text\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-6\">\r\n                            <div className=\"field\">\r\n                                <label>Email</label>\r\n                                <input onChange={emailChanged} id=\"email\" email=\"email\" value={email} type=\"text\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                            <div className=\"field\">\r\n                                <label>Password</label>\r\n                                <input onChange={passwordChanged} id=\"password\" password=\"password\" value={password} type=\"password\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <br />\r\n                    <button disabled={isDisbale} className=\"btn btn-large btn-dark\" id=\"saveButton\" onClick={saveProfile} type=\"button\">{buttonText}</button>\r\n                    <div className=\"saveResult\">{saveResult}</div>\r\n                </form>\r\n            </div>\r\n\r\n            </main>\r\n\r\n            <footer>\r\n               <Footer/>\r\n           \r\n            </footer>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nfunction SelectOption(props){\r\n    return(\r\n    <option value={props.id}>{props.name}</option>\r\n    );\r\n}","D:\\xampp\\htdocs\\seat-plan\\src\\components\\CreateSeatPlan.js",["103","104","105","106"],"import React, { useState, useEffect } from \"react\";\r\nimport Axios from 'axios';\r\nimport TopNav from \"./TopNav\";\r\nimport { Redirect, withRouter,useHistory } from 'react-router-dom';\r\nimport \"./CreateSeatPlan.css\";\r\n\r\nfunction CreateSeatPlan(){\r\n\r\n    const [eiinNo, setEIIN] = useState(localStorage.getItem('eiin'));\r\n    const[examId, setExamId] = useState(\"\");\r\n\r\n    const[options, setOption]=useState([]);\r\n    const selectOptions = options.map(item => (\r\n        item\r\n    ))\r\n\r\n\r\n    //Get data on component load event\r\n    useEffect(()=>{\r\n        let postData = new FormData();\r\n        // postData.append(\"eiin\", eiinNo);\r\n         postData.append(\"examId\", examId);\r\n        Axios.post(`${window.$baseUrl}/seat-plan/api/exam.php?action=list`, postData).then(response => {\r\n            const items = response.data;\r\n            let local_count = 0;\r\n            items.map((item) => {\r\n                local_count += 1;\r\n                setOption(options => [...options, <SelectOption key={local_count} id={item.id} name={item.name} />]);\r\n            })\r\n           \r\n            }).catch(error => {\r\n                console.log(error);\r\n                alert(\"Something goes wrong. Please try again\");\r\n            }); //end of axios.\r\n    }, []); //end of useEffect\r\n\r\n    const examChanged=(e)=>{\r\n       setExamId(e.target.value);\r\n    }\r\n\r\n    let history = useHistory();\r\n\r\n    const goToBuildingSelection=(e)=>{\r\n        e.preventDefault();\r\n        if(examId===\"\"){\r\n            alert(\"Select Exam\");\r\n            return;\r\n        }\r\n\r\n        history.push({\r\n            pathname: '/seat-plan/new/select-building',\r\n            search: '?query=abc',\r\n            state: { id: examId, eiin:eiinNo }\r\n        });\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <TopNav/>\r\n            {/* A good combobox here - https://react-select.com/home */}\r\n            <h1>Select Examination</h1>\r\n\r\n            <div className=\"cont box-shadow\">\r\n                <select onChange={examChanged}>\r\n                    <option value=\"\">select an exam</option>\r\n                    {selectOptions}\r\n                </select>\r\n\r\n                <button onClick={goToBuildingSelection}>Next</button>\r\n            </div>\r\n           \r\n        </>\r\n    );\r\n}\r\nexport default withRouter(CreateSeatPlan);\r\n\r\nfunction SelectOption(props){\r\n    return(\r\n    <option value={props.id}>{props.name}</option>\r\n    );\r\n}","D:\\xampp\\htdocs\\seat-plan\\src\\components\\CreateSeatPlanNew.js",["107","108","109","110","111","112","113","114","115"],"import React, { useState, useEffect } from \"react\";\r\nimport Axios from 'axios';\r\nimport TopNav from \"./TopNav\";\r\nimport { Redirect, withRouter, useHistory } from 'react-router-dom';\r\nimport \"./CreateSeatPlan.css\";\r\nimport Modal from 'react-modal';\r\nimport Footer from \"./../Footer\";\r\n\r\nfunction CreateSeatPlanNew() {\r\n    Modal.setAppElement('#root')\r\n    const customStyles = {\r\n        content: {\r\n            top: '50%',\r\n            left: '50%',\r\n            right: 'auto',\r\n            bottom: 'auto',\r\n            marginRight: '-50%',\r\n            transform: 'translate(-50%, -50%)'\r\n        }\r\n    };\r\n\r\n    var subtitle;\r\n    const [isBuildingModalOpen, setBuildingModalOpen] = useState(false);\r\n    const [isFloorModalOpen, setFloorModalOpen] = useState(false);\r\n\r\n    function openBuildingModal() {\r\n        setBuildingModalOpen(true);\r\n    }\r\n\r\n    function openFloorModal() {\r\n        setFloorModalOpen(true);\r\n    }\r\n\r\n    function afterOpenModal() {\r\n        // references are now sync'd and can be accessed.\r\n        subtitle.style.color = '#f00';\r\n    }\r\n\r\n    function closeBuildingModal() {\r\n        setBuildingModalOpen(false);\r\n        let newBuildingName = document.getElementById(\"newBuildingName\").value;\r\n\r\n        if (newBuildingName.trim() === \"\") {\r\n            return;\r\n        }\r\n\r\n        let postData = new FormData();\r\n        postData.append(\"name\", newBuildingName);\r\n        postData.append(\"eiin\", eiinNo);\r\n\r\n\r\n\r\n        Axios.post(`${window.$baseUrl}/seat-plan/api/building.php?action=create`, postData).then(response => {\r\n            if (response.data.issuccess) {\r\n                //response.data.buildingId\r\n                setBuildingOptions(buildingOptions => [...buildingOptions, <SelectOption key={response.data.buildingId} id={response.data.buildingId} name={newBuildingName} />]);\r\n                setBuildingId(response.data.buildingId);\r\n                setFloorOptions([]);\r\n            }\r\n            else {\r\n                alert(response.message);\r\n\r\n            }\r\n        }).catch(error => {\r\n            console.log(error);\r\n            alert(\"Something goes wrong. Please try again.\");\r\n\r\n        }); //end of axios.\r\n    }\r\n\r\n    function closeFloorModal() {\r\n\r\n        setFloorModalOpen(false);\r\n\r\n        if (buildingId === \"\") {\r\n            alert(\"Select a building\");\r\n            return;\r\n        }\r\n        let newFloorName = document.getElementById(\"newFloorName\").value;\r\n        if (newFloorName.trim() === \"\") {\r\n            return;\r\n        }\r\n\r\n        let postData = new FormData();\r\n        postData.append(\"eiin\", eiinNo);\r\n        postData.append(\"buildingId\", buildingId);\r\n        postData.append(\"name\", newFloorName);\r\n\r\n\r\n\r\n        Axios.post(`${window.$baseUrl}/seat-plan/api/floor.php?action=create`, postData).then(response => {\r\n            if (response.data.issuccess) {\r\n                // response.data.floorId\r\n                setFloorOptions(floorOptions => [...floorOptions, <SelectOption key={response.data.floorId} id={response.data.floorId} name={newFloorName} />]);\r\n                setFloorId(response.data.floorId);\r\n            }\r\n            else {\r\n                alert(response.data.message);\r\n            }\r\n\r\n        }).catch(error => {\r\n            console.log(error);\r\n            alert(\"Something goes wrong. Please try again.\");\r\n        }); //end of axios.\r\n    }\r\n\r\n    const [eiinNo, setEIIN] = useState(localStorage.getItem('eiin'));\r\n    const [examId, setExamId] = useState(\"\");\r\n    const [examOptions, setExamOptions] = useState([]);\r\n    const examList = examOptions.map(item => (\r\n        item\r\n    ))\r\n\r\n    const [buildingId, setBuildingId] = useState(\"\");\r\n    const [buildingOptions, setBuildingOptions] = useState([]);\r\n    const buildingList = buildingOptions.map(item => (\r\n        item\r\n    ))\r\n\r\n    const [floorId, setFloorId] = useState(\"\");\r\n    const [floorOptions, setFloorOptions] = useState([]);\r\n    const floorList = floorOptions.map(item => (\r\n        item\r\n    ))\r\n\r\n    const [saveResult, setSaveResult] = useState(\"\");\r\n    const [buttonText, setButtonText] = useState(\"Save & add another\");\r\n    const [isDisbale, setDisable] = useState(\"\");\r\n\r\n    const [rooms, setRooms] = useState([]);\r\n\r\n    const tableRows = rooms.map(item => (\r\n        item\r\n    ))\r\n\r\n\r\n    //Get data on component load event\r\n    useEffect(() => {\r\n        Axios.post(`${window.$baseUrl}/seat-plan/api/exam.php?action=list`).then(response => {\r\n            const items = response.data;\r\n            let local_count = 0;\r\n            items.map((item) => {\r\n                local_count += 1;\r\n                setExamOptions(examOptions => [...examOptions, <SelectOption key={local_count} id={item.id} name={item.name} />]);\r\n            })\r\n\r\n        }).catch(error => {\r\n            console.log(error);\r\n            alert(\"Something goes wrong. Please try again\");\r\n        }); //end of axios.\r\n\r\n\r\n        let buildingListParameters = new FormData();\r\n        buildingListParameters.append(\"eiin\", eiinNo);\r\n        Axios.post(`${window.$baseUrl}/seat-plan/api/building.php?action=list`, buildingListParameters).then(response => {\r\n            const items = response.data;\r\n            let local_count = 0;\r\n            items.map((item) => {\r\n                local_count += 1;\r\n                setBuildingOptions(buildingOptions => [...buildingOptions, <SelectOption key={local_count} id={item.id} name={item.name} />]);\r\n            })\r\n\r\n        }).catch(error => {\r\n            console.log(error);\r\n            alert(\"Something goes wrong. Please try again\");\r\n        }); //end of axios.\r\n\r\n    }, []); //end of useEffect\r\n\r\n    const examChanged = (e) => {\r\n        setExamId(e.target.value);\r\n    }\r\n\r\n    const buildingChanged = (e) => {\r\n        let buildingIdNo = e.target.value;\r\n        setFloorOptions([]);\r\n        let floorListParameters = new FormData();\r\n        floorListParameters.append(\"buildingId\", buildingIdNo);\r\n\r\n        Axios.post(`${window.$baseUrl}/seat-plan/api/floor.php?action=list`, floorListParameters).then(response => {\r\n            const items = response.data;\r\n            let local_count = 0;\r\n            items.map((item) => {\r\n                local_count += 1;\r\n                setFloorOptions(floorOptions => [...floorOptions, <SelectOption key={local_count} id={item.id} name={item.name} />]);\r\n            })\r\n\r\n        }).catch(error => {\r\n            console.log(error);\r\n            alert(\"Something goes wrong. Please try again\");\r\n        }); //end of axios.\r\n\r\n\r\n        setBuildingId(e.target.value);\r\n    }\r\n\r\n    const floorChanged = (e) => {\r\n        setFloorId(e.target.value);\r\n    }\r\n\r\n\r\n    const createRoom = (e) => {\r\n        e.preventDefault();\r\n        if (String(examId).trim() === \"\") {\r\n            alert(\"Select exam.\");\r\n            return;\r\n        }\r\n        if (buildingId.toString().trim() === \"\") {\r\n            alert(\"Select building.\");\r\n            return;\r\n        }\r\n\r\n        if (floorId.toString().trim() === \"\") {\r\n            alert(\"Select floor.\");\r\n            return;\r\n        }\r\n\r\n        if (roomNo.toString().trim() === \"\") {\r\n            alert(\"Enter room number.\");\r\n            return;\r\n        }\r\n\r\n        if (capacity.toString() === \"\") {\r\n            alert(\"Enter total capacity.\");\r\n            return;\r\n        }\r\n\r\n        let postData = new FormData();\r\n        postData.append(\"eiin\", eiinNo);\r\n        postData.append(\"buildingId\", buildingId);\r\n        postData.append(\"floorId\", floorId);\r\n        postData.append(\"examId\", examId);\r\n        postData.append(\"roomNo\", roomNo);\r\n        postData.append(\"startRoll\", startRoll);\r\n        postData.append(\"endRoll\", endRoll);\r\n        postData.append(\"capacity\", capacity);\r\n\r\n        setDisable(\"disabled\");\r\n        setButtonText(\"saving ...\");\r\n        Axios.post(`${window.$baseUrl}/seat-plan/api/room.php?action=create`, postData).then(response => {\r\n            if (response.data.issuccess) {\r\n                setRoomNo(\"\");\r\n                setStartRoll(\"\");\r\n                setEndRoll(\"\");\r\n                setCapacity(\"\");\r\n                setSaveResult(\"Saved successfully.\");\r\n                setDisable(\"\");\r\n                setButtonText(\"Save & add another\");\r\n                document.getElementById(\"roomNo\").focus();\r\n                setTimeout(() => {\r\n                    setSaveResult(\" \");\r\n                }, 3000);\r\n\r\n                setRooms(rooms => [<TableRow key={response.data.roomId} id={response.data.roomId} r={roomNo} startRoll={startRoll} endRoll={endRoll} total={capacity} />, ...rooms]);\r\n\r\n            }\r\n            else {\r\n                alert(response.data.message);\r\n                setDisable(\"\");\r\n                setButtonText(\"Try again\");\r\n            }\r\n\r\n        }).catch(error => {\r\n            console.log(error);\r\n            alert(\"Failed to save\");\r\n            setDisable(\"\");\r\n            setButtonText(\"Try again\");\r\n        }); //end of axios.\r\n\r\n    }\r\n\r\n    // const[floorName, setFloorName] = useState(\"\");\r\n    // const floorNameChanged=(e)=>{\r\n    //     e.preventDefault();\r\n    //     setFloorName(e.target.value);\r\n    // }\r\n\r\n    const [roomNo, setRoomNo] = useState(\"\");\r\n    const [startRoll, setStartRoll] = useState(\"\");\r\n    const [endRoll, setEndRoll] = useState(\"\");\r\n    const [capacity, setCapacity] = useState(\"\");\r\n\r\n    const roomNoChanged = (e) => {\r\n        e.preventDefault();\r\n        setRoomNo(e.target.value);\r\n    }\r\n\r\n    const startRollChanged = (e) => {\r\n        // e.preventDefault();\r\n        let startRoll = e.target.value;\r\n        const re = /^[0-9\\b]+$/;\r\n        if (e.target.value === '' || re.test(e.target.value)) {\r\n            let startingRoll = e.target.value;\r\n\r\n            if (startingRoll !== \"\" && endRoll !== \"\") {\r\n                let intStartRoll = parseInt(startingRoll);\r\n                let intEndRoll = parseInt(endRoll);\r\n                let diff = (intEndRoll - intStartRoll) + 1;\r\n                setCapacity(diff);\r\n            }\r\n\r\n            setStartRoll(e.target.value);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const endRollChanged = (e) => {\r\n        e.preventDefault();\r\n        const re = /^[0-9\\b]+$/;\r\n        if (e.target.value === '' || re.test(e.target.value)) {\r\n            let endingRoll = e.target.value;\r\n\r\n            if (startRoll !== \"\" && endingRoll !== \"\") {\r\n                let intStartRoll = parseInt(startRoll);\r\n                let intEndRoll = parseInt(endingRoll);\r\n                let diff = (intEndRoll - intStartRoll) + 1;\r\n                setCapacity(diff);\r\n            }\r\n\r\n            setEndRoll(e.target.value);\r\n        }\r\n    }\r\n\r\n    const capacityChanged = (e) => {\r\n        e.preventDefault();\r\n        const re = /^[0-9\\b]+$/;\r\n        if (e.target.value === '' || re.test(e.target.value)) {\r\n            setCapacity(e.target.value);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"master-wrapper\">\r\n                <header style={{ marginBottom: \"0\", paddingTop: \"0\", boxShadow: \"none\" }}>\r\n                    <TopNav />\r\n                </header>\r\n                <main>\r\n                    {/* A good combobox here - https://react-select.com/home */}\r\n                    <h1>Create New Seat Plan</h1>\r\n\r\n                    <div className=\"cont box-shadow\">\r\n                        <select onChange={examChanged}>\r\n                            <option value=\"\">select an exam</option>\r\n                            {examList}\r\n                        </select>\r\n\r\n                        <div className=\"buildingBlock\">\r\n                            <select onChange={buildingChanged} value={buildingId}>\r\n                                <option value=\"\">select building</option>\r\n                                {buildingList}\r\n                            </select>\r\n                            <button id=\"addNewBuildingModalButton\" onClick={openBuildingModal}>Add</button>\r\n                        </div>\r\n\r\n                        <div className=\"floorBlock\">\r\n                            <select onChange={floorChanged} value={floorId}>\r\n                                <option value=\"\">select a floor</option>\r\n                                {floorList}\r\n                            </select>\r\n                            <button id=\"addNewFloorModalButton\" onClick={openFloorModal}>Add</button>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"saveResult\" style={{ height: \"20px\" }}>{saveResult}</div>\r\n                        <div className=\"input-row\">\r\n                            <div className=\"inputBox\">\r\n                                <label>Room No.</label>\r\n                                <input id=\"roomNo\" name=\"roomNo\" onChange={roomNoChanged} value={roomNo} type=\"text\" placeholder=\"\" autoFocus />\r\n                            </div>\r\n\r\n                            <div className=\"inputBox\">\r\n                                <label>Start Roll</label>\r\n                                <input name=\"startRoll\" onChange={startRollChanged} value={startRoll} type=\"text\" placeholder=\"(optional)\" />\r\n                            </div>\r\n                            <div className=\"inputBox\">\r\n                                <label>End Roll</label>\r\n                                <input name=\"endRoll\" onChange={endRollChanged} value={endRoll} type=\"text\" placeholder=\"(optional)\" />\r\n                            </div>\r\n\r\n                            <div className=\"inputBox\">\r\n                                <label>Total</label>\r\n                                <input name=\"roomCapacity\" onChange={capacityChanged} value={capacity} type=\"text\" maxLength=\"4\" placeholder=\"\" />\r\n                            </div>\r\n\r\n                            <div className=\"buttonCont\">\r\n                                <button className=\"saveButton\" disabled={isDisbale} onClick={createRoom} name=\"createRoom\">{buttonText}</button>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div style={{ display: \"block\" }}>\r\n                            {tableRows}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Modal\r\n                        isOpen={isBuildingModalOpen}\r\n                        onAfterOpen={afterOpenModal}\r\n                        onRequestClose={closeBuildingModal}\r\n                        style={customStyles}\r\n\r\n                        contentLabel=\"Example Modal\"\r\n                    >\r\n\r\n                        <h2 ref={_subtitle => (subtitle = _subtitle)}>Add New Building Name</h2>\r\n\r\n                        <input id=\"newBuildingName\" />\r\n\r\n                        <button onClick={closeBuildingModal}>Save</button>\r\n                    </Modal>\r\n\r\n                    <Modal\r\n                        isOpen={isFloorModalOpen}\r\n                        onAfterOpen={afterOpenModal}\r\n                        onRequestClose={closeFloorModal}\r\n                        style={customStyles}\r\n\r\n                        contentLabel=\"Example Modal New\"\r\n                    >\r\n\r\n                        <h2 ref={_subtitle => (subtitle = _subtitle)}>Add New Floor Name</h2>\r\n                        <input id=\"newFloorName\" />\r\n                        <button onClick={closeFloorModal}>Save</button>\r\n                    </Modal>\r\n                </main>\r\n                <footer>\r\n                    <Footer />\r\n                </footer>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default CreateSeatPlanNew;\r\n\r\nfunction SelectOption(props) {\r\n    return (\r\n        <option value={props.id}>{props.name}</option>\r\n    );\r\n}\r\n\r\n\r\nfunction TableRow(props) {\r\n\r\n    const [display, setDisplay] = useState(\"flex\");\r\n    const onClick = () => {\r\n\r\n        var r = window.confirm(\"Are you sure to delete this room -\" + props.r + \" ?\\nYou can add it again later.\");\r\n        if (r === true) {\r\n            let postData = new FormData();\r\n            postData.append(\"id\", props.id);\r\n            Axios.post(`${window.$baseUrl}/seat-plan/api/room.php?action=delete`, postData).then(response => {\r\n                if (response.data.issuccess) {\r\n                    setDisplay(\"none\");\r\n                    alert(\"Deleted successfully.\");\r\n                }\r\n                else {\r\n                    alert(response.data.message);\r\n                }\r\n\r\n            }).catch(error => {\r\n                console.log(error);\r\n                alert(\"Something goes wrong. Please try again\");\r\n            }); //end of axios.\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"addedRoom\" style={{ display: `${display}` }}>\r\n            <div>{props.r}</div>\r\n            <div>{props.startRoll === \"0\" ? \"-\" : props.startRoll}</div>\r\n            <div>{props.endRoll === \"0\" ? \"-\" : props.endRoll}</div>\r\n            <div>{props.total}</div>\r\n            <div><button className=\"deleteRoom\" onClick={onClick}>Delete</button></div>\r\n        </div>\r\n\r\n    );\r\n}\r\n","D:\\xampp\\htdocs\\seat-plan\\src\\components\\CreateFloor.js",["116"],"import React, {useEffect, useState} from 'react';\r\n// import { useLocation } from \"react-router-dom\";\r\nimport Axios from 'axios';\r\nimport TopNav from \"./TopNav\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\n\r\nexport default function CreateFloor(props){\r\n\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n    const[examId, setExamId]=useState(\"\");\r\n    const[eiinNo, setEiin]=useState(\"\");\r\n    const[buildingId, setBuildingId] = useState(\"\");\r\n\r\n    const[examName, setExamName]=useState(\"\");\r\n    const[reference, setReference]=useState(\"\");\r\n    // const[saveResult, setSaveResult] = useState(\"\");\r\n    const[buttonText, setButtonText]=useState(\"Next\");\r\n    const[isDisbale, setDisable]=useState(\"\");\r\n    const[buildingName, setBuildingName] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        // console.log(location.pathname); // result: '/secondpage'\r\n        // console.log(location.search); // result: '?query=abc'\r\n        setEiin(location.state.eiin)\r\n        setExamId(location.state.examId);\r\n        setBuildingId(location.state.buildingId);\r\n\r\n        let examIdData = new FormData();\r\n        examIdData.append(\"examId\", location.state.examId);\r\n        Axios.post(`${window.$baseUrl}/seat-plan/api/exam.php?action=details`, examIdData).then(response => {\r\n            const item = response.data;\r\n            setExamName(item.name);\r\n            setReference(item.reference);\r\n            }).catch(error => {\r\n                console.log(error);\r\n                alert(\"Something goes wrong. Please try again\");\r\n            }); //end of exam axios.\r\n\r\n        let buildingData = new FormData();\r\n        buildingData.append(\"id\", location.state.buildingId);\r\n        Axios.post(`${window.$baseUrl}/seat-plan/api/building.php?action=details`, buildingData).then(response => {\r\n            const item = response.data;\r\n            setBuildingName(item.name);\r\n            \r\n            }).catch(error => {\r\n                console.log(error);\r\n                alert(\"Something goes wrong. Please try again\");\r\n            }); //end of building axios.\r\n\r\n     }, []); //end of useEffect()\r\n\r\n    \r\n    \r\n     const createFloor=(e)=>{\r\n         e.preventDefault();\r\n         if(floorName.trim() ===\"\"){\r\n             alert(\"Enter floor name.\");\r\n             return;\r\n         }\r\n         let postData = new FormData();\r\n         postData.append(\"eiin\", eiinNo);\r\n         postData.append(\"buildingId\", buildingId);\r\n         postData.append(\"name\", floorName);\r\n        \r\n         setDisable(\"disabled\");\r\n         setButtonText(\"saving ...\");\r\n\r\n        Axios.post(`${window.$baseUrl}/seat-plan/api/floor.php?action=create`, postData).then(response => {\r\n            if(response.data.issuccess){\r\n                history.push({\r\n                    pathname: '/seat-plan/new/create-room',\r\n                    search: '?query=abc',\r\n                    state: { examId: examId, eiin:eiinNo, buildingId:buildingId, floorId:response.data.floorId }\r\n                });\r\n            }\r\n           else{\r\n               alert(response.data.message);\r\n                setDisable(\"\");\r\n                setButtonText(\"Try again\");\r\n           }\r\n\r\n            }).catch(error => {\r\n                console.log(error);\r\n                alert(\"Something goes wrong. Please try again.\");\r\n                setDisable(\"\");\r\n                setButtonText(\"Try again\");\r\n            }); //end of axios.\r\n    }\r\n\r\n    const[floorName, setFloorName] = useState(\"\");\r\n    const floorNameChanged=(e)=>{\r\n        e.preventDefault();\r\n        setFloorName(e.target.value);\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <TopNav/>\r\n            <div className=\"examName\">{examName}</div>\r\n            <div className=\"reference\">({reference})</div>\r\n            <h1>Create Floor</h1>\r\n            <div className=\"buildingAndFloor\">\r\n                <div className=\"buildingName\">Building: {buildingName}</div>\r\n            </div>\r\n\r\n            <div className=\"cont box-shadow\">\r\n                <input onChange={floorNameChanged} value={floorName} type=\"text\" placeholder=\"type floor name\" />\r\n                <button onClick={createFloor} disabled={isDisbale}>{buttonText}</button>\r\n            </div>\r\n\r\n    </>\r\n    );\r\n}\r\n",["117","118"],"D:\\xampp\\htdocs\\seat-plan\\src\\components\\SeatPlanTableRow.js",["119"],"import React, { useState } from 'react';\r\nimport Axios from 'axios';\r\n\r\n\r\nexport default function SeatPlanTableRow(props){\r\n    \r\n    const[display, setDisplay] = useState(\"\");\r\n\r\n    const roomDeleted = floorId =>{\r\n        // let floorId = event.target.value;\r\n       \r\n        props.roomDeleted(floorId);\r\n    }\r\n\r\n    const onClick = () => {\r\n       \r\n        var r = window.confirm(\"Are you sure to delete this room -\" + props.r + \" ?\\nYou can add it again later.\");\r\n        if (r === true) {\r\n            let postData = new FormData();\r\n            postData.append(\"id\", props.id);\r\n            Axios.post(`${window.$baseUrl}/seat-plan/api/room.php?action=delete`, postData).then(response => {\r\n                if(response.data.issuccess){\r\n                   // setDisplay(\"none\");\r\n                    roomDeleted(props.id);\r\n                    alert(\"Deleted successfully.\");\r\n                }\r\n                else{\r\n                    alert(response.data.message);\r\n                }\r\n               \r\n            }).catch(error => {\r\n                console.log(error);\r\n                alert(\"Something goes wrong. Please try again\");\r\n            }); //end of axios.\r\n        } \r\n    }\r\n    return(\r\n        <tr style={{display:`${display}`}}>\r\n            <td>\r\n                {props.b}\r\n            </td>\r\n            <td>\r\n                {props.f}\r\n            </td>\r\n            <td>\r\n                {props.r}\r\n            </td>\r\n            <td>\r\n                {props.startRoll === \"0\"?\"-\":props.startRoll}\r\n            </td>\r\n            <td>\r\n                {props.endRoll === \"0\" ? \"-\":props.endRoll}\r\n            </td>\r\n            <td>\r\n                {props.total}\r\n            </td>\r\n            <td>\r\n               <button className=\"deleteRoom\" onClick={onClick}>Delete</button>\r\n            </td>\r\n        </tr>\r\n    );\r\n}","D:\\xampp\\htdocs\\seat-plan\\src\\Footer.js",["120"],"D:\\xampp\\htdocs\\seat-plan\\src\\components\\SelectBuilding.js",["121","122"],"D:\\xampp\\htdocs\\seat-plan\\src\\components\\CreateBuilding.js",["123"],"import React, {useEffect, useState} from 'react';\r\n// import { useLocation } from \"react-router-dom\";\r\nimport Axios from 'axios';\r\nimport TopNav from \"./TopNav\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport \"./CreateSeatPlan.css\";\r\n\r\nexport default function CreateBuilding(props){\r\n\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n    const[examId, setExamId]=useState(\"\");\r\n    const[examName, setExamName]=useState(\"\");\r\n    const[reference, setReference]=useState(\"\");\r\n    const[eiinNo, setEiin]=useState(\"\");\r\n\r\n    const[buttonText, setButtonText]=useState(\"Next\");\r\n    const[isDisbale, setDisable]=useState(\"\");\r\n    \r\n    useEffect(() => {\r\n        // console.log(location.pathname); // result: '/secondpage'\r\n        // console.log(location.search); // result: '?query=abc'\r\n        // console.log(location.state.id); // result: 'some_value'\r\n\r\n        setEiin(location.state.eiin)\r\n        setExamId(location.state.id);\r\n\r\n        let examPostData = new FormData();\r\n        examPostData.append(\"examId\", location.state.id);\r\n        Axios.post(`${window.$baseUrl}/seat-plan/api/exam.php?action=details`, examPostData).then(response => {\r\n            const item = response.data;\r\n            setExamName(item.name);\r\n            setReference(item.reference);\r\n            }).catch(error => {\r\n                console.log(error);\r\n                alert(\"Something goes wrong. Please try again\");\r\n            }); //end of exam axios.\r\n\r\n    }, []); //end of useEffect()\r\n\r\n    \r\n    \r\n    const createBuilding=(e)=>{\r\n         e.preventDefault();\r\n         if(buildingName.trim()===\"\"){\r\n             alert(\"Enter building name.\");\r\n             return;\r\n         }\r\n         let postData = new FormData();\r\n         postData.append(\"name\", buildingName);\r\n         postData.append(\"eiin\", eiinNo);\r\n        \r\n         setDisable(\"disabled\");\r\n         setButtonText(\"saving ...\");\r\n\r\n        Axios.post(`${window.$baseUrl}/seat-plan/api/building.php?action=create`, postData).then(response => {\r\n            if (response.data.issuccess) {\r\n                history.push({\r\n                    pathname: '/seat-plan/new/select-floor',\r\n                    search: '?query=abc',\r\n                    state: { examId: examId, eiin: eiinNo, buildingId: response.data.buildingId }\r\n                });\r\n            }\r\n            else {\r\n                alert(response.message);\r\n                setDisable(\"\");\r\n                setButtonText(\"Try again\");\r\n            }\r\n        }).catch(error => {\r\n            console.log(error);\r\n            alert(\"Something goes wrong. Please try again.\");\r\n            setDisable(\"\");\r\n            setButtonText(\"Try again\");\r\n        }); //end of axios.\r\n    }\r\n\r\n    const[buildingName, setBuildingName] = useState(\"\");\r\n    const buildingNameChanged=(e)=>{\r\n        e.preventDefault();\r\n        setBuildingName(e.target.value);\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <TopNav/>\r\n            <div className=\"examName\">{examName}</div>\r\n            <div className=\"reference\">({reference})</div>\r\n            <h1>Create New Building</h1>\r\n            <div className=\"cont box-shadow\">\r\n                <input onChange={buildingNameChanged} value={buildingName} type=\"text\" placeholder=\"type building name\" />\r\n                <button onClick={createBuilding} disabled={isDisbale}>{buttonText}</button>\r\n            </div>\r\n            \r\n        </>\r\n    );\r\n}\r\n","D:\\xampp\\htdocs\\seat-plan\\src\\components\\SelectFloor.js",["124","125","126","127","128","129","130","131"],"import React, {useEffect, useState} from 'react';\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport Axios from 'axios';\r\nimport TopNav from \"./TopNav\";\r\nimport \"./CreateSeatPlan.css\";\r\nimport \"./SelectFloor.css\";\r\n\r\nexport default function SelectFloor(props){\r\n\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n    const[examId, setExamId]=useState(\"\");\r\n    const[eiinNo, setEiin] = useState(\"\");\r\n    const[buildingId, setBuildingId]=useState(\"\");\r\n    const[floorId, setFloorId] = useState(\"\");\r\n    const[options, setOption]=useState([]);\r\n    const selectOptions = options.map(item => (\r\n        item\r\n    ))\r\n\r\n    const[examName, setExamName]=useState(\"\");\r\n    const[reference, setReference]=useState(\"\");\r\n    const[saveResult, setSaveResult] = useState(\"\");\r\n    const[buttonText, setButtonText]=useState(\"Save & add another\");\r\n    const[isDisbale, setDisable]=useState(\"\");\r\n    const[buildingName, setBuildingName] = useState(\"\");\r\n    \r\n    useEffect(() => {\r\n        // console.log(location.pathname); // result: '/secondpage'\r\n        // console.log(location.search); // result: '?query=abc'\r\n        // console.log(location.state.id); // result: 'some_value'\r\n        setEiin(location.state.eiin);\r\n        setExamId(location.state.examId);\r\n        setBuildingId(location.state.buildingId);\r\n\r\n        let buildingIdData = new FormData();\r\n        buildingIdData.append(\"buildingId\", location.state.buildingId);\r\n        \r\n        Axios.post(`${window.$baseUrl}/seat-plan/api/floor.php?action=list`, buildingIdData).then(response => {\r\n            const items = response.data;\r\n            let local_count = 0;\r\n            items.map((item) => {\r\n                local_count += 1;\r\n                setOption(options => [...options, <SelectOption key={local_count} id={item.id} name={item.name} />]);\r\n            })\r\n           \r\n            }).catch(error => {\r\n                console.log(error);\r\n                alert(\"Something goes wrong. Please try again\");\r\n            }); //end of axios.\r\n\r\n        let examIdData = new FormData();\r\n        examIdData.append(\"examId\", location.state.examId);\r\n        Axios.post(`${window.$baseUrl}/seat-plan/api/exam.php?action=details`, examIdData).then(response => {\r\n            const item = response.data;\r\n            setExamName(item.name);\r\n            setReference(item.reference);\r\n            }).catch(error => {\r\n                console.log(error);\r\n                alert(\"Something goes wrong. Please try again\");\r\n            }); //end of exam axios.\r\n\r\n        let buildingData = new FormData();\r\n        buildingData.append(\"id\", location.state.buildingId);\r\n        Axios.post(`${window.$baseUrl}/seat-plan/api/building.php?action=details`, buildingData).then(response => {\r\n            const item = response.data;\r\n            setBuildingName(item.name);\r\n            \r\n            }).catch(error => {\r\n                console.log(error);\r\n                alert(\"Something goes wrong. Please try again\");\r\n            }); //end of building axios.\r\n\r\n     }, []); //end of useEffect()\r\n\r\n     const floorChanged=(e)=>{\r\n        if(e.target.value===\"create\"){\r\n            history.push({\r\n                pathname: '/seat-plan/new/create-floor',\r\n                search: '?query=abc',\r\n                state: { examId: examId, eiin:eiinNo, buildingId:buildingId }\r\n            });\r\n        }\r\n        setFloorId(e.target.value);\r\n     }\r\n\r\n     const goToRoomSelection=(e)=>{\r\n         e.preventDefault();\r\n        if(floorId===\"\"){\r\n            alert(\"Select a floor\");\r\n            return;\r\n        }\r\n        history.push({\r\n            pathname: '/seat-plan/new/create-room',\r\n            search: '?query=abc',\r\n            state: { examId: examId, eiin:eiinNo, buildingId:buildingId, floorId:floorId }\r\n        });\r\n     }\r\n    return(\r\n        <>\r\n            <TopNav />\r\n            <div className=\"examName\">{examName}</div>\r\n            <div className=\"reference\">({reference})</div>\r\n\r\n            <h1>Select Floor</h1>\r\n            <div className=\"buildingAndFloor\">\r\n                <div className=\"buildingName\">Building: {buildingName}</div>\r\n            </div>\r\n\r\n            <div className=\"cont box-shadow\">\r\n                <select onChange={floorChanged} value={floorId}>\r\n                    <option value=\"\">select a floor</option>\r\n                    {selectOptions}\r\n                    <optgroup label=\"_________\">\r\n                        <option value=\"create\">Create New</option>\r\n                    </optgroup>\r\n                </select>\r\n                <button onClick={goToRoomSelection}>Next</button>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction SelectOption(props){\r\n    return(\r\n        <option value={props.id}>{props.name}</option>\r\n    );\r\n}","D:\\xampp\\htdocs\\seat-plan\\src\\components\\CreateRoom.js",["132","133","134","135"],"import React, {useEffect, useState, useFocus} from 'react';\r\n// import { useLocation } from \"react-router-dom\";\r\nimport Axios from 'axios';\r\nimport TopNav from \"./TopNav\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport \"./CreateRoom.css\";\r\n// import SeatPlanTableRow from \"./SeatPlanTableRow\";\r\n\r\nexport default function CreateRoom(props){\r\n\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n    const[eiinNo, setEiin]=useState(\"\");\r\n    const[examId, setExamId]=useState(\"\");\r\n    const[buildingId, setBuildingId] = useState(\"\");\r\n    const[buildingName, setBuildingName] = useState(\"\");\r\n    const[floorId, setFloorId]=useState(\"\");\r\n    const[floorName, setFloorName]=useState(\"\");\r\n    const[examName, setExamName]=useState(\"\");\r\n    const[reference, setReference]=useState(\"\");\r\n    const[saveResult, setSaveResult] = useState(\"\");\r\n    const[buttonText, setButtonText]=useState(\"Save & add another\");\r\n    const[isDisbale, setDisable]=useState(\"\");\r\n    \r\n    const[rooms, setRooms]=useState([]);\r\n\r\n    const tableRows = rooms.map(item => (\r\n        item\r\n    ))\r\n\r\n    // const [setFocus, focusProps] = useFocus(true);\r\n\r\n    useEffect(() => {\r\n        setEiin(location.state.eiin)\r\n        setExamId(location.state.examId);\r\n        setBuildingId(location.state.buildingId);\r\n        setFloorId(location.state.floorId);\r\n\r\n        let examIdData = new FormData();\r\n        examIdData.append(\"examId\", location.state.examId);\r\n        Axios.post(`${window.$baseUrl}/seat-plan/api/exam.php?action=details`, examIdData).then(response => {\r\n            const item = response.data;\r\n            setExamName(item.name);\r\n            setReference(item.reference);\r\n            }).catch(error => {\r\n                console.log(error);\r\n                alert(\"Something goes wrong. Please try again\");\r\n            }); //end of exam axios.\r\n\r\n        let buildingData = new FormData();\r\n        buildingData.append(\"id\", location.state.buildingId);\r\n        Axios.post(`${window.$baseUrl}/seat-plan/api/building.php?action=details`, buildingData).then(response => {\r\n            const item = response.data;\r\n            setBuildingName(item.name);\r\n            \r\n            }).catch(error => {\r\n                console.log(error);\r\n                alert(\"Something goes wrong. Please try again\");\r\n            }); //end of building axios.\r\n\r\n\r\n            let floorData = new FormData();\r\n            floorData.append(\"id\", location.state.floorId);\r\n            Axios.post(`${window.$baseUrl}/seat-plan/api/floor.php?action=details`, floorData).then(response => {\r\n                const item = response.data;\r\n                setFloorName(item.name);\r\n                }).catch(error => {\r\n                    console.log(error);\r\n                    alert(\"Something goes wrong. Please try again\");\r\n                }); //end of floor axios.\r\n\r\n     }, []); //end of useEffect()\r\n\r\n    \r\n    \r\n     const createRoom=(e)=>{\r\n         e.preventDefault();\r\n         if(roomNo.trim() === \"\"){\r\n             alert(\"Enter room number.\");\r\n             return;\r\n         }\r\n\r\n         if(capacity === \"\"){\r\n            alert(\"Enter total capacity.\");\r\n            return;\r\n        }\r\n\r\n         let postData = new FormData();\r\n         postData.append(\"eiin\", eiinNo);\r\n         postData.append(\"buildingId\", buildingId);\r\n         postData.append(\"floorId\", floorId);\r\n         postData.append(\"examId\", examId);\r\n         postData.append(\"roomNo\", roomNo);\r\n         postData.append(\"startRoll\", startRoll);\r\n         postData.append(\"endRoll\", endRoll);\r\n         postData.append(\"capacity\", capacity);\r\n        \r\n         setDisable(\"disabled\");\r\n         setButtonText(\"saving ...\");\r\n         Axios.post(`${window.$baseUrl}/seat-plan/api/room.php?action=create`, postData).then(response => {\r\n                if (response.data.issuccess) {\r\n                    setRoomNo(\"\");\r\n                    setStartRoll(\"\");\r\n                    setEndRoll(\"\");\r\n                    setCapacity(\"\");\r\n                    setSaveResult(\"Saved successfully.\");\r\n                    setDisable(\"\");\r\n                    setButtonText(\"Save & add another\");\r\n                    document.getElementById(\"roomNo\").focus();\r\n                    setTimeout(() => {\r\n                        setSaveResult(\" \");\r\n                    }, 4000);\r\n\r\n                setRooms(rooms => [ <TableRow key={response.data.roomId} id={response.data.roomId} r={roomNo} startRoll={startRoll} endRoll={endRoll} total={capacity} />, ...rooms]);\r\n\r\n                }\r\n                else {\r\n                    alert(response.data.message);\r\n                    setDisable(\"\");\r\n                    setButtonText(\"Try again\");\r\n                }\r\n\r\n         }).catch(error => {\r\n             console.log(error);\r\n             alert(\"Failed to save\");\r\n             setDisable(\"\");\r\n             setButtonText(\"Try again\");\r\n         }); //end of axios.\r\n       \r\n    }\r\n\r\n    // const[floorName, setFloorName] = useState(\"\");\r\n    // const floorNameChanged=(e)=>{\r\n    //     e.preventDefault();\r\n    //     setFloorName(e.target.value);\r\n    // }\r\n\r\n    const[roomNo, setRoomNo] = useState(\"\");\r\n    const[startRoll, setStartRoll] = useState(\"\");\r\n    const[endRoll, setEndRoll] = useState(\"\");\r\n    const[capacity, setCapacity] = useState(\"\");\r\n\r\n    const roomNoChanged=(e)=>{\r\n        e.preventDefault();\r\n        setRoomNo(e.target.value);\r\n    }\r\n\r\n    const startRollChanged=(e)=>{\r\n        // e.preventDefault();\r\n        let startRoll = e.target.value;\r\n        const re = /^[0-9\\b]+$/;\r\n        if (e.target.value === '' || re.test(e.target.value)) {\r\n            let startingRoll = e.target.value;\r\n            \r\n            if(startingRoll !==\"\" && endRoll !==\"\"){\r\n                let intStartRoll = parseInt(startingRoll);\r\n                let intEndRoll = parseInt(endRoll);\r\n                let diff = intEndRoll - intStartRoll;\r\n                setCapacity(diff);\r\n            }\r\n\r\n            setStartRoll(e.target.value);\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    const endRollChanged=(e)=>{\r\n        e.preventDefault();\r\n        const re = /^[0-9\\b]+$/;\r\n        if (e.target.value === '' || re.test(e.target.value)) {\r\n            let endingRoll = e.target.value;\r\n            \r\n            if(startRoll !==\"\" && endingRoll !==\"\"){\r\n                let intStartRoll = parseInt(startRoll);\r\n                let intEndRoll = parseInt(endingRoll);\r\n                let diff = intEndRoll - intStartRoll;\r\n                setCapacity(diff);\r\n            }\r\n\r\n            setEndRoll(e.target.value);\r\n        }\r\n    }\r\n\r\n    const capacityChanged = (e) => {\r\n        e.preventDefault();\r\n        const re = /^[0-9\\b]+$/;\r\n        if (e.target.value === '' || re.test(e.target.value)) {\r\n            setCapacity(e.target.value);\r\n        }\r\n    }\r\n\r\n\r\n    return(\r\n        <>\r\n            <TopNav/>\r\n            <div className=\"examName\">{examName}</div>\r\n            <div className=\"reference\">({reference})</div>\r\n\r\n            <h1>Create Room</h1>\r\n            \r\n            <div className=\"buildingAndFloor\">\r\n                <div className=\"buildingName\">Building: {buildingName}</div>\r\n                <div className=\"floorName\">Floor: {floorName}</div>\r\n            </div>\r\n           \r\n\r\n            <div className=\"cont box-shadow\">\r\n                <div className=\"saveResult\" style={{height:\"20px\"}}>{saveResult}</div>\r\n                <div className=\"input-row\">\r\n                    <div className=\"inputBox\">\r\n                        <label>Room No.</label>\r\n                        <input id=\"roomNo\" name=\"roomNo\" onChange={roomNoChanged} value={roomNo} type=\"text\"  placeholder=\"\"  autoFocus />\r\n                    </div>\r\n                    \r\n                    <div className=\"inputBox\">\r\n                        <label>Start Roll</label>\r\n                        <input name=\"startRoll\" onChange={startRollChanged} value={startRoll} type=\"text\" placeholder=\"(optional)\" />\r\n                    </div>\r\n                    <div className=\"inputBox\">\r\n                        <label>End Roll</label>\r\n                        <input name=\"endRoll\" onChange={endRollChanged} value={endRoll} type=\"text\" placeholder=\"(optional)\" />\r\n                    </div>\r\n\r\n                    <div className=\"inputBox\">\r\n                        <label>Total</label>\r\n                        <input name=\"roomCapacity\" onChange={capacityChanged}  value={capacity} type=\"text\" maxLength=\"4\" placeholder=\"\" />\r\n                    </div>\r\n\r\n                    <div className=\"buttonCont\">\r\n                    <button className=\"saveButton\"  disabled={isDisbale} onClick={createRoom} name=\"createRoom\">{buttonText}</button>\r\n                    </div>\r\n                    \r\n                </div>\r\n\r\n                <div style={{display:\"block\"}}>\r\n                        {tableRows}\r\n                </div>\r\n            </div>\r\n    </>\r\n    );\r\n}\r\n\r\nfunction TableRow(props){\r\n    \r\n    const[display, setDisplay] = useState(\"flex\");\r\n    const onClick = () => {\r\n       \r\n        var r = window.confirm(\"Are you sure to delete this room -\" + props.r + \" ?\\nYou can add it again later.\");\r\n        if (r === true) {\r\n            let postData = new FormData();\r\n            postData.append(\"id\", props.id);\r\n            Axios.post(`${window.$baseUrl}/seat-plan/api/room.php?action=delete`, postData).then(response => {\r\n                if(response.data.issuccess){\r\n                    setDisplay(\"none\");\r\n                    alert(\"Deleted successfully.\");\r\n                }\r\n                else{\r\n                    alert(response.data.message);\r\n                }\r\n               \r\n            }).catch(error => {\r\n                console.log(error);\r\n                alert(\"Something goes wrong. Please try again\");\r\n            }); //end of axios.\r\n        } \r\n    }\r\n\r\n\r\n    return(\r\n\r\n            <div className=\"addedRoom\" style={{display:`${display}`}}>\r\n                <div>{props.r}</div>\r\n                <div>{props.startRoll === \"0\"?\"-\":props.startRoll}</div>\r\n                <div>{props.endRoll === \"0\" ? \"-\":props.endRoll}</div>\r\n                <div>{props.total}</div>\r\n                <div><button className=\"deleteRoom\" onClick={onClick}>Delete</button></div>\r\n            </div>\r\n       \r\n    );\r\n}\r\n",["136","137"],"D:\\xampp\\htdocs\\seat-plan\\src\\components\\TopNav.js",[],"D:\\xampp\\htdocs\\seat-plan\\src\\App.js",["138","139","140","141","142","143"],"import React from \"react\";\r\nimport './App.css';\r\nimport Home from \"./components/home/Home\";\r\nimport Login from \"./Login\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport ViewSeatPlan from \"./components/ViewSeatPlan\";\r\nimport CreateSeatPlan from \"./components/CreateSeatPlan\";\r\nimport CreateSeatPlanNew from \"./components/CreateSeatPlanNew\";\r\nimport SelectBuilding from \"./components/SelectBuilding\";\r\nimport CreateBuilding from \"./components/CreateBuilding\";\r\nimport SelectFloor from \"./components/SelectFloor\";\r\nimport CreateFloor from \"./components/CreateFloor\";\r\nimport CreateRoom from \"./components/CreateRoom\";\r\n\r\nimport { BrowserRouter as Router, Switch, Route, Redirect} from 'react-router-dom';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n    \r\n      <Router>\r\n        \r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route path=\"/home\" component={Login} />\r\n          <Route path=\"/login\" component={Login} />\r\n         \r\n\r\n          <Route exact path=\"/dashboard\" component={Dashboard} />\r\n          {/* <Link to=\"\">Create Seat Plan</Link> */}\r\n          <Route exact path=\"/seat-plan/new\" component={CreateSeatPlanNew} />\r\n          {/* <Route exact path=\"/seat-plan/new/select-exam\" component={CreateSeatPlan} /> */}\r\n          {/* <Route path=\"/seat-plan/new/select-building\" component={SelectBuilding} />\r\n          <Route path=\"/seat-plan/new/create-building\" component={CreateBuilding} />\r\n          <Route path=\"/seat-plan/new/select-floor\" component={SelectFloor} />\r\n          <Route path=\"/seat-plan/new/create-floor\" component={CreateFloor} />\r\n          <Route path=\"/seat-plan/new/create-room\" component={CreateRoom} /> */}\r\n          <Route exact path=\"/view-seat-plan\" component={ViewSeatPlan} />\r\n          <Redirect to=\"/\"/>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n\r\n  \r\n}\r\n\r\nexport default App;\r\n","D:\\xampp\\htdocs\\seat-plan\\src\\reportWebVitals.js",[],["144","145"],"D:\\xampp\\htdocs\\seat-plan\\src\\components\\home\\Home.js",["146","147"],{"ruleId":"148","severity":1,"message":"149","line":9,"column":20,"nodeType":"150","messageId":"151","endLine":9,"endColumn":27},{"ruleId":"148","severity":1,"message":"152","line":10,"column":20,"nodeType":"150","messageId":"151","endLine":10,"endColumn":29},{"ruleId":"153","severity":1,"message":"154","line":24,"column":30,"nodeType":"155","messageId":"156","endLine":24,"endColumn":32},{"ruleId":"157","severity":1,"message":"158","line":33,"column":8,"nodeType":"159","endLine":33,"endColumn":10,"suggestions":"160"},{"ruleId":"153","severity":1,"message":"154","line":58,"column":30,"nodeType":"155","messageId":"156","endLine":58,"endColumn":32},{"ruleId":"148","severity":1,"message":"161","line":59,"column":17,"nodeType":"150","messageId":"151","endLine":59,"endColumn":28},{"ruleId":"162","severity":1,"message":"163","line":74,"column":20,"nodeType":"164","messageId":"165","endLine":74,"endColumn":22},{"ruleId":"153","severity":1,"message":"154","line":87,"column":30,"nodeType":"155","messageId":"156","endLine":87,"endColumn":32},{"ruleId":"148","severity":1,"message":"161","line":88,"column":17,"nodeType":"150","messageId":"151","endLine":88,"endColumn":28},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","severity":1,"message":"171","line":65,"column":29,"nodeType":"172","endLine":65,"endColumn":108},{"ruleId":"173","severity":1,"message":"174","line":74,"column":21,"nodeType":"172","endLine":76,"endColumn":84},{"ruleId":"148","severity":1,"message":"149","line":10,"column":20,"nodeType":"150","messageId":"151","endLine":10,"endColumn":27},{"ruleId":"153","severity":1,"message":"154","line":66,"column":30,"nodeType":"155","messageId":"156","endLine":66,"endColumn":32},{"ruleId":"157","severity":1,"message":"175","line":76,"column":8,"nodeType":"159","endLine":76,"endColumn":10,"suggestions":"176"},{"ruleId":"153","severity":1,"message":"154","line":96,"column":30,"nodeType":"155","messageId":"156","endLine":96,"endColumn":32},{"ruleId":"177","severity":1,"message":"178","line":275,"column":115,"nodeType":"179","endLine":275,"endColumn":126},{"ruleId":"148","severity":1,"message":"180","line":4,"column":10,"nodeType":"150","messageId":"151","endLine":4,"endColumn":18},{"ruleId":"148","severity":1,"message":"149","line":9,"column":20,"nodeType":"150","messageId":"151","endLine":9,"endColumn":27},{"ruleId":"153","severity":1,"message":"154","line":26,"column":30,"nodeType":"155","messageId":"156","endLine":26,"endColumn":32},{"ruleId":"157","severity":1,"message":"158","line":35,"column":8,"nodeType":"159","endLine":35,"endColumn":10,"suggestions":"181"},{"ruleId":"148","severity":1,"message":"180","line":4,"column":10,"nodeType":"150","messageId":"151","endLine":4,"endColumn":18},{"ruleId":"148","severity":1,"message":"182","line":4,"column":20,"nodeType":"150","messageId":"151","endLine":4,"endColumn":30},{"ruleId":"148","severity":1,"message":"183","line":4,"column":32,"nodeType":"150","messageId":"151","endLine":4,"endColumn":42},{"ruleId":"148","severity":1,"message":"149","line":107,"column":20,"nodeType":"150","messageId":"151","endLine":107,"endColumn":27},{"ruleId":"153","severity":1,"message":"154","line":142,"column":30,"nodeType":"155","messageId":"156","endLine":142,"endColumn":32},{"ruleId":"153","severity":1,"message":"154","line":158,"column":30,"nodeType":"155","messageId":"156","endLine":158,"endColumn":32},{"ruleId":"157","severity":1,"message":"175","line":168,"column":8,"nodeType":"159","endLine":168,"endColumn":10,"suggestions":"184"},{"ruleId":"153","severity":1,"message":"154","line":183,"column":30,"nodeType":"155","messageId":"156","endLine":183,"endColumn":32},{"ruleId":"148","severity":1,"message":"185","line":290,"column":13,"nodeType":"150","messageId":"151","endLine":290,"endColumn":22},{"ruleId":"157","severity":1,"message":"186","line":52,"column":9,"nodeType":"159","endLine":52,"endColumn":11,"suggestions":"187"},{"ruleId":"166","replacedBy":"188"},{"ruleId":"168","replacedBy":"189"},{"ruleId":"148","severity":1,"message":"190","line":7,"column":20,"nodeType":"150","messageId":"151","endLine":7,"endColumn":30},{"ruleId":"191","severity":1,"message":"192","line":12,"column":58,"nodeType":"179","endLine":12,"endColumn":73},{"ruleId":"153","severity":1,"message":"154","line":36,"column":30,"nodeType":"155","messageId":"156","endLine":36,"endColumn":32},{"ruleId":"157","severity":1,"message":"193","line":57,"column":9,"nodeType":"159","endLine":57,"endColumn":11,"suggestions":"194"},{"ruleId":"157","severity":1,"message":"193","line":40,"column":8,"nodeType":"159","endLine":40,"endColumn":10,"suggestions":"195"},{"ruleId":"148","severity":1,"message":"196","line":24,"column":11,"nodeType":"150","messageId":"151","endLine":24,"endColumn":21},{"ruleId":"148","severity":1,"message":"197","line":24,"column":23,"nodeType":"150","messageId":"151","endLine":24,"endColumn":36},{"ruleId":"148","severity":1,"message":"198","line":25,"column":11,"nodeType":"150","messageId":"151","endLine":25,"endColumn":21},{"ruleId":"148","severity":1,"message":"199","line":25,"column":23,"nodeType":"150","messageId":"151","endLine":25,"endColumn":36},{"ruleId":"148","severity":1,"message":"200","line":26,"column":11,"nodeType":"150","messageId":"151","endLine":26,"endColumn":20},{"ruleId":"148","severity":1,"message":"201","line":26,"column":22,"nodeType":"150","messageId":"151","endLine":26,"endColumn":32},{"ruleId":"153","severity":1,"message":"154","line":43,"column":30,"nodeType":"155","messageId":"156","endLine":43,"endColumn":32},{"ruleId":"157","severity":1,"message":"186","line":75,"column":9,"nodeType":"159","endLine":75,"endColumn":11,"suggestions":"202"},{"ruleId":"148","severity":1,"message":"203","line":1,"column":37,"nodeType":"150","messageId":"151","endLine":1,"endColumn":45},{"ruleId":"148","severity":1,"message":"204","line":12,"column":11,"nodeType":"150","messageId":"151","endLine":12,"endColumn":18},{"ruleId":"157","severity":1,"message":"205","line":73,"column":9,"nodeType":"159","endLine":73,"endColumn":11,"suggestions":"206"},{"ruleId":"148","severity":1,"message":"185","line":151,"column":13,"nodeType":"150","messageId":"151","endLine":151,"endColumn":22},{"ruleId":"166","replacedBy":"207"},{"ruleId":"168","replacedBy":"208"},{"ruleId":"148","severity":1,"message":"209","line":7,"column":8,"nodeType":"150","messageId":"151","endLine":7,"endColumn":22},{"ruleId":"148","severity":1,"message":"210","line":9,"column":8,"nodeType":"150","messageId":"151","endLine":9,"endColumn":22},{"ruleId":"148","severity":1,"message":"211","line":10,"column":8,"nodeType":"150","messageId":"151","endLine":10,"endColumn":22},{"ruleId":"148","severity":1,"message":"212","line":11,"column":8,"nodeType":"150","messageId":"151","endLine":11,"endColumn":19},{"ruleId":"148","severity":1,"message":"213","line":12,"column":8,"nodeType":"150","messageId":"151","endLine":12,"endColumn":19},{"ruleId":"148","severity":1,"message":"214","line":13,"column":8,"nodeType":"150","messageId":"151","endLine":13,"endColumn":18},{"ruleId":"166","replacedBy":"215"},{"ruleId":"168","replacedBy":"216"},{"ruleId":"148","severity":1,"message":"217","line":2,"column":8,"nodeType":"150","messageId":"151","endLine":2,"endColumn":13},{"ruleId":"148","severity":1,"message":"218","line":4,"column":10,"nodeType":"150","messageId":"151","endLine":4,"endColumn":14},"no-unused-vars","'setEIIN' is assigned a value but never used.","Identifier","unusedVar","'setExamId' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'examId'. Either include it or remove the dependency array.","ArrayExpression",["219"],"'local_count' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["220"],"no-negated-in-lhs",["221"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","React Hook useEffect has a missing dependency: 'eiinNo'. Either include it or remove the dependency array.",["222"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Redirect' is defined but never used.",["223"],"'withRouter' is defined but never used.","'useHistory' is defined but never used.",["224"],"'startRoll' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'location.state.buildingId', 'location.state.eiin', and 'location.state.examId'. Either include them or remove the dependency array.",["225"],["220"],["221"],"'setDisplay' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","React Hook useEffect has missing dependencies: 'location.state.eiin' and 'location.state.id'. Either include them or remove the dependency array.",["226"],["227"],"'saveResult' is assigned a value but never used.","'setSaveResult' is assigned a value but never used.","'buttonText' is assigned a value but never used.","'setButtonText' is assigned a value but never used.","'isDisbale' is assigned a value but never used.","'setDisable' is assigned a value but never used.",["228"],"'useFocus' is defined but never used.","'history' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'location.state.buildingId', 'location.state.eiin', 'location.state.examId', and 'location.state.floorId'. Either include them or remove the dependency array.",["229"],["220"],["221"],"'CreateSeatPlan' is defined but never used.","'SelectBuilding' is defined but never used.","'CreateBuilding' is defined but never used.","'SelectFloor' is defined but never used.","'CreateFloor' is defined but never used.","'CreateRoom' is defined but never used.",["220"],["221"],"'Axios' is defined but never used.","'Link' is defined but never used.",{"desc":"230","fix":"231"},"no-global-assign","no-unsafe-negation",{"desc":"232","fix":"233"},{"desc":"230","fix":"234"},{"desc":"232","fix":"235"},{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},{"desc":"238","fix":"240"},{"desc":"236","fix":"241"},{"desc":"242","fix":"243"},"Update the dependencies array to be: [examId]",{"range":"244","text":"245"},"Update the dependencies array to be: [eiinNo]",{"range":"246","text":"247"},{"range":"248","text":"245"},{"range":"249","text":"247"},"Update the dependencies array to be: [location.state.buildingId, location.state.eiin, location.state.examId]",{"range":"250","text":"251"},"Update the dependencies array to be: [location.state.eiin, location.state.id]",{"range":"252","text":"253"},{"range":"254","text":"253"},{"range":"255","text":"251"},"Update the dependencies array to be: [location.state.buildingId, location.state.eiin, location.state.examId, location.state.floorId]",{"range":"256","text":"257"},[1317,1319],"[examId]",[3028,3030],"[eiinNo]",[1252,1254],[5618,5620],[2119,2121],"[location.state.buildingId, location.state.eiin, location.state.examId]",[2185,2187],"[location.state.eiin, location.state.id]",[1505,1507],[3083,3085],[2901,2903],"[location.state.buildingId, location.state.eiin, location.state.examId, location.state.floorId]"]