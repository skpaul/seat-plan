[{"D:\\xampp\\htdocs\\seat-plan\\src\\components\\ViewSeatPlan.js":"1","D:\\xampp\\htdocs\\seat-plan\\src\\index.js":"2","D:\\xampp\\htdocs\\seat-plan\\src\\Login.js":"3","D:\\xampp\\htdocs\\seat-plan\\src\\Dashboard.js":"4","D:\\xampp\\htdocs\\seat-plan\\src\\components\\CreateSeatPlan.js":"5","D:\\xampp\\htdocs\\seat-plan\\src\\components\\CreateSeatPlanNew.js":"6","D:\\xampp\\htdocs\\seat-plan\\src\\components\\CreateFloor.js":"7","D:\\xampp\\htdocs\\seat-plan\\src\\components\\SeatPlanTableRow.js":"8","D:\\xampp\\htdocs\\seat-plan\\src\\Footer.js":"9","D:\\xampp\\htdocs\\seat-plan\\src\\components\\SelectBuilding.js":"10","D:\\xampp\\htdocs\\seat-plan\\src\\components\\CreateBuilding.js":"11","D:\\xampp\\htdocs\\seat-plan\\src\\components\\SelectFloor.js":"12","D:\\xampp\\htdocs\\seat-plan\\src\\components\\CreateRoom.js":"13","D:\\xampp\\htdocs\\seat-plan\\src\\components\\TopNav.js":"14","D:\\xampp\\htdocs\\seat-plan\\src\\App.js":"15","D:\\xampp\\htdocs\\seat-plan\\src\\reportWebVitals.js":"16","D:\\xampp\\htdocs\\seat-plan\\src\\components\\home\\Home.js":"17"},{"size":8831,"mtime":1614700109604,"results":"18","hashOfConfig":"19"},{"size":736,"mtime":1614702936128,"results":"20","hashOfConfig":"19"},{"size":4683,"mtime":1614699913651,"results":"21","hashOfConfig":"19"},{"size":13816,"mtime":1614699869663,"results":"22","hashOfConfig":"19"},{"size":2391,"mtime":1614700045606,"results":"23","hashOfConfig":"19"},{"size":17036,"mtime":1614700058027,"results":"24","hashOfConfig":"19"},{"size":4215,"mtime":1614700022609,"results":"25","hashOfConfig":"19"},{"size":1848,"mtime":1614700079661,"results":"26","hashOfConfig":"19"},{"size":566,"mtime":1614237677778,"results":"27","hashOfConfig":"19"},{"size":3846,"mtime":1614700087424,"results":"28","hashOfConfig":"19"},{"size":3436,"mtime":1614700004206,"results":"29","hashOfConfig":"19"},{"size":4769,"mtime":1614700096280,"results":"30","hashOfConfig":"19"},{"size":10281,"mtime":1614700037940,"results":"31","hashOfConfig":"19"},{"size":586,"mtime":1614105080813,"results":"32","hashOfConfig":"19"},{"size":1888,"mtime":1614668383784,"results":"33","hashOfConfig":"19"},{"size":375,"mtime":1614105080814,"results":"34","hashOfConfig":"19"},{"size":2215,"mtime":1614700124823,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"1lepqo6",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"39"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"39"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"39"},"D:\\xampp\\htdocs\\seat-plan\\src\\components\\ViewSeatPlan.js",["80","81","82","83","84","85","86","87","88","89"],"import React, { useState, useEffect } from \"react\";\r\nimport Axios from 'axios';\r\nimport \"./ViewSeatPlan.css\";\r\nimport TopNav from \"./TopNav\";\r\nimport SeatPlanTableRow from \"./SeatPlanTableRow\";\r\nimport Footer from \"./../Footer\";\r\n\r\nexport default function ViewSeatPlan(props) {\r\n    const [eiinNo, setEIIN] = useState(localStorage.getItem('eiin'));\r\n    const [examId, setExamId] = useState(\"\");\r\n    const [options, setOption] = useState([]);\r\n    const [rows, setRow] = useState([]); //for table tr\r\n    const [isDownloadVisible, setDownloadVisible] = useState(false);\r\n\r\n    const [departmentId, setDepartmentId] = useState(localStorage.getItem('departmentId'));\r\n\r\n    //Get data on component load event\r\n    useEffect(() => {\r\n        let postData = new FormData();\r\n        // postData.append(\"eiin\", eiinNo);\r\n        postData.append(\"examId\", examId);\r\n        Axios.get(`${window.$apiUrl}/exam.php?action=list&departmentid=${departmentId}`, postData).then(response => {\r\n            const items = response.data;\r\n            let local_count = 0;\r\n            items.map((item) => {\r\n                local_count += 1;\r\n                setOption(options => [...options, <SelectOption key={local_count} id={item.examId} name={item.name} />]);\r\n            })\r\n\r\n        }).catch(error => {\r\n            console.log(error);\r\n            alert(\"Something goes wrong. Please try again\");\r\n        }); //end of axios.\r\n    }, []); //end of useEffect\r\n\r\n    const selectOptions = options.map(item => (\r\n        item\r\n    ))\r\n\r\n    const tableRows = rows.map(item => (\r\n        item\r\n    ))\r\n\r\n\r\n    const [totalCapacity, setTotalCapacity] = useState(0);\r\n\r\n    //This function is passed to Building and called from there.\r\n    const roomDeleted = (value) => {\r\n        setRow([]);\r\n        setTotalCapacity(0);\r\n        let selectedExamId = document.getElementById(\"examIdCombo\").value;\r\n        let postData = new FormData();\r\n        postData.append(\"eiin\", eiinNo);\r\n        postData.append(\"examId\", selectedExamId);\r\n\r\n        Axios.post(`${window.$apiUrl}/view-seat-plan.php?action=list`, postData).then(response => {\r\n            const items = response.data;\r\n            let local_count = 0;\r\n            items.map((item) => {\r\n                local_count += 1;\r\n                setTotalCapacity(prevTotal => prevTotal + parseInt(item.capacity));\r\n                setRow(rows => [...rows, <SeatPlanTableRow roomDeleted={roomDeleted} key={item.id} id={item.id} b={item.building} f={item.floor} r={item.roomNo} startRoll={item.startRoll} endRoll={item.endRoll} total={item.capacity} />]);\r\n            })\r\n            // setCount(count => count + local_count);\r\n            //setCount(local_count);\r\n        }).catch(error => {\r\n            console.log(error);\r\n            alert(\"Something goes wrong. Please try again\");\r\n        }); //end of axios.\r\n\r\n    };\r\n\r\n    const examChanged = (e) => {\r\n        let examId = e.target.value;\r\n        if (examId == \"\") {\r\n            setRow([]);\r\n            setTotalCapacity(0);\r\n            setDownloadVisible(false);\r\n            return;\r\n        }\r\n        \r\n        let postData = new FormData();\r\n        postData.append(\"eiin\", eiinNo);\r\n        postData.append(\"examId\", examId);\r\n        Axios.post(`${window.$apiUrl}/view-seat-plan.php?action=list`, postData).then(response => {\r\n            const items = response.data;\r\n            let local_count = 0;\r\n            items.map((item) => {\r\n                local_count += 1;\r\n                setTotalCapacity(prevTotal => prevTotal + parseInt(item.capacity));\r\n                //setRow(rows => [...rows, <TableRow key={local_count} b={item.building} f={item.floor} r={item.roomNo} startRoll={item.startRoll} endRoll={item.endRoll} total={item.capacity} />]);\r\n\r\n                setRow(rows => [...rows, <SeatPlanTableRow roomDeleted={roomDeleted} key={item.roomId} id={item.roomId} b={item.building} f={item.floor} r={item.roomNo} startRoll={item.startRoll} endRoll={item.endRoll} total={item.capacity} />]);\r\n            })\r\n            // setCount(count => count + local_count);\r\n            //setCount(local_count);\r\n        }).catch(error => {\r\n            console.log(error);\r\n            alert(\"Something goes wrong. Please try again\");\r\n        }); //end of axios.\r\n\r\n        //make download button visible\r\n        setDownloadVisible(true);\r\n    }\r\n\r\n    const downloadClicked = (e)=>{\r\n        let selectedExamId = document.getElementById(\"examIdCombo\").value;\r\n        let postData = new FormData();\r\n        postData.append(\"eiin\", eiinNo);\r\n        postData.append(\"examId\", selectedExamId);\r\n\r\n        // axios({\r\n        //     method: 'post',\r\n        //     url: '/user/12345',\r\n        //     data: {\r\n        //       firstName: 'Fred',\r\n        //       lastName: 'Flintstone'\r\n        //     }\r\n        //   });\r\n\r\n        Axios({\r\n            url: `${window.$apiUrl}/csv.php`,\r\n            method: 'post',\r\n            // responseType: 'blob', // important\r\n            data : postData\r\n          }).then((response) => {\r\n            \r\n             const url = `${window.$apiUrl}/csv-files/${eiinNo}.csv`;\r\n             const link = document.createElement('a');\r\n             link.href = url;\r\n            link.target = \"_blank\";\r\n            link.setAttribute(\r\n                'download',\r\n                `Data.csv`,\r\n                );\r\n             document.body.appendChild(link);\r\n             link.click();\r\n            //  document.body.removeChild(link);\r\n            // Clean up and remove the link\r\n            link.parentNode.removeChild(link);\r\n\r\n\r\n          });\r\n\r\n        // Axios.post(`${window.$apiUrl}/csv.php`, postData).then(response => {\r\n        //     const items = response.data;\r\n        //     let local_count = 0;\r\n              \r\n            \r\n        // }).catch(error => {\r\n        //     console.log(error);\r\n        //     alert(\"Something goes wrong. Please try again\");\r\n        // }); //end of axios.\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"master-wrapper\">\r\n                <header style={{ marginBottom: \"0\", paddingTop: \"0\", boxShadow: \"none\" }}>\r\n                    <TopNav />\r\n                </header>\r\n                <main>\r\n                    {/* A good combobox here - https://react-select.com/home */}\r\n                    <h1>Seat Plan Details</h1>\r\n                    <div className=\"seatPlanCont box-shadow\">\r\n                        <select id=\"examIdCombo\" onChange={examChanged}>\r\n                            <option value=\"\">select an exam</option>\r\n                            {selectOptions}\r\n                        </select>\r\n                        <table>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Building</th>\r\n                                    <th>Floor</th>\r\n                                    <th>Room No.</th>\r\n                                    <th>Start Roll</th>\r\n                                    <th>End Roll</th>\r\n                                    <th>Total</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {tableRows}\r\n                            </tbody>\r\n                            <tfoot>\r\n                                <tr>\r\n                                    <td colSpan=\"5\">Grand Total = </td>\r\n                                    <td>{totalCapacity}</td>\r\n                                </tr>\r\n                            </tfoot>\r\n                        </table>\r\n                        {\r\n                            isDownloadVisible && (\r\n                                <div className=\"downloadButton\" onClick={downloadClicked}>Download CSV</div>\r\n                            )\r\n                        }\r\n                        \r\n                    </div>\r\n                    \r\n                </main>\r\n                <footer>\r\n                    <Footer />\r\n                </footer>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction SelectOption(props) {\r\n    return (\r\n        <option value={props.id}>{props.name}</option>\r\n    );\r\n}\r\n\r\n// function TableRow(props){\r\n//     return(\r\n//         <tr>\r\n//             <td>\r\n//                 {props.b}\r\n//             </td>\r\n//             <td>\r\n//                 {props.f}\r\n//             </td>\r\n//             <td>\r\n//                 {props.r}\r\n//             </td>\r\n//             <td>\r\n//                 {props.startRoll==0?props.startRoll:\"-\"}\r\n//             </td>\r\n//             <td>\r\n//                 {props.endRoll==0?props.endRoll:\"-\"}\r\n//             </td>\r\n//             <td>\r\n//                 {props.total}\r\n//             </td>\r\n//         </tr>\r\n//     );\r\n// }",["90","91"],"D:\\xampp\\htdocs\\seat-plan\\src\\index.js",[],"D:\\xampp\\htdocs\\seat-plan\\src\\Login.js",["92","93","94","95"],"import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport \"./Login.css\";\r\n\r\nfunction Login(props) {\r\n    localStorage.clear();\r\n    const location = useLocation();\r\n    localStorage.setItem('departmentId', location.state.departmentId);\r\n    // console.log(location.state.departmentId);\r\n    const[eiin, setEiin] = useState(\"\");\r\n    const[password, setPassword] = useState(\"\");\r\n    const[departmentDetails, setDepartmentDetails]= useState({});\r\n\r\n    //Get data on component load event\r\n    useEffect(() => {\r\n        Axios.get(`${window.$apiUrl}/department-ministry.php?action=details&department-id=${location.state.departmentId}`).then(response => {\r\n            const data = response.data;\r\n            setDepartmentDetails(response.data);\r\n            \r\n           console.log(localStorage.getItem('departmentId'));\r\n        }).catch(error => {\r\n            console.log(error);\r\n            alert(\"Something goes wrong. Please try again\");\r\n        }); //end of axios.\r\n\r\n    }, []); //end of useEffect\r\n\r\n    const eiinChanged = event=>{\r\n        event.preventDefault();\r\n        let value = event.target.value;\r\n        setEiin(value);\r\n    }\r\n\r\n    const passChanged=event=>{\r\n        event.preventDefault();\r\n        setPassword(event.target.value.trim());\r\n    }\r\n\r\n    const onSubmit=(event)=>{\r\n        event.preventDefault();\r\n        setButtonText(\"wait..\");\r\n        let data = new FormData();\r\n        data.append(\"eiin\",eiin);\r\n        data.append(\"password\", password);\r\n\r\n        Axios.post(`${window.$apiUrl}/validate-login.php`,data).then(response=>{\r\n            \r\n            if(!response.data.issuccess){\r\n                alert(response.data.message);\r\n                setButtonText(\"Try again\");\r\n                return;\r\n            }\r\n\r\n            setButtonText(\"Redirecting...\");\r\n\r\n            localStorage.setItem('eiin', eiin);\r\n            props.history.push('/dashboard'); // Redirect to dashboard\r\n        }).catch(error=>{\r\n            alert(\"Something goes wrong. Could not login.\");\r\n            console.log(error);\r\n            setButtonText(\"Try again\");\r\n        });\r\n       \r\n    }\r\n\r\n    const[butonText, setButtonText]= useState(\"Login\");\r\n    return (\r\n            <div className=\"login-master-wrapper\">\r\n                <main id=\"login-main\">\r\n                    <div className=\"loginTitle\" style={{marginBottom:\"20px\"}}>Seat Plan Management</div>\r\n                    <div style={{display:\"flex\"}}>\r\n                        <div className=\"departmentLogo\">\r\n                            {/* <img src=\"logos/govt-logo.png\"></img> */}\r\n                            <img src={process.env.PUBLIC_URL + '/logos/' + departmentDetails.logoName } /> \r\n                        </div>\r\n                        <div>\r\n                            <div className=\"departmentName\">{departmentDetails.fullNameOfDepartment}</div>\r\n                            <div className=\"ministryName\">{departmentDetails.ministryName}</div>\r\n                        </div>\r\n                    </div>\r\n                   \r\n                    <div style={{display:\"flex\"}}>\r\n                    <iframe width=\"420\" height=\"315\"\r\n                     allowFullScreen=\"allowfullscreen\"\r\n                        src=\"https://www.youtube.com/embed/v8B23p2snIo?autoplay=1\">\r\n                    </iframe>\r\n                  \r\n                   \r\n\r\n                    <div id=\"login-form-container\" style={{width:\"442px\", height:\"314px\", marginLeft:\"20px\"}}>\r\n                        <h2 className=\"login-h2\">Institute Login</h2>\r\n                        <form>\r\n                        <article className=\"login-article\">\r\n                            <input className=\"login-name-textbox\" name=\"eiin\" onChange={eiinChanged} value={eiin} type=\"text\" placeholder=\"EIIN\" />\r\n                        </article>\r\n                        <article  className=\"login-article\">\r\n                            <input className=\"login-password-textbox\" name=\"password\" onChange={passChanged} value={password} type=\"password\" placeholder=\"password\" />\r\n                        </article>\r\n                        <article  className=\"login-article\">\r\n                            {/* <button className=\"submit\" type=\"submit\" onClick={onSubmit}>Submit</button> */}\r\n                            <input className=\"login-button\" onClick={onSubmit} type=\"submit\"  value={butonText}/>\r\n                        </article>\r\n                        </form>\r\n                    </div>\r\n                    </div>\r\n                   \r\n                </main>\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default Login;","D:\\xampp\\htdocs\\seat-plan\\src\\Dashboard.js",["96","97","98","99","100"],"D:\\xampp\\htdocs\\seat-plan\\src\\components\\CreateSeatPlan.js",["101","102","103","104"],"D:\\xampp\\htdocs\\seat-plan\\src\\components\\CreateSeatPlanNew.js",["105","106","107","108","109","110","111","112","113","114"],"import React, { useState, useEffect } from \"react\";\r\nimport Axios from 'axios';\r\nimport TopNav from \"./TopNav\";\r\nimport { Redirect, withRouter, useHistory } from 'react-router-dom';\r\nimport \"./CreateSeatPlan.css\";\r\nimport Modal from 'react-modal';\r\nimport Footer from \"./../Footer\";\r\n\r\nfunction CreateSeatPlanNew() {\r\n    Modal.setAppElement('#root')\r\n    const customStyles = {\r\n        content: {\r\n            top: '50%',\r\n            left: '50%',\r\n            right: 'auto',\r\n            bottom: 'auto',\r\n            marginRight: '-50%',\r\n            transform: 'translate(-50%, -50%)'\r\n        }\r\n    };\r\n\r\n    var subtitle;\r\n    const [isBuildingModalOpen, setBuildingModalOpen] = useState(false);\r\n    const [isFloorModalOpen, setFloorModalOpen] = useState(false);\r\n\r\n    function openBuildingModal() {\r\n        setBuildingModalOpen(true);\r\n    }\r\n\r\n    function openFloorModal() {\r\n        setFloorModalOpen(true);\r\n    }\r\n\r\n    function afterOpenModal() {\r\n        // references are now sync'd and can be accessed.\r\n        subtitle.style.color = '#f00';\r\n    }\r\n\r\n    function closeBuildingModal() {\r\n        setBuildingModalOpen(false);\r\n        let newBuildingName = document.getElementById(\"newBuildingName\").value;\r\n\r\n        if (newBuildingName.trim() === \"\") {\r\n            return;\r\n        }\r\n\r\n        let postData = new FormData();\r\n        postData.append(\"name\", newBuildingName);\r\n        postData.append(\"eiin\", eiinNo);\r\n\r\n\r\n\r\n        Axios.post(`${window.$apiUrl}/building.php?action=create`, postData).then(response => {\r\n            if (response.data.issuccess) {\r\n                //response.data.buildingId\r\n                setBuildingOptions(buildingOptions => [...buildingOptions, <SelectOption key={response.data.buildingId} id={response.data.buildingId} name={newBuildingName} />]);\r\n                setBuildingId(response.data.buildingId);\r\n                setFloorOptions([]);\r\n            }\r\n            else {\r\n                alert(response.message);\r\n\r\n            }\r\n        }).catch(error => {\r\n            console.log(error);\r\n            alert(\"Something goes wrong. Please try again.\");\r\n\r\n        }); //end of axios.\r\n    }\r\n\r\n    function closeFloorModal() {\r\n\r\n        setFloorModalOpen(false);\r\n\r\n        if (buildingId === \"\") {\r\n            alert(\"Select a building\");\r\n            return;\r\n        }\r\n        let newFloorName = document.getElementById(\"newFloorName\").value;\r\n        if (newFloorName.trim() === \"\") {\r\n            return;\r\n        }\r\n\r\n        let postData = new FormData();\r\n        postData.append(\"eiin\", eiinNo);\r\n        postData.append(\"buildingId\", buildingId);\r\n        postData.append(\"name\", newFloorName);\r\n\r\n\r\n\r\n        Axios.post(`${window.$apiUrl}/floor.php?action=create`, postData).then(response => {\r\n            if (response.data.issuccess) {\r\n                // response.data.floorId\r\n                setFloorOptions(floorOptions => [...floorOptions, <SelectOption key={response.data.floorId} id={response.data.floorId} name={newFloorName} />]);\r\n                setFloorId(response.data.floorId);\r\n            }\r\n            else {\r\n                alert(response.data.message);\r\n            }\r\n\r\n        }).catch(error => {\r\n            console.log(error);\r\n            alert(\"Something goes wrong. Please try again.\");\r\n        }); //end of axios.\r\n    }\r\n\r\n    const [eiinNo, setEIIN] = useState(localStorage.getItem('eiin'));\r\n    const [departmentId, setDepartmentId] = useState(localStorage.getItem('departmentId'));\r\n\r\n    // console.log(localStorage.getItem('departmentId'));\r\n    const [examId, setExamId] = useState(\"\");\r\n    const [examOptions, setExamOptions] = useState([]);\r\n    const examList = examOptions.map(item => (\r\n        item\r\n    ))\r\n\r\n    const [buildingId, setBuildingId] = useState(\"\");\r\n    const [buildingOptions, setBuildingOptions] = useState([]);\r\n    const buildingList = buildingOptions.map(item => (\r\n        item\r\n    ))\r\n\r\n    const [floorId, setFloorId] = useState(\"\");\r\n    const [floorOptions, setFloorOptions] = useState([]);\r\n    const floorList = floorOptions.map(item => (\r\n        item\r\n    ))\r\n\r\n    const [saveResult, setSaveResult] = useState(\"\");\r\n    const [buttonText, setButtonText] = useState(\"Save & add another\");\r\n    const [isDisbale, setDisable] = useState(\"\");\r\n\r\n    const [rooms, setRooms] = useState([]);\r\n\r\n    const tableRows = rooms.map(item => (\r\n        item\r\n    ))\r\n\r\n\r\n    //Get data on component load event\r\n    useEffect(() => {\r\n        Axios.get(`${window.$apiUrl}/exam.php?action=list&departmentid=${departmentId}`).then(response => {\r\n            const items = response.data;\r\n            let local_count = 0;\r\n            items.map((item) => {\r\n                local_count += 1;\r\n                setExamOptions(examOptions => [...examOptions, <SelectOption key={local_count} id={item.examId} name={item.name} />]);\r\n            })\r\n\r\n        }).catch(error => {\r\n            console.log(error);\r\n            alert(\"Something goes wrong. Please try again\");\r\n        }); //end of axios.\r\n\r\n\r\n        let buildingListParameters = new FormData();\r\n        buildingListParameters.append(\"eiin\", eiinNo);\r\n        Axios.post(`${window.$apiUrl}/building.php?action=list`, buildingListParameters).then(response => {\r\n            const items = response.data;\r\n            let local_count = 0;\r\n            items.map((item) => {\r\n                local_count += 1;\r\n                setBuildingOptions(buildingOptions => [...buildingOptions, <SelectOption key={local_count} id={item.id} name={item.name} />]);\r\n            })\r\n\r\n        }).catch(error => {\r\n            console.log(error);\r\n            alert(\"Something goes wrong. Please try again\");\r\n        }); //end of axios.\r\n\r\n    }, []); //end of useEffect\r\n\r\n    const examChanged = (e) => {\r\n        setExamId(e.target.value);\r\n    }\r\n\r\n    const buildingChanged = (e) => {\r\n        let buildingIdNo = e.target.value;\r\n        setFloorOptions([]);\r\n        let floorListParameters = new FormData();\r\n        floorListParameters.append(\"buildingId\", buildingIdNo);\r\n\r\n        Axios.post(`${window.$apiUrl}/floor.php?action=list`, floorListParameters).then(response => {\r\n            const items = response.data;\r\n            let local_count = 0;\r\n            items.map((item) => {\r\n                local_count += 1;\r\n                setFloorOptions(floorOptions => [...floorOptions, <SelectOption key={local_count} id={item.id} name={item.name} />]);\r\n            })\r\n\r\n        }).catch(error => {\r\n            console.log(error);\r\n            alert(\"Something goes wrong. Please try again\");\r\n        }); //end of axios.\r\n\r\n\r\n        setBuildingId(e.target.value);\r\n    }\r\n\r\n    const floorChanged = (e) => {\r\n        setFloorId(e.target.value);\r\n    }\r\n\r\n\r\n    const createRoom = (e) => {\r\n        e.preventDefault();\r\n        if (String(examId).trim() === \"\") {\r\n            alert(\"Select exam.\");\r\n            return;\r\n        }\r\n        if (buildingId.toString().trim() === \"\") {\r\n            alert(\"Select building.\");\r\n            return;\r\n        }\r\n\r\n        if (floorId.toString().trim() === \"\") {\r\n            alert(\"Select floor.\");\r\n            return;\r\n        }\r\n\r\n        if (roomNo.toString().trim() === \"\") {\r\n            alert(\"Enter room number.\");\r\n            return;\r\n        }\r\n\r\n        if (capacity.toString() === \"\") {\r\n            alert(\"Enter total capacity.\");\r\n            return;\r\n        }\r\n\r\n        let postData = new FormData();\r\n        postData.append(\"eiin\", eiinNo);\r\n        postData.append(\"buildingId\", buildingId);\r\n        postData.append(\"floorId\", floorId);\r\n        postData.append(\"examId\", examId);\r\n        postData.append(\"roomNo\", roomNo);\r\n        postData.append(\"startRoll\", startRoll);\r\n        postData.append(\"endRoll\", endRoll);\r\n        postData.append(\"capacity\", capacity);\r\n\r\n        setDisable(\"disabled\");\r\n        setButtonText(\"saving ...\");\r\n        Axios.post(`${window.$apiUrl}/room.php?action=create`, postData).then(response => {\r\n            if (response.data.issuccess) {\r\n                setRoomNo(\"\");\r\n                setStartRoll(\"\");\r\n                setEndRoll(\"\");\r\n                setCapacity(\"\");\r\n                setSaveResult(\"Saved successfully.\");\r\n                setDisable(\"\");\r\n                setButtonText(\"Save & add another\");\r\n                document.getElementById(\"roomNo\").focus();\r\n                setTimeout(() => {\r\n                    setSaveResult(\" \");\r\n                }, 3000);\r\n\r\n                setRooms(rooms => [<TableRow key={response.data.roomId} id={response.data.roomId} r={roomNo} startRoll={startRoll} endRoll={endRoll} total={capacity} />, ...rooms]);\r\n\r\n            }\r\n            else {\r\n                alert(response.data.message);\r\n                setDisable(\"\");\r\n                setButtonText(\"Try again\");\r\n            }\r\n\r\n        }).catch(error => {\r\n            console.log(error);\r\n            alert(\"Failed to save\");\r\n            setDisable(\"\");\r\n            setButtonText(\"Try again\");\r\n        }); //end of axios.\r\n\r\n    }\r\n\r\n    // const[floorName, setFloorName] = useState(\"\");\r\n    // const floorNameChanged=(e)=>{\r\n    //     e.preventDefault();\r\n    //     setFloorName(e.target.value);\r\n    // }\r\n\r\n    const [roomNo, setRoomNo] = useState(\"\");\r\n    const [startRoll, setStartRoll] = useState(\"\");\r\n    const [endRoll, setEndRoll] = useState(\"\");\r\n    const [capacity, setCapacity] = useState(\"\");\r\n\r\n    const roomNoChanged = (e) => {\r\n        e.preventDefault();\r\n        setRoomNo(e.target.value);\r\n    }\r\n\r\n    const startRollChanged = (e) => {\r\n        // e.preventDefault();\r\n        let startRoll = e.target.value;\r\n        const re = /^[0-9\\b]+$/;\r\n        if (e.target.value === '' || re.test(e.target.value)) {\r\n            let startingRoll = e.target.value;\r\n\r\n            if (startingRoll !== \"\" && endRoll !== \"\") {\r\n                let intStartRoll = parseInt(startingRoll);\r\n                let intEndRoll = parseInt(endRoll);\r\n                let diff = (intEndRoll - intStartRoll) + 1;\r\n                setCapacity(diff);\r\n            }\r\n\r\n            setStartRoll(e.target.value);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const endRollChanged = (e) => {\r\n        e.preventDefault();\r\n        const re = /^[0-9\\b]+$/;\r\n        if (e.target.value === '' || re.test(e.target.value)) {\r\n            let endingRoll = e.target.value;\r\n\r\n            if (startRoll !== \"\" && endingRoll !== \"\") {\r\n                let intStartRoll = parseInt(startRoll);\r\n                let intEndRoll = parseInt(endingRoll);\r\n                let diff = (intEndRoll - intStartRoll) + 1;\r\n                setCapacity(diff);\r\n            }\r\n\r\n            setEndRoll(e.target.value);\r\n        }\r\n    }\r\n\r\n    const capacityChanged = (e) => {\r\n        e.preventDefault();\r\n        const re = /^[0-9\\b]+$/;\r\n        if (e.target.value === '' || re.test(e.target.value)) {\r\n            setCapacity(e.target.value);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"master-wrapper\">\r\n                <header style={{ marginBottom: \"0\", paddingTop: \"0\", boxShadow: \"none\" }}>\r\n                    <TopNav />\r\n                </header>\r\n                <main>\r\n                    {/* A good combobox here - https://react-select.com/home */}\r\n                    <h1>Create New Seat Plan</h1>\r\n\r\n                    <div className=\"cont box-shadow\">\r\n                        <select onChange={examChanged}>\r\n                            <option value=\"\">select an exam</option>\r\n                            {examList}\r\n                        </select>\r\n\r\n                        <div className=\"buildingBlock\">\r\n                            <select onChange={buildingChanged} value={buildingId}>\r\n                                <option value=\"\">select building</option>\r\n                                {buildingList}\r\n                            </select>\r\n                            <button id=\"addNewBuildingModalButton\" onClick={openBuildingModal}>Add</button>\r\n                        </div>\r\n\r\n                        <div className=\"floorBlock\">\r\n                            <select onChange={floorChanged} value={floorId}>\r\n                                <option value=\"\">select a floor</option>\r\n                                {floorList}\r\n                            </select>\r\n                            <button id=\"addNewFloorModalButton\" onClick={openFloorModal}>Add</button>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"saveResult\" style={{ height: \"20px\" }}>{saveResult}</div>\r\n                        <div className=\"input-row\">\r\n                            <div className=\"inputBox\">\r\n                                <label>Room No.</label>\r\n                                <input id=\"roomNo\" name=\"roomNo\" onChange={roomNoChanged} value={roomNo} type=\"text\" placeholder=\"\" autoFocus />\r\n                            </div>\r\n\r\n                            <div className=\"inputBox\">\r\n                                <label>Start Roll</label>\r\n                                <input name=\"startRoll\" onChange={startRollChanged} value={startRoll} type=\"text\" placeholder=\"(optional)\" />\r\n                            </div>\r\n                            <div className=\"inputBox\">\r\n                                <label>End Roll</label>\r\n                                <input name=\"endRoll\" onChange={endRollChanged} value={endRoll} type=\"text\" placeholder=\"(optional)\" />\r\n                            </div>\r\n\r\n                            <div className=\"inputBox\">\r\n                                <label>Total</label>\r\n                                <input name=\"roomCapacity\" onChange={capacityChanged} value={capacity} type=\"text\" maxLength=\"4\" placeholder=\"\" />\r\n                            </div>\r\n\r\n                            <div className=\"buttonCont\">\r\n                                <button className=\"saveButton\" disabled={isDisbale} onClick={createRoom} name=\"createRoom\">{buttonText}</button>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div style={{ display: \"block\" }}>\r\n                            {tableRows}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Modal\r\n                        isOpen={isBuildingModalOpen}\r\n                        onAfterOpen={afterOpenModal}\r\n                        onRequestClose={closeBuildingModal}\r\n                        style={customStyles}\r\n\r\n                        contentLabel=\"Example Modal\"\r\n                    >\r\n\r\n                        <h2 ref={_subtitle => (subtitle = _subtitle)}>Add New Building Name</h2>\r\n\r\n                        <input id=\"newBuildingName\" />\r\n\r\n                        <button onClick={closeBuildingModal}>Save</button>\r\n                    </Modal>\r\n\r\n                    <Modal\r\n                        isOpen={isFloorModalOpen}\r\n                        onAfterOpen={afterOpenModal}\r\n                        onRequestClose={closeFloorModal}\r\n                        style={customStyles}\r\n\r\n                        contentLabel=\"Example Modal New\"\r\n                    >\r\n\r\n                        <h2 ref={_subtitle => (subtitle = _subtitle)}>Add New Floor Name</h2>\r\n                        <input id=\"newFloorName\" />\r\n                        <button onClick={closeFloorModal}>Save</button>\r\n                    </Modal>\r\n                </main>\r\n                <footer>\r\n                    <Footer />\r\n                </footer>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default CreateSeatPlanNew;\r\n\r\nfunction SelectOption(props) {\r\n    return (\r\n        <option value={props.id}>{props.name}</option>\r\n    );\r\n}\r\n\r\n\r\nfunction TableRow(props) {\r\n\r\n    const [display, setDisplay] = useState(\"flex\");\r\n    const onClick = () => {\r\n\r\n        var r = window.confirm(\"Are you sure to delete this room -\" + props.r + \" ?\\nYou can add it again later.\");\r\n        if (r === true) {\r\n            let postData = new FormData();\r\n            postData.append(\"id\", props.id);\r\n            Axios.post(`${window.$apiUrl}/room.php?action=delete`, postData).then(response => {\r\n                if (response.data.issuccess) {\r\n                    setDisplay(\"none\");\r\n                    alert(\"Deleted successfully.\");\r\n                }\r\n                else {\r\n                    alert(response.data.message);\r\n                }\r\n\r\n            }).catch(error => {\r\n                console.log(error);\r\n                alert(\"Something goes wrong. Please try again\");\r\n            }); //end of axios.\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"addedRoom\" style={{ display: `${display}` }}>\r\n            <div>{props.r}</div>\r\n            <div>{props.startRoll === \"0\" ? \"-\" : props.startRoll}</div>\r\n            <div>{props.endRoll === \"0\" ? \"-\" : props.endRoll}</div>\r\n            <div>{props.total}</div>\r\n            <div><button className=\"deleteRoom\" onClick={onClick}>Delete</button></div>\r\n        </div>\r\n\r\n    );\r\n}\r\n","D:\\xampp\\htdocs\\seat-plan\\src\\components\\CreateFloor.js",["115"],"import React, {useEffect, useState} from 'react';\r\n// import { useLocation } from \"react-router-dom\";\r\nimport Axios from 'axios';\r\nimport TopNav from \"./TopNav\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\n\r\nexport default function CreateFloor(props){\r\n\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n    const[examId, setExamId]=useState(\"\");\r\n    const[eiinNo, setEiin]=useState(\"\");\r\n    const[buildingId, setBuildingId] = useState(\"\");\r\n\r\n    const[examName, setExamName]=useState(\"\");\r\n    const[reference, setReference]=useState(\"\");\r\n    // const[saveResult, setSaveResult] = useState(\"\");\r\n    const[buttonText, setButtonText]=useState(\"Next\");\r\n    const[isDisbale, setDisable]=useState(\"\");\r\n    const[buildingName, setBuildingName] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        // console.log(location.pathname); // result: '/secondpage'\r\n        // console.log(location.search); // result: '?query=abc'\r\n        setEiin(location.state.eiin)\r\n        setExamId(location.state.examId);\r\n        setBuildingId(location.state.buildingId);\r\n\r\n        let examIdData = new FormData();\r\n        examIdData.append(\"examId\", location.state.examId);\r\n        Axios.post(`${window.$apiUrl}/exam.php?action=details`, examIdData).then(response => {\r\n            const item = response.data;\r\n            setExamName(item.name);\r\n            setReference(item.reference);\r\n            }).catch(error => {\r\n                console.log(error);\r\n                alert(\"Something goes wrong. Please try again\");\r\n            }); //end of exam axios.\r\n\r\n        let buildingData = new FormData();\r\n        buildingData.append(\"id\", location.state.buildingId);\r\n        Axios.post(`${window.$apiUrl}/building.php?action=details`, buildingData).then(response => {\r\n            const item = response.data;\r\n            setBuildingName(item.name);\r\n            \r\n            }).catch(error => {\r\n                console.log(error);\r\n                alert(\"Something goes wrong. Please try again\");\r\n            }); //end of building axios.\r\n\r\n     }, []); //end of useEffect()\r\n\r\n    \r\n    \r\n     const createFloor=(e)=>{\r\n         e.preventDefault();\r\n         if(floorName.trim() ===\"\"){\r\n             alert(\"Enter floor name.\");\r\n             return;\r\n         }\r\n         let postData = new FormData();\r\n         postData.append(\"eiin\", eiinNo);\r\n         postData.append(\"buildingId\", buildingId);\r\n         postData.append(\"name\", floorName);\r\n        \r\n         setDisable(\"disabled\");\r\n         setButtonText(\"saving ...\");\r\n\r\n        Axios.post(`${window.$apiUrl}/floor.php?action=create`, postData).then(response => {\r\n            if(response.data.issuccess){\r\n                history.push({\r\n                    pathname: '/seat-plan/new/create-room',\r\n                    search: '?query=abc',\r\n                    state: { examId: examId, eiin:eiinNo, buildingId:buildingId, floorId:response.data.floorId }\r\n                });\r\n            }\r\n           else{\r\n               alert(response.data.message);\r\n                setDisable(\"\");\r\n                setButtonText(\"Try again\");\r\n           }\r\n\r\n            }).catch(error => {\r\n                console.log(error);\r\n                alert(\"Something goes wrong. Please try again.\");\r\n                setDisable(\"\");\r\n                setButtonText(\"Try again\");\r\n            }); //end of axios.\r\n    }\r\n\r\n    const[floorName, setFloorName] = useState(\"\");\r\n    const floorNameChanged=(e)=>{\r\n        e.preventDefault();\r\n        setFloorName(e.target.value);\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <TopNav/>\r\n            <div className=\"examName\">{examName}</div>\r\n            <div className=\"reference\">({reference})</div>\r\n            <h1>Create Floor</h1>\r\n            <div className=\"buildingAndFloor\">\r\n                <div className=\"buildingName\">Building: {buildingName}</div>\r\n            </div>\r\n\r\n            <div className=\"cont box-shadow\">\r\n                <input onChange={floorNameChanged} value={floorName} type=\"text\" placeholder=\"type floor name\" />\r\n                <button onClick={createFloor} disabled={isDisbale}>{buttonText}</button>\r\n            </div>\r\n\r\n    </>\r\n    );\r\n}\r\n","D:\\xampp\\htdocs\\seat-plan\\src\\components\\SeatPlanTableRow.js",["116"],"import React, { useState } from 'react';\r\nimport Axios from 'axios';\r\n\r\n\r\nexport default function SeatPlanTableRow(props){\r\n    \r\n    const[display, setDisplay] = useState(\"\");\r\n\r\n    const roomDeleted = floorId =>{\r\n        // let floorId = event.target.value;\r\n       \r\n        props.roomDeleted(floorId);\r\n    }\r\n\r\n    const onClick = () => {\r\n       \r\n        var r = window.confirm(\"Are you sure to delete this room -\" + props.r + \" ?\\nYou can add it again later.\");\r\n        if (r === true) {\r\n            let postData = new FormData();\r\n            postData.append(\"id\", props.id);\r\n            Axios.post(`${window.$apiUrl}/room.php?action=delete`, postData).then(response => {\r\n                if(response.data.issuccess){\r\n                   // setDisplay(\"none\");\r\n                    roomDeleted(props.id);\r\n                    alert(\"Deleted successfully.\");\r\n                }\r\n                else{\r\n                    alert(response.data.message);\r\n                }\r\n               \r\n            }).catch(error => {\r\n                console.log(error);\r\n                alert(\"Something goes wrong. Please try again\");\r\n            }); //end of axios.\r\n        } \r\n    }\r\n    return(\r\n        <tr style={{display:`${display}`}}>\r\n            <td>\r\n                {props.b}\r\n            </td>\r\n            <td>\r\n                {props.f}\r\n            </td>\r\n            <td>\r\n                {props.r}\r\n            </td>\r\n            <td>\r\n                {props.startRoll === \"0\"?\"-\":props.startRoll}\r\n            </td>\r\n            <td>\r\n                {props.endRoll === \"0\" ? \"-\":props.endRoll}\r\n            </td>\r\n            <td>\r\n                {props.total}\r\n            </td>\r\n            <td>\r\n               <button className=\"deleteRoom\" onClick={onClick}>Delete</button>\r\n            </td>\r\n        </tr>\r\n    );\r\n}","D:\\xampp\\htdocs\\seat-plan\\src\\Footer.js",["117"],"D:\\xampp\\htdocs\\seat-plan\\src\\components\\SelectBuilding.js",["118","119"],"D:\\xampp\\htdocs\\seat-plan\\src\\components\\CreateBuilding.js",["120"],"D:\\xampp\\htdocs\\seat-plan\\src\\components\\SelectFloor.js",["121","122","123","124","125","126","127","128"],"D:\\xampp\\htdocs\\seat-plan\\src\\components\\CreateRoom.js",["129","130","131","132"],"import React, {useEffect, useState, useFocus} from 'react';\r\n// import { useLocation } from \"react-router-dom\";\r\nimport Axios from 'axios';\r\nimport TopNav from \"./TopNav\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport \"./CreateRoom.css\";\r\n// import SeatPlanTableRow from \"./SeatPlanTableRow\";\r\n\r\nexport default function CreateRoom(props){\r\n\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n    const[eiinNo, setEiin]=useState(\"\");\r\n    const[examId, setExamId]=useState(\"\");\r\n    const[buildingId, setBuildingId] = useState(\"\");\r\n    const[buildingName, setBuildingName] = useState(\"\");\r\n    const[floorId, setFloorId]=useState(\"\");\r\n    const[floorName, setFloorName]=useState(\"\");\r\n    const[examName, setExamName]=useState(\"\");\r\n    const[reference, setReference]=useState(\"\");\r\n    const[saveResult, setSaveResult] = useState(\"\");\r\n    const[buttonText, setButtonText]=useState(\"Save & add another\");\r\n    const[isDisbale, setDisable]=useState(\"\");\r\n    \r\n    const[rooms, setRooms]=useState([]);\r\n\r\n    const tableRows = rooms.map(item => (\r\n        item\r\n    ))\r\n\r\n    // const [setFocus, focusProps] = useFocus(true);\r\n\r\n    useEffect(() => {\r\n        setEiin(location.state.eiin)\r\n        setExamId(location.state.examId);\r\n        setBuildingId(location.state.buildingId);\r\n        setFloorId(location.state.floorId);\r\n\r\n        let examIdData = new FormData();\r\n        examIdData.append(\"examId\", location.state.examId);\r\n        Axios.post(`${window.$apiUrl}/exam.php?action=details`, examIdData).then(response => {\r\n            const item = response.data;\r\n            setExamName(item.name);\r\n            setReference(item.reference);\r\n            }).catch(error => {\r\n                console.log(error);\r\n                alert(\"Something goes wrong. Please try again\");\r\n            }); //end of exam axios.\r\n\r\n        let buildingData = new FormData();\r\n        buildingData.append(\"id\", location.state.buildingId);\r\n        Axios.post(`${window.$apiUrl}/building.php?action=details`, buildingData).then(response => {\r\n            const item = response.data;\r\n            setBuildingName(item.name);\r\n            \r\n            }).catch(error => {\r\n                console.log(error);\r\n                alert(\"Something goes wrong. Please try again\");\r\n            }); //end of building axios.\r\n\r\n\r\n            let floorData = new FormData();\r\n            floorData.append(\"id\", location.state.floorId);\r\n            Axios.post(`${window.$apiUrl}/floor.php?action=details`, floorData).then(response => {\r\n                const item = response.data;\r\n                setFloorName(item.name);\r\n                }).catch(error => {\r\n                    console.log(error);\r\n                    alert(\"Something goes wrong. Please try again\");\r\n                }); //end of floor axios.\r\n\r\n     }, []); //end of useEffect()\r\n\r\n    \r\n    \r\n     const createRoom=(e)=>{\r\n         e.preventDefault();\r\n         if(roomNo.trim() === \"\"){\r\n             alert(\"Enter room number.\");\r\n             return;\r\n         }\r\n\r\n         if(capacity === \"\"){\r\n            alert(\"Enter total capacity.\");\r\n            return;\r\n        }\r\n\r\n         let postData = new FormData();\r\n         postData.append(\"eiin\", eiinNo);\r\n         postData.append(\"buildingId\", buildingId);\r\n         postData.append(\"floorId\", floorId);\r\n         postData.append(\"examId\", examId);\r\n         postData.append(\"roomNo\", roomNo);\r\n         postData.append(\"startRoll\", startRoll);\r\n         postData.append(\"endRoll\", endRoll);\r\n         postData.append(\"capacity\", capacity);\r\n        \r\n         setDisable(\"disabled\");\r\n         setButtonText(\"saving ...\");\r\n         Axios.post(`${window.$apiUrl}/room.php?action=create`, postData).then(response => {\r\n                if (response.data.issuccess) {\r\n                    setRoomNo(\"\");\r\n                    setStartRoll(\"\");\r\n                    setEndRoll(\"\");\r\n                    setCapacity(\"\");\r\n                    setSaveResult(\"Saved successfully.\");\r\n                    setDisable(\"\");\r\n                    setButtonText(\"Save & add another\");\r\n                    document.getElementById(\"roomNo\").focus();\r\n                    setTimeout(() => {\r\n                        setSaveResult(\" \");\r\n                    }, 4000);\r\n\r\n                setRooms(rooms => [ <TableRow key={response.data.roomId} id={response.data.roomId} r={roomNo} startRoll={startRoll} endRoll={endRoll} total={capacity} />, ...rooms]);\r\n\r\n                }\r\n                else {\r\n                    alert(response.data.message);\r\n                    setDisable(\"\");\r\n                    setButtonText(\"Try again\");\r\n                }\r\n\r\n         }).catch(error => {\r\n             console.log(error);\r\n             alert(\"Failed to save\");\r\n             setDisable(\"\");\r\n             setButtonText(\"Try again\");\r\n         }); //end of axios.\r\n       \r\n    }\r\n\r\n    // const[floorName, setFloorName] = useState(\"\");\r\n    // const floorNameChanged=(e)=>{\r\n    //     e.preventDefault();\r\n    //     setFloorName(e.target.value);\r\n    // }\r\n\r\n    const[roomNo, setRoomNo] = useState(\"\");\r\n    const[startRoll, setStartRoll] = useState(\"\");\r\n    const[endRoll, setEndRoll] = useState(\"\");\r\n    const[capacity, setCapacity] = useState(\"\");\r\n\r\n    const roomNoChanged=(e)=>{\r\n        e.preventDefault();\r\n        setRoomNo(e.target.value);\r\n    }\r\n\r\n    const startRollChanged=(e)=>{\r\n        // e.preventDefault();\r\n        let startRoll = e.target.value;\r\n        const re = /^[0-9\\b]+$/;\r\n        if (e.target.value === '' || re.test(e.target.value)) {\r\n            let startingRoll = e.target.value;\r\n            \r\n            if(startingRoll !==\"\" && endRoll !==\"\"){\r\n                let intStartRoll = parseInt(startingRoll);\r\n                let intEndRoll = parseInt(endRoll);\r\n                let diff = intEndRoll - intStartRoll;\r\n                setCapacity(diff);\r\n            }\r\n\r\n            setStartRoll(e.target.value);\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    const endRollChanged=(e)=>{\r\n        e.preventDefault();\r\n        const re = /^[0-9\\b]+$/;\r\n        if (e.target.value === '' || re.test(e.target.value)) {\r\n            let endingRoll = e.target.value;\r\n            \r\n            if(startRoll !==\"\" && endingRoll !==\"\"){\r\n                let intStartRoll = parseInt(startRoll);\r\n                let intEndRoll = parseInt(endingRoll);\r\n                let diff = intEndRoll - intStartRoll;\r\n                setCapacity(diff);\r\n            }\r\n\r\n            setEndRoll(e.target.value);\r\n        }\r\n    }\r\n\r\n    const capacityChanged = (e) => {\r\n        e.preventDefault();\r\n        const re = /^[0-9\\b]+$/;\r\n        if (e.target.value === '' || re.test(e.target.value)) {\r\n            setCapacity(e.target.value);\r\n        }\r\n    }\r\n\r\n\r\n    return(\r\n        <>\r\n            <TopNav/>\r\n            <div className=\"examName\">{examName}</div>\r\n            <div className=\"reference\">({reference})</div>\r\n\r\n            <h1>Create Room</h1>\r\n            \r\n            <div className=\"buildingAndFloor\">\r\n                <div className=\"buildingName\">Building: {buildingName}</div>\r\n                <div className=\"floorName\">Floor: {floorName}</div>\r\n            </div>\r\n           \r\n\r\n            <div className=\"cont box-shadow\">\r\n                <div className=\"saveResult\" style={{height:\"20px\"}}>{saveResult}</div>\r\n                <div className=\"input-row\">\r\n                    <div className=\"inputBox\">\r\n                        <label>Room No.</label>\r\n                        <input id=\"roomNo\" name=\"roomNo\" onChange={roomNoChanged} value={roomNo} type=\"text\"  placeholder=\"\"  autoFocus />\r\n                    </div>\r\n                    \r\n                    <div className=\"inputBox\">\r\n                        <label>Start Roll</label>\r\n                        <input name=\"startRoll\" onChange={startRollChanged} value={startRoll} type=\"text\" placeholder=\"(optional)\" />\r\n                    </div>\r\n                    <div className=\"inputBox\">\r\n                        <label>End Roll</label>\r\n                        <input name=\"endRoll\" onChange={endRollChanged} value={endRoll} type=\"text\" placeholder=\"(optional)\" />\r\n                    </div>\r\n\r\n                    <div className=\"inputBox\">\r\n                        <label>Total</label>\r\n                        <input name=\"roomCapacity\" onChange={capacityChanged}  value={capacity} type=\"text\" maxLength=\"4\" placeholder=\"\" />\r\n                    </div>\r\n\r\n                    <div className=\"buttonCont\">\r\n                    <button className=\"saveButton\"  disabled={isDisbale} onClick={createRoom} name=\"createRoom\">{buttonText}</button>\r\n                    </div>\r\n                    \r\n                </div>\r\n\r\n                <div style={{display:\"block\"}}>\r\n                        {tableRows}\r\n                </div>\r\n            </div>\r\n    </>\r\n    );\r\n}\r\n\r\nfunction TableRow(props){\r\n    \r\n    const[display, setDisplay] = useState(\"flex\");\r\n    const onClick = () => {\r\n       \r\n        var r = window.confirm(\"Are you sure to delete this room -\" + props.r + \" ?\\nYou can add it again later.\");\r\n        if (r === true) {\r\n            let postData = new FormData();\r\n            postData.append(\"id\", props.id);\r\n            Axios.post(`${window.$apiUrl}/room.php?action=delete`, postData).then(response => {\r\n                if(response.data.issuccess){\r\n                    setDisplay(\"none\");\r\n                    alert(\"Deleted successfully.\");\r\n                }\r\n                else{\r\n                    alert(response.data.message);\r\n                }\r\n               \r\n            }).catch(error => {\r\n                console.log(error);\r\n                alert(\"Something goes wrong. Please try again\");\r\n            }); //end of axios.\r\n        } \r\n    }\r\n\r\n\r\n    return(\r\n\r\n            <div className=\"addedRoom\" style={{display:`${display}`}}>\r\n                <div>{props.r}</div>\r\n                <div>{props.startRoll === \"0\"?\"-\":props.startRoll}</div>\r\n                <div>{props.endRoll === \"0\" ? \"-\":props.endRoll}</div>\r\n                <div>{props.total}</div>\r\n                <div><button className=\"deleteRoom\" onClick={onClick}>Delete</button></div>\r\n            </div>\r\n       \r\n    );\r\n}\r\n","D:\\xampp\\htdocs\\seat-plan\\src\\components\\TopNav.js",[],["133","134"],"D:\\xampp\\htdocs\\seat-plan\\src\\App.js",["135","136","137","138","139","140"],"import React from \"react\";\r\nimport './App.css';\r\nimport Home from \"./components/home/Home\";\r\nimport Login from \"./Login\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport ViewSeatPlan from \"./components/ViewSeatPlan\";\r\nimport CreateSeatPlan from \"./components/CreateSeatPlan\";\r\nimport CreateSeatPlanNew from \"./components/CreateSeatPlanNew\";\r\nimport SelectBuilding from \"./components/SelectBuilding\";\r\nimport CreateBuilding from \"./components/CreateBuilding\";\r\nimport SelectFloor from \"./components/SelectFloor\";\r\nimport CreateFloor from \"./components/CreateFloor\";\r\nimport CreateRoom from \"./components/CreateRoom\";\r\n\r\nimport { BrowserRouter as Router, Switch, Route, Redirect} from 'react-router-dom';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n    \r\n      <Router>\r\n        \r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route path=\"/home\" component={Login} />\r\n          <Route path=\"/login\" component={Login} />\r\n         \r\n\r\n          <Route exact path=\"/dashboard\" component={Dashboard} />\r\n          {/* <Link to=\"\">Create Seat Plan</Link> */}\r\n          <Route exact path=\"/seat-plan/new\" component={CreateSeatPlanNew} />\r\n          {/* <Route exact path=\"/seat-plan/new/select-exam\" component={CreateSeatPlan} /> */}\r\n          {/* <Route path=\"/seat-plan/new/select-building\" component={SelectBuilding} />\r\n          <Route path=\"/seat-plan/new/create-building\" component={CreateBuilding} />\r\n          <Route path=\"/seat-plan/new/select-floor\" component={SelectFloor} />\r\n          <Route path=\"/seat-plan/new/create-floor\" component={CreateFloor} />\r\n          <Route path=\"/seat-plan/new/create-room\" component={CreateRoom} /> */}\r\n          <Route exact path=\"/view-seat-plan\" component={ViewSeatPlan} />\r\n          <Redirect to=\"/\"/>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n\r\n  \r\n}\r\n\r\nexport default App;\r\n","D:\\xampp\\htdocs\\seat-plan\\src\\reportWebVitals.js",[],"D:\\xampp\\htdocs\\seat-plan\\src\\components\\home\\Home.js",["141","142","143"],"import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport \"./Home.css\";\r\nimport { Link, useHistory} from 'react-router-dom';\r\n\r\n\r\nexport default function Home(props){\r\n    const history = useHistory();\r\n    const [departmentId, setDepartmentId] = useState(\"\");\r\n    const [departments, setDepartments] = useState([]);\r\n    //Get data on component load event\r\n    useEffect(() => {\r\n        Axios.post(`${window.$apiUrl}/department-ministry.php?action=list`).then(response => {\r\n            const items = response.data;\r\n            let local_count = 0;\r\n            items.map((item) => {\r\n                local_count += 1;\r\n                setDepartments(departments => [...departments, <SelectOption key={item.departmentId} id={item.departmentId} name={item.departmentName} />]);\r\n            })\r\n\r\n        }).catch(error => {\r\n            console.log(error);\r\n            alert(\"Something goes wrong. Please try again\");\r\n        }); //end of axios.\r\n\r\n    }, []); //end of useEffect\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    //combobox change event handler\r\n    const goToNext = (e)=>{\r\n        e.preventDefault();\r\n        if (String(departmentId).trim() === \"\") {\r\n            alert(\"Select department.\");\r\n            return;\r\n        }\r\n\r\n        history.push({\r\n            pathname: '/login',\r\n            // search: '?query=abc',\r\n            state: { departmentId: departmentId }\r\n        });\r\n    }\r\n\r\n    const departmentChanged = (e) => {\r\n        setDepartmentId(e.target.value);\r\n    }\r\n\r\n    return(\r\n        <div className=\"master-wrapper\">\r\n            <main>\r\n                <h1>Seat Plan Management</h1>\r\n              \r\n                <div className=\"selectWrapper\">\r\n                    <select className=\"selectDepartment\" onChange={departmentChanged}>\r\n                        <option value=\"\">select department</option>\r\n                            {departments}\r\n                    </select>\r\n                    <div className=\"nextButton\" onClick={goToNext} >NEXT</div>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nfunction SelectOption(props) {\r\n    return (\r\n        <option value={props.id}>{props.name}</option>\r\n    );\r\n}",{"ruleId":"144","severity":1,"message":"145","line":9,"column":20,"nodeType":"146","messageId":"147","endLine":9,"endColumn":27},{"ruleId":"144","severity":1,"message":"148","line":10,"column":20,"nodeType":"146","messageId":"147","endLine":10,"endColumn":29},{"ruleId":"144","severity":1,"message":"149","line":15,"column":26,"nodeType":"146","messageId":"147","endLine":15,"endColumn":41},{"ruleId":"150","severity":1,"message":"151","line":25,"column":30,"nodeType":"152","messageId":"153","endLine":25,"endColumn":32},{"ruleId":"154","severity":1,"message":"155","line":34,"column":8,"nodeType":"156","endLine":34,"endColumn":10,"suggestions":"157"},{"ruleId":"150","severity":1,"message":"151","line":59,"column":30,"nodeType":"152","messageId":"153","endLine":59,"endColumn":32},{"ruleId":"144","severity":1,"message":"158","line":60,"column":17,"nodeType":"146","messageId":"147","endLine":60,"endColumn":28},{"ruleId":"159","severity":1,"message":"160","line":75,"column":20,"nodeType":"161","messageId":"162","endLine":75,"endColumn":22},{"ruleId":"150","severity":1,"message":"151","line":88,"column":30,"nodeType":"152","messageId":"153","endLine":88,"endColumn":32},{"ruleId":"144","severity":1,"message":"158","line":89,"column":17,"nodeType":"146","messageId":"147","endLine":89,"endColumn":28},{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","replacedBy":"166"},{"ruleId":"144","severity":1,"message":"167","line":18,"column":19,"nodeType":"146","messageId":"147","endLine":18,"endColumn":23},{"ruleId":"154","severity":1,"message":"168","line":27,"column":8,"nodeType":"156","endLine":27,"endColumn":10,"suggestions":"169"},{"ruleId":"170","severity":1,"message":"171","line":75,"column":29,"nodeType":"172","endLine":75,"endColumn":107},{"ruleId":"173","severity":1,"message":"174","line":84,"column":21,"nodeType":"172","endLine":86,"endColumn":84},{"ruleId":"144","severity":1,"message":"145","line":10,"column":20,"nodeType":"146","messageId":"147","endLine":10,"endColumn":27},{"ruleId":"150","severity":1,"message":"151","line":66,"column":30,"nodeType":"152","messageId":"153","endLine":66,"endColumn":32},{"ruleId":"154","severity":1,"message":"175","line":76,"column":8,"nodeType":"156","endLine":76,"endColumn":10,"suggestions":"176"},{"ruleId":"150","severity":1,"message":"151","line":96,"column":30,"nodeType":"152","messageId":"153","endLine":96,"endColumn":32},{"ruleId":"177","severity":1,"message":"178","line":275,"column":115,"nodeType":"179","endLine":275,"endColumn":126},{"ruleId":"144","severity":1,"message":"180","line":4,"column":10,"nodeType":"146","messageId":"147","endLine":4,"endColumn":18},{"ruleId":"144","severity":1,"message":"145","line":9,"column":20,"nodeType":"146","messageId":"147","endLine":9,"endColumn":27},{"ruleId":"150","severity":1,"message":"151","line":26,"column":30,"nodeType":"152","messageId":"153","endLine":26,"endColumn":32},{"ruleId":"154","severity":1,"message":"181","line":35,"column":8,"nodeType":"156","endLine":35,"endColumn":10,"suggestions":"182"},{"ruleId":"144","severity":1,"message":"180","line":4,"column":10,"nodeType":"146","messageId":"147","endLine":4,"endColumn":18},{"ruleId":"144","severity":1,"message":"183","line":4,"column":20,"nodeType":"146","messageId":"147","endLine":4,"endColumn":30},{"ruleId":"144","severity":1,"message":"184","line":4,"column":32,"nodeType":"146","messageId":"147","endLine":4,"endColumn":42},{"ruleId":"144","severity":1,"message":"145","line":107,"column":20,"nodeType":"146","messageId":"147","endLine":107,"endColumn":27},{"ruleId":"144","severity":1,"message":"149","line":108,"column":26,"nodeType":"146","messageId":"147","endLine":108,"endColumn":41},{"ruleId":"150","severity":1,"message":"151","line":145,"column":30,"nodeType":"152","messageId":"153","endLine":145,"endColumn":32},{"ruleId":"150","severity":1,"message":"151","line":161,"column":30,"nodeType":"152","messageId":"153","endLine":161,"endColumn":32},{"ruleId":"154","severity":1,"message":"185","line":171,"column":8,"nodeType":"156","endLine":171,"endColumn":10,"suggestions":"186"},{"ruleId":"150","severity":1,"message":"151","line":186,"column":30,"nodeType":"152","messageId":"153","endLine":186,"endColumn":32},{"ruleId":"144","severity":1,"message":"187","line":293,"column":13,"nodeType":"146","messageId":"147","endLine":293,"endColumn":22},{"ruleId":"154","severity":1,"message":"188","line":52,"column":9,"nodeType":"156","endLine":52,"endColumn":11,"suggestions":"189"},{"ruleId":"144","severity":1,"message":"190","line":7,"column":20,"nodeType":"146","messageId":"147","endLine":7,"endColumn":30},{"ruleId":"191","severity":1,"message":"192","line":12,"column":58,"nodeType":"179","endLine":12,"endColumn":73},{"ruleId":"150","severity":1,"message":"151","line":36,"column":30,"nodeType":"152","messageId":"153","endLine":36,"endColumn":32},{"ruleId":"154","severity":1,"message":"193","line":57,"column":9,"nodeType":"156","endLine":57,"endColumn":11,"suggestions":"194"},{"ruleId":"154","severity":1,"message":"193","line":40,"column":8,"nodeType":"156","endLine":40,"endColumn":10,"suggestions":"195"},{"ruleId":"144","severity":1,"message":"196","line":24,"column":11,"nodeType":"146","messageId":"147","endLine":24,"endColumn":21},{"ruleId":"144","severity":1,"message":"197","line":24,"column":23,"nodeType":"146","messageId":"147","endLine":24,"endColumn":36},{"ruleId":"144","severity":1,"message":"198","line":25,"column":11,"nodeType":"146","messageId":"147","endLine":25,"endColumn":21},{"ruleId":"144","severity":1,"message":"199","line":25,"column":23,"nodeType":"146","messageId":"147","endLine":25,"endColumn":36},{"ruleId":"144","severity":1,"message":"200","line":26,"column":11,"nodeType":"146","messageId":"147","endLine":26,"endColumn":20},{"ruleId":"144","severity":1,"message":"201","line":26,"column":22,"nodeType":"146","messageId":"147","endLine":26,"endColumn":32},{"ruleId":"150","severity":1,"message":"151","line":43,"column":30,"nodeType":"152","messageId":"153","endLine":43,"endColumn":32},{"ruleId":"154","severity":1,"message":"188","line":75,"column":9,"nodeType":"156","endLine":75,"endColumn":11,"suggestions":"202"},{"ruleId":"144","severity":1,"message":"203","line":1,"column":37,"nodeType":"146","messageId":"147","endLine":1,"endColumn":45},{"ruleId":"144","severity":1,"message":"204","line":12,"column":11,"nodeType":"146","messageId":"147","endLine":12,"endColumn":18},{"ruleId":"154","severity":1,"message":"205","line":73,"column":9,"nodeType":"156","endLine":73,"endColumn":11,"suggestions":"206"},{"ruleId":"144","severity":1,"message":"187","line":151,"column":13,"nodeType":"146","messageId":"147","endLine":151,"endColumn":22},{"ruleId":"163","replacedBy":"207"},{"ruleId":"165","replacedBy":"208"},{"ruleId":"144","severity":1,"message":"209","line":7,"column":8,"nodeType":"146","messageId":"147","endLine":7,"endColumn":22},{"ruleId":"144","severity":1,"message":"210","line":9,"column":8,"nodeType":"146","messageId":"147","endLine":9,"endColumn":22},{"ruleId":"144","severity":1,"message":"211","line":10,"column":8,"nodeType":"146","messageId":"147","endLine":10,"endColumn":22},{"ruleId":"144","severity":1,"message":"212","line":11,"column":8,"nodeType":"146","messageId":"147","endLine":11,"endColumn":19},{"ruleId":"144","severity":1,"message":"213","line":12,"column":8,"nodeType":"146","messageId":"147","endLine":12,"endColumn":19},{"ruleId":"144","severity":1,"message":"214","line":13,"column":8,"nodeType":"146","messageId":"147","endLine":13,"endColumn":18},{"ruleId":"144","severity":1,"message":"215","line":4,"column":10,"nodeType":"146","messageId":"147","endLine":4,"endColumn":14},{"ruleId":"150","severity":1,"message":"151","line":16,"column":30,"nodeType":"152","messageId":"153","endLine":16,"endColumn":32},{"ruleId":"144","severity":1,"message":"158","line":17,"column":17,"nodeType":"146","messageId":"147","endLine":17,"endColumn":28},"no-unused-vars","'setEIIN' is assigned a value but never used.","Identifier","unusedVar","'setExamId' is assigned a value but never used.","'setDepartmentId' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'departmentId' and 'examId'. Either include them or remove the dependency array.","ArrayExpression",["216"],"'local_count' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["217"],"no-negated-in-lhs",["218"],"'data' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'location.state.departmentId'. Either include it or remove the dependency array.",["219"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","React Hook useEffect has a missing dependency: 'eiinNo'. Either include it or remove the dependency array.",["220"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Redirect' is defined but never used.","React Hook useEffect has a missing dependency: 'examId'. Either include it or remove the dependency array.",["221"],"'withRouter' is defined but never used.","'useHistory' is defined but never used.","React Hook useEffect has missing dependencies: 'departmentId' and 'eiinNo'. Either include them or remove the dependency array.",["222"],"'startRoll' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'location.state.buildingId', 'location.state.eiin', and 'location.state.examId'. Either include them or remove the dependency array.",["223"],"'setDisplay' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","React Hook useEffect has missing dependencies: 'location.state.eiin' and 'location.state.id'. Either include them or remove the dependency array.",["224"],["225"],"'saveResult' is assigned a value but never used.","'setSaveResult' is assigned a value but never used.","'buttonText' is assigned a value but never used.","'setButtonText' is assigned a value but never used.","'isDisbale' is assigned a value but never used.","'setDisable' is assigned a value but never used.",["226"],"'useFocus' is defined but never used.","'history' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'location.state.buildingId', 'location.state.eiin', 'location.state.examId', and 'location.state.floorId'. Either include them or remove the dependency array.",["227"],["217"],["218"],"'CreateSeatPlan' is defined but never used.","'SelectBuilding' is defined but never used.","'CreateBuilding' is defined but never used.","'SelectFloor' is defined but never used.","'CreateFloor' is defined but never used.","'CreateRoom' is defined but never used.","'Link' is defined but never used.",{"desc":"228","fix":"229"},"no-global-assign","no-unsafe-negation",{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"240","fix":"242"},{"desc":"238","fix":"243"},{"desc":"244","fix":"245"},"Update the dependencies array to be: [departmentId, examId]",{"range":"246","text":"247"},"Update the dependencies array to be: [location.state.departmentId]",{"range":"248","text":"249"},"Update the dependencies array to be: [eiinNo]",{"range":"250","text":"251"},"Update the dependencies array to be: [examId]",{"range":"252","text":"253"},"Update the dependencies array to be: [departmentId, eiinNo]",{"range":"254","text":"255"},"Update the dependencies array to be: [location.state.buildingId, location.state.eiin, location.state.examId]",{"range":"256","text":"257"},"Update the dependencies array to be: [location.state.eiin, location.state.id]",{"range":"258","text":"259"},{"range":"260","text":"259"},{"range":"261","text":"257"},"Update the dependencies array to be: [location.state.buildingId, location.state.eiin, location.state.examId, location.state.floorId]",{"range":"262","text":"263"},[1427,1429],"[departmentId, examId]",[1063,1065],"[location.state.departmentId]",[2998,3000],"[eiinNo]",[1237,1239],"[examId]",[5759,5761],"[departmentId, eiinNo]",[2089,2091],"[location.state.buildingId, location.state.eiin, location.state.examId]",[2155,2157],"[location.state.eiin, location.state.id]",[1490,1492],[3038,3040],[2871,2873],"[location.state.buildingId, location.state.eiin, location.state.examId, location.state.floorId]"]